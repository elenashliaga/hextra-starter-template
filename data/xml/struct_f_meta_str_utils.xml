<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_f_meta_str_utils" kind="struct" language="C++" prot="public">
    <compoundname>FMetaStrUtils</compoundname>
    <includes refid="_meta_str_utils_8h" local="no">MetaStrUtils.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_meta_str_utils_1ab61ef01275aa4aedd9e0d8d947c89540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaStrUtils::FMetaStrUtils</definition>
        <argsstring>()</argsstring>
        <name>FMetaStrUtils</name>
        <qualifiedname>FMetaStrUtils::FMetaStrUtils</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="26" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaStrUtils.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a3d664e6cff91ffb7beadd38d468a9751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaStrUtils::~FMetaStrUtils</definition>
        <argsstring>()</argsstring>
        <name>~FMetaStrUtils</name>
        <qualifiedname>FMetaStrUtils::~FMetaStrUtils</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="27" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaStrUtils.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_f_meta_str_utils_1a97786f4467234a7904305903a497d404" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FMetaStrUtils::FStringToStdString</definition>
        <argsstring>(const FString &amp;Text)</argsstring>
        <name>FStringToStdString</name>
        <qualifiedname>FMetaStrUtils::FStringToStdString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Text</declname>
        </param>
        <briefdescription>
<para>Преобразует FString в std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Text</parametername>
</parameternamelist>
<parameterdescription>
<para>FString, который нужно преобразовать </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string Преобразованный std::string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="35" column="28" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaStrUtils.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1aaab0c12ce1d69143612a4fcffd00f730" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FMetaStrUtils::StdStringToFString</definition>
        <argsstring>(const std::string &amp;Text)</argsstring>
        <name>StdStringToFString</name>
        <qualifiedname>FMetaStrUtils::StdStringToFString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::string &amp;</type>
          <declname>Text</declname>
        </param>
        <briefdescription>
<para>Конвертирует std::string в FString. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Text</parametername>
</parameternamelist>
<parameterdescription>
<para>std::string, который подлежит конвертации </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FString Преобразованный FString </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="42" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaStrUtils.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a3086f10baec386395e48b4b614847ffb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float FMetaStrUtils::GetFloatFromString</definition>
        <argsstring>(const std::string &amp;Text)</argsstring>
        <name>GetFloatFromString</name>
        <qualifiedname>FMetaStrUtils::GetFloatFromString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::string &amp;</type>
          <declname>Text</declname>
        </param>
        <briefdescription>
<para>Извлекает значение типа float из строки </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает строку в качестве входных данных и пытается преобразовать ее в значение типа float.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Text</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка, из которой извлекается значение float </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Значение float, извлеченное из строки </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="51" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaStrUtils.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a365dcf84d0cda67f3cf498d963ff24fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>static TArray&lt; FString &gt; FMetaStrUtils::SeparateStringToStringArray</definition>
        <argsstring>(const FString &amp;String, const FString &amp;Separator=&quot; &quot;)</argsstring>
        <name>SeparateStringToStringArray</name>
        <qualifiedname>FMetaStrUtils::SeparateStringToStringArray</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>String</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
<para>Разбивает FString на массив подстрок на основе разделителя </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод берет FString и разбивает его на массив подстрок с использованием разделителя. Если строка пуста, выводится предупреждающее сообщение и возвращается пустой массив.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>FString, который нужно разбить на подстроки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Separator</parametername>
</parameternamelist>
<parameterdescription>
<para>Разделитель, используемый для разбиения строки (по умолчанию пробел) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TArray&lt;FString&gt; Массив подстрок, сгенерированных из исходной строки </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="63" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="63" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a1093a5e8f5ade4689e7fe7ea7143dd17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>static FString FMetaStrUtils::DeleteSpaceFromString</definition>
        <argsstring>(const FString &amp;String)</argsstring>
        <name>DeleteSpaceFromString</name>
        <qualifiedname>FMetaStrUtils::DeleteSpaceFromString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>String</declname>
        </param>
        <briefdescription>
<para>Удаляет все пробелы из указанной строки FString. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает FString и удаляет из него все пробелы. Если строка пуста, выводится предупреждающее сообщение и возвращается пустая строка.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>FString, из которого нужно удалить пробелы </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FString Результат - строка без пробелов </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="103" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="103" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a6dee0d080d1af524708efd882b3d3b11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>static FString FMetaStrUtils::FormatString</definition>
        <argsstring>(FString FindString, const FString &amp;SymbolDelete=&quot;!@#$%^&amp;*()_+{}[]:;\&quot;&lt;&gt;?*/-+№.,&apos;&quot;)</argsstring>
        <name>FormatString</name>
        <qualifiedname>FMetaStrUtils::FormatString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FindString</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>SymbolDelete</declname>
          <defval>&quot;!@#$%^&amp;*()_+{}[]:;\&quot;&lt;&gt;?*/-+№.,&apos;&quot;</defval>
        </param>
        <briefdescription>
<para>Форматирует заданный FString путем удаления указанных символов </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает FString в качестве входных данных и удаляет из него указанные символы. Если FString пуст, выводится предупреждающее сообщение и возвращается пустой FString.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FindString</parametername>
</parameternamelist>
<parameterdescription>
<para>FString, который нужно отформатировать </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SymbolDelete</parametername>
</parameternamelist>
<parameterdescription>
<para>Символы, которые должны быть удалены из FindString (по умолчанию &quot;!@#$%^&amp;*()_+{}[]:;&lt;&gt;\?&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="148" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="148" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a7ec91607235e58dfa644bad12d6d99b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>static FString FMetaStrUtils::FormatRussianStringToCase</definition>
        <argsstring>(const FString &amp;String, bool bLowerCase=true)</argsstring>
        <name>FormatRussianStringToCase</name>
        <qualifiedname>FMetaStrUtils::FormatRussianStringToCase</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>String</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bLowerCase</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Преобразует указанный FString в строчные или прописные буквы. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает FString в качестве входных данных и преобразует его либо в строчные, либо в прописные буквы, в зависимости от значения параметра bLowerCase. Если входная строка пуста, выводится предупреждающее сообщение и возвращается пустой FString.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>FString, который нужно форматировать </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bLowerCase</parametername>
</parameternamelist>
<parameterdescription>
<para>(необязательно) Указывает, должен ли вывод быть в нижнем регистре (по умолчанию true) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FString Отформатированный FString </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="175" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="175" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a4fedfe02260b7f33325ffdd3ea958429" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>static TArray&lt; FString &gt; FMetaStrUtils::DeleteDublicateFromStringArr</definition>
        <argsstring>(const TArray&lt; FString &gt; &amp;Array)</argsstring>
        <name>DeleteDublicateFromStringArr</name>
        <qualifiedname>FMetaStrUtils::DeleteDublicateFromStringArr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;</type>
          <declname>Array</declname>
        </param>
        <briefdescription>
<para>Удаляет дублирующиеся элементы из массива строк </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает входной массив строк, удаляет из него любые дублирующиеся элементы и возвращает новый массив с удаленными дубликатами.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Array</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив строк, из которого удаляются дубликаты </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TArray&lt;FString&gt; Результирующий массив с удаленными дублирующими элементами </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="212" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="212" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_str_utils_1a3ae381217b4631a22e2eb1bd16bbfae8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>static FString FMetaStrUtils::BoolToStr</definition>
        <argsstring>(bool Bool)</argsstring>
        <name>BoolToStr</name>
        <qualifiedname>FMetaStrUtils::BoolToStr</qualifiedname>
        <param>
          <type>bool</type>
          <declname>Bool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="227" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="227" bodyend="230"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" line="21" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaStrUtils.h" bodystart="22" bodyend="231"/>
    <listofallmembers>
      <member refid="struct_f_meta_str_utils_1a3ae381217b4631a22e2eb1bd16bbfae8" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>BoolToStr</name></member>
      <member refid="struct_f_meta_str_utils_1a4fedfe02260b7f33325ffdd3ea958429" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>DeleteDublicateFromStringArr</name></member>
      <member refid="struct_f_meta_str_utils_1a1093a5e8f5ade4689e7fe7ea7143dd17" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>DeleteSpaceFromString</name></member>
      <member refid="struct_f_meta_str_utils_1ab61ef01275aa4aedd9e0d8d947c89540" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>FMetaStrUtils</name></member>
      <member refid="struct_f_meta_str_utils_1a7ec91607235e58dfa644bad12d6d99b7" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>FormatRussianStringToCase</name></member>
      <member refid="struct_f_meta_str_utils_1a6dee0d080d1af524708efd882b3d3b11" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>FormatString</name></member>
      <member refid="struct_f_meta_str_utils_1a97786f4467234a7904305903a497d404" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>FStringToStdString</name></member>
      <member refid="struct_f_meta_str_utils_1a3086f10baec386395e48b4b614847ffb" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>GetFloatFromString</name></member>
      <member refid="struct_f_meta_str_utils_1a365dcf84d0cda67f3cf498d963ff24fb" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>SeparateStringToStringArray</name></member>
      <member refid="struct_f_meta_str_utils_1aaab0c12ce1d69143612a4fcffd00f730" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>StdStringToFString</name></member>
      <member refid="struct_f_meta_str_utils_1a3d664e6cff91ffb7beadd38d468a9751" prot="public" virt="non-virtual"><scope>FMetaStrUtils</scope><name>~FMetaStrUtils</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
