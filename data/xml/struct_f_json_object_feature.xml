<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_f_json_object_feature" kind="struct" language="C++" prot="public">
    <compoundname>FJsonObjectFeature</compoundname>
    <includes refid="_geo_json_wrapper_types_8h" local="no">GeoJsonWrapperTypes.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_f_json_object_feature_1a9e4f9de33357a05399cb8d50d17a8674" prot="public" static="no" mutable="no">
        <type><ref refid="_geo_json_wrapper_types_8h_1abe0c1594da7eaae696f40d7abd5cb36d" kindref="member">EGeoJsonType</ref></type>
        <definition>EGeoJsonType FJsonObjectFeature::GeometryType</definition>
        <argsstring></argsstring>
        <name>GeometryType</name>
        <qualifiedname>FJsonObjectFeature::GeometryType</qualifiedname>
        <initializer>= <ref refid="_geo_json_wrapper_types_8h_1abe0c1594da7eaae696f40d7abd5cb36da6adf97f83acf6453d4a6a4b1070f3754" kindref="member">EGeoJsonType::None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="128" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_json_object_feature_1aaf7522f0c14dea0b53c62d3c44ad3197" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_json_geometry" kindref="compound">FJsonGeometry</ref></type>
        <definition>FJsonGeometry FJsonObjectFeature::Geometry</definition>
        <argsstring></argsstring>
        <name>Geometry</name>
        <qualifiedname>FJsonObjectFeature::Geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="131" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_json_object_feature_1aff54a5ac2913741ef144f92836048408" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TMap&lt;FString, FString&gt; FJsonObjectFeature::Properties</definition>
        <argsstring></argsstring>
        <name>Properties</name>
        <qualifiedname>FJsonObjectFeature::Properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="134" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_json_object_feature_1a8c1f0937b3059dbe18886b17d444a69d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TMap&lt;FString, FString&gt; FJsonObjectFeature::OtherFields</definition>
        <argsstring></argsstring>
        <name>OtherFields</name>
        <qualifiedname>FJsonObjectFeature::OtherFields</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="137" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="137" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_json_object_feature_1a009a0e79aa534d96d2a2e563c663a080" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_geo_json_wrapper_types_8h_1abe0c1594da7eaae696f40d7abd5cb36d" kindref="member">EGeoJsonType</ref></type>
            <declname>FeatureGeometryType</declname>
            <defname>FeatureGeometryType</defname>
          </param>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool FJsonObjectFeature::TryGetTemplateGeometry</definition>
        <argsstring>(TValueType &amp;Result) const</argsstring>
        <name>TryGetTemplateGeometry</name>
        <qualifiedname>FJsonObjectFeature::TryGetTemplateGeometry</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref> &amp;</type>
          <declname>Result</declname>
        </param>
        <briefdescription>
<para>Шаблонная функция-геттер для геометрий различных типов </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Result</parametername>
</parameternamelist>
<parameterdescription>
<para>Выходной параметр, в котором будет сохранена извлеченная геометрия </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если шаблонная геометрия успешно извлечена, false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="146" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="233" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_object_feature_1a940cf3bb518a057a9fbe3a42b0340c75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref></type>
        <definition>TValueType FJsonObjectFeature::GetPropertyWithDefault</definition>
        <argsstring>(const FString &amp;Key, const TValueType &amp;Default) const</argsstring>
        <name>GetPropertyWithDefault</name>
        <qualifiedname>FJsonObjectFeature::GetPropertyWithDefault</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref> &amp;</type>
          <declname>Default</declname>
        </param>
        <briefdescription>
<para>Ищет значение с указанным ключом в свойствах и дополнительных параметрах и приводит его к указанному типу. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип искомого значения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>Ключ искомого значения. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Default</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение по умолчанию, возвращаемое при отсутствии заданного ключа в контейнере. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение, соответствующее заданному ключу и приведенное к указанному типу, если ключ найден, иначе - значение по умолчанию. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="157" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="245" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_object_feature_1ae3e36bda55074e5c5e3263e4b1f4b660" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool FJsonObjectFeature::TryGetProperty</definition>
        <argsstring>(const FString &amp;Key, TValueType &amp;Result) const</argsstring>
        <name>TryGetProperty</name>
        <qualifiedname>FJsonObjectFeature::TryGetProperty</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TValueType</ref> &amp;</type>
          <declname>Result</declname>
        </param>
        <briefdescription>
<para>Ищет значение с указанным ключом в свойствах и дополнительных параметрах и приводит его к указанному типу. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип искомого значения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>Ключ искомого значения. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Result</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект, в который будет записан результат. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если объект с указанным ключом найден, иначе - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="168" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="256" bodyend="259"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Структура, представляющая GeoJSON Feature. </para>
    </briefdescription>
    <detaileddescription>
<para>Объект Feature состоит из геометрии, её типа и дополнительных свойств геометрии </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>FJsonGeometry</label>
        <link refid="struct_f_json_geometry"/>
      </node>
      <node id="1">
        <label>FJsonObjectFeature</label>
        <link refid="struct_f_json_object_feature"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Geometry</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" line="123" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonDataStructures/GeoJsonWrapperTypes.h" bodystart="124" bodyend="169"/>
    <listofallmembers>
      <member refid="struct_f_json_object_feature_1aaf7522f0c14dea0b53c62d3c44ad3197" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>Geometry</name></member>
      <member refid="struct_f_json_object_feature_1a9e4f9de33357a05399cb8d50d17a8674" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>GeometryType</name></member>
      <member refid="struct_f_json_object_feature_1a940cf3bb518a057a9fbe3a42b0340c75" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>GetPropertyWithDefault</name></member>
      <member refid="struct_f_json_object_feature_1a8c1f0937b3059dbe18886b17d444a69d" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>OtherFields</name></member>
      <member refid="struct_f_json_object_feature_1aff54a5ac2913741ef144f92836048408" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>Properties</name></member>
      <member refid="struct_f_json_object_feature_1ae3e36bda55074e5c5e3263e4b1f4b660" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>TryGetProperty</name></member>
      <member refid="struct_f_json_object_feature_1a009a0e79aa534d96d2a2e563c663a080" prot="public" virt="non-virtual"><scope>FJsonObjectFeature</scope><name>TryGetTemplateGeometry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
