<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_t_expected" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>TExpected</compoundname>
    <includes refid="_expected_8h" local="no">Expected.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
      </param>
      <param>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
        <definition>using TExpected&lt; T, E &gt;::ValueType =  T</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>TExpected::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="62" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref></type>
        <definition>using TExpected&lt; T, E &gt;::ErrorType =  E</definition>
        <argsstring></argsstring>
        <name>ErrorType</name>
        <qualifiedname>TExpected::ErrorType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="63" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_t_expected_1a6b9d455b9b2b3e9df13c5fea0c329b38" prot="public" static="no">
        <type><ref refid="struct_t_unexpected" kindref="compound">TUnexpected</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref> &gt;</type>
        <definition>using TExpected&lt; T, E &gt;::UnexpectedType =  TUnexpected&lt;E&gt;</definition>
        <argsstring></argsstring>
        <name>UnexpectedType</name>
        <qualifiedname>TExpected::UnexpectedType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="64" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_t_expected_1a703e7d9506eda909b82a957ee66e77ff" prot="public" static="no" mutable="no">
        <type><ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref></type>
        <definition>ValueType TExpected&lt; T, E &gt;::InnerValue</definition>
        <argsstring></argsstring>
        <name>InnerValue</name>
        <qualifiedname>TExpected::InnerValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="196" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_expected_1a55fc58e828a0290f3e45c716d51466c3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref></type>
        <definition>ErrorType TExpected&lt; T, E &gt;::InnerError</definition>
        <argsstring></argsstring>
        <name>InnerError</name>
        <qualifiedname>TExpected::InnerError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="197" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="197" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_t_expected_1ae3ee5467db574b93237c2d57d12ea90c" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">union</ref> <ref refid="struct_t_expected" kindref="compound">TExpected</ref></type>
        <definition>union TExpected TExpected&lt; T, E &gt;</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>TExpected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="198" column="9"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_expected_1a758e93276b7500b069a3f74fe85752d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TExpected&lt; T, E &gt;::bHasValue</definition>
        <argsstring></argsstring>
        <name>bHasValue</name>
        <qualifiedname>TExpected::bHasValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="200" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="200" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_t_expected_1a60584fef6b3244f646269f3924400d8b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::TExpected</definition>
        <argsstring>(ValueType Value) noexcept</argsstring>
        <name>TExpected</name>
        <qualifiedname>TExpected::TExpected</qualifiedname>
        <param>
          <type><ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref></type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Конструктор от значения. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="70" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a731fc963ef770835edae70b71a670037" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::TExpected</definition>
        <argsstring>(UnexpectedType Unexpected) noexcept</argsstring>
        <name>TExpected</name>
        <qualifiedname>TExpected::TExpected</qualifiedname>
        <param>
          <type><ref refid="struct_t_expected_1a6b9d455b9b2b3e9df13c5fea0c329b38" kindref="member">UnexpectedType</ref></type>
          <declname>Unexpected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Конструктор от ошибки. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="76" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1aa6ccee022698b5c3b94c5aee67f908d3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> &amp;</type>
        <definition>constexpr TExpected&lt; T, E &gt;::ValueType &amp; TExpected&lt; T, E &gt;::Value</definition>
        <argsstring>() noexcept UE_LIFETIMEBOUND</argsstring>
        <name>Value</name>
        <qualifiedname>TExpected::Value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает lvalue-ссылку на значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="84" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a1dfbe082f3f3c711e13947c3840330d5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> &amp;</type>
        <definition>constexpr const TExpected&lt; T, E &gt;::ValueType &amp; TExpected&lt; T, E &gt;::Value</definition>
        <argsstring>() const noexcept UE_LIFETIMEBOUND</argsstring>
        <name>Value</name>
        <qualifiedname>TExpected::Value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает константную lvalue-ссылку на значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="92" column="35" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1aca7418bc0987ed7be11fb0939a7a66c3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> &amp;</type>
        <definition>constexpr TExpected&lt; T, E &gt;::ValueType &amp; TExpected&lt; T, E &gt;::operator*</definition>
        <argsstring>() noexcept UE_LIFETIMEBOUND</argsstring>
        <name>operator*</name>
        <qualifiedname>TExpected::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает lvalue-ссылку на значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="100" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a73d09b3c71cc75fc73b6081f76bbb1f3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> &amp;</type>
        <definition>constexpr const TExpected&lt; T, E &gt;::ValueType &amp; TExpected&lt; T, E &gt;::operator*</definition>
        <argsstring>() const noexcept UE_LIFETIMEBOUND</argsstring>
        <name>operator*</name>
        <qualifiedname>TExpected::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает константную lvalue-ссылку на значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="108" column="35" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a08b17eaeca4b4da1ce71993346d7f8eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> *</type>
        <definition>constexpr TExpected&lt; T, E &gt;::ValueType * TExpected&lt; T, E &gt;::operator-&gt;</definition>
        <argsstring>() noexcept UE_LIFETIMEBOUND</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>TExpected::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает указатель на значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="116" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a0cdd92cbfa43b69de4f514e81ef96770" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref> *</type>
        <definition>constexpr const TExpected&lt; T, E &gt;::ValueType * TExpected&lt; T, E &gt;::operator-&gt;</definition>
        <argsstring>() const noexcept UE_LIFETIMEBOUND</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>TExpected::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает указатель на константное значение.</para>
<para><simplesect kind="pre"><para><computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">HasValue()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="124" column="35" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> bool</type>
        <definition>constexpr bool TExpected&lt; T, E &gt;::HasValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>HasValue</name>
        <qualifiedname>TExpected::HasValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает <computeroutput>true</computeroutput>, если объект содержит значение, иначе - <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="130" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a20607471659378e3cd0b731af4c876c7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref></type>
            <defval>std::remove_cv_t&lt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref></type>
        <definition>constexpr ValueType TExpected&lt; T, E &gt;::ValueOr</definition>
        <argsstring>(U &amp;&amp;DefaultValue UE_LIFETIMEBOUND) const &amp;noexcept UE_LIFETIMEBOUND</argsstring>
        <name>ValueOr</name>
        <qualifiedname>TExpected::ValueOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref> &amp;&amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DefaultValue</ref></type>
          <declname>UE_LIFETIMEBOUND</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает содержащееся значение или значение по умолчанию по значению. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="137" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1afe60385d6c19c43c87a07822ecd99578" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" refqual="rvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref></type>
            <defval>std::remove_cv_t&lt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">ValueType</ref></type>
        <definition>constexpr ValueType TExpected&lt; T, E &gt;::ValueOr</definition>
        <argsstring>(U &amp;&amp;DefaultValue UE_LIFETIMEBOUND) &amp;&amp;noexcept UE_LIFETIMEBOUND</argsstring>
        <name>ValueOr</name>
        <qualifiedname>TExpected::ValueOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref> &amp;&amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DefaultValue</ref></type>
          <declname>UE_LIFETIMEBOUND</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает содержащееся значение или значение по умолчанию по значению после перемещения. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="144" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a7c13ec100ba62c0b9877143118a51468" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref> &amp;</type>
        <definition>constexpr TExpected&lt; T, E &gt;::ErrorType &amp; TExpected&lt; T, E &gt;::Error</definition>
        <argsstring>() noexcept UE_LIFETIMEBOUND</argsstring>
        <name>Error</name>
        <qualifiedname>TExpected::Error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает lvalue-ссылку на ошибку.</para>
<para><simplesect kind="pre"><para><computeroutput>!HasValue</computeroutput>() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="152" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a372c5f1dff7798615153100eabb15a94" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref> &amp;</type>
        <definition>constexpr const TExpected&lt; T, E &gt;::ErrorType &amp; TExpected&lt; T, E &gt;::Error</definition>
        <argsstring>() const noexcept UE_LIFETIMEBOUND</argsstring>
        <name>Error</name>
        <qualifiedname>TExpected::Error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает константную lvalue-ссылку на ошибку.</para>
<para><simplesect kind="pre"><para><computeroutput>!HasValue</computeroutput>() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="160" column="35" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a7afbee2b8bac53a01a56bbf0893309ed" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref></type>
            <defval><ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref></type>
        <definition>constexpr ErrorType TExpected&lt; T, E &gt;::ErrorOr</definition>
        <argsstring>(G &amp;&amp;DefaultError UE_LIFETIMEBOUND) const &amp;noexcept UE_LIFETIMEBOUND</argsstring>
        <name>ErrorOr</name>
        <qualifiedname>TExpected::ErrorOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref> &amp;&amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DefaultError</ref></type>
          <declname>UE_LIFETIMEBOUND</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает содержащуюся ошибку или ошибку по умолчанию по значению. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="167" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a708f3d8853fce7e50084194fa89564e1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" refqual="rvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref></type>
            <defval><ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">ErrorType</ref></type>
        <definition>constexpr ErrorType TExpected&lt; T, E &gt;::ErrorOr</definition>
        <argsstring>(G &amp;&amp;DefaultError UE_LIFETIMEBOUND) &amp;&amp;noexcept UE_LIFETIMEBOUND</argsstring>
        <name>ErrorOr</name>
        <qualifiedname>TExpected::ErrorOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref> &amp;&amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DefaultError</ref></type>
          <declname>UE_LIFETIMEBOUND</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает содержащуюся ошибку или ошибку по умолчанию по значению после перемещения. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="174" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1af43137543c5487e035a3b432abac21b9" prot="public" static="no" constexpr="yes" const="yes" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>TExpected::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает <computeroutput>true</computeroutput>, если объект содержит значение, иначе - <computeroutput>false</computeroutput>.</para>
<para><simplesect kind="note"><para>Имеет такой же эффект, как и <computeroutput><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">TExpected::HasValue</ref></computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" kindref="member">TExpected::HasValue</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="184" column="28" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a290da8601a8560f821093b1206c33152" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::~TExpected</definition>
        <argsstring>()</argsstring>
        <name>~TExpected</name>
        <qualifiedname>TExpected::~TExpected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Деструктор.</para>
<para>Если объект содержит значение, то вызывает его деструктор, иначе - деструктор ошибки. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="191" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="130" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a758e2c7420589b0f65d430aa649caeb6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected" kindref="compound">TExpected</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref> &gt;<ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">::ValueType</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::ValueType TExpected&lt; T, E &gt;::ValueOr</definition>
        <argsstring>(U &amp;&amp;DefaultValue) const &amp;noexcept</argsstring>
        <name>ValueOr</name>
        <qualifiedname>TExpected::ValueOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref> &amp;&amp;</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" line="84" column="52" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1ac7e109353e442e01a79b83e06511d596" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" refqual="rvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected" kindref="compound">TExpected</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref> &gt;<ref refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" kindref="member">::ValueType</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::ValueType TExpected&lt; T, E &gt;::ValueOr</definition>
        <argsstring>(U &amp;&amp;DefaultValue) &amp;&amp;noexcept</argsstring>
        <name>ValueOr</name>
        <qualifiedname>TExpected::ValueOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">U</ref> &amp;&amp;</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" line="91" column="52" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1addcd43536eea534e42aea16586251c15" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected" kindref="compound">TExpected</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref> &gt;<ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">::ErrorType</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::ErrorType TExpected&lt; T, E &gt;::ErrorOr</definition>
        <argsstring>(G &amp;&amp;DefaultError) const &amp;noexcept</argsstring>
        <name>ErrorOr</name>
        <qualifiedname>TExpected::ErrorOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref> &amp;&amp;</type>
          <declname>DefaultError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" line="111" column="52" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="struct_t_expected_1a90c32711ee24144fdeacb510ce341466" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" refqual="rvalue" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="struct_t_expected" kindref="compound">TExpected</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">E</ref> &gt;<ref refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" kindref="member">::ErrorType</ref></type>
        <definition>constexpr TExpected&lt; T, E &gt;::ErrorType TExpected&lt; T, E &gt;::ErrorOr</definition>
        <argsstring>(G &amp;&amp;DefaultError) &amp;&amp;noexcept</argsstring>
        <name>ErrorOr</name>
        <qualifiedname>TExpected::ErrorOr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">G</ref> &amp;&amp;</type>
          <declname>DefaultError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" line="118" column="52" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.inl" bodystart="118" bodyend="121"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Тип, содержащий значение типа <computeroutput>T</computeroutput> или ошибку типа <computeroutput>E</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип значения </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип ошибки</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="struct_t_unexpected" kindref="compound">TUnexpected</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" line="60" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonNetRpc/Source/JsonNetRpc/Public/Expected.h" bodystart="61" bodyend="201"/>
    <listofallmembers>
      <member refid="struct_t_expected_1a758e93276b7500b069a3f74fe85752d0" prot="private" virt="non-virtual"><scope>TExpected</scope><name>bHasValue</name></member>
      <member refid="struct_t_expected_1a7c13ec100ba62c0b9877143118a51468" prot="public" virt="non-virtual"><scope>TExpected</scope><name>Error</name></member>
      <member refid="struct_t_expected_1a372c5f1dff7798615153100eabb15a94" prot="public" virt="non-virtual"><scope>TExpected</scope><name>Error</name></member>
      <member refid="struct_t_expected_1a7afbee2b8bac53a01a56bbf0893309ed" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ErrorOr</name></member>
      <member refid="struct_t_expected_1a708f3d8853fce7e50084194fa89564e1" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ErrorOr</name></member>
      <member refid="struct_t_expected_1addcd43536eea534e42aea16586251c15" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ErrorOr</name></member>
      <member refid="struct_t_expected_1a90c32711ee24144fdeacb510ce341466" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ErrorOr</name></member>
      <member refid="struct_t_expected_1ab2b11e62443b1164b60f4e1df957484a" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ErrorType</name></member>
      <member refid="struct_t_expected_1a863c0d2b9b3e263f82373921542757b0" prot="public" virt="non-virtual"><scope>TExpected</scope><name>HasValue</name></member>
      <member refid="struct_t_expected_1a55fc58e828a0290f3e45c716d51466c3" prot="public" virt="non-virtual"><scope>TExpected</scope><name>InnerError</name></member>
      <member refid="struct_t_expected_1a703e7d9506eda909b82a957ee66e77ff" prot="public" virt="non-virtual"><scope>TExpected</scope><name>InnerValue</name></member>
      <member refid="struct_t_expected_1af43137543c5487e035a3b432abac21b9" prot="public" virt="non-virtual"><scope>TExpected</scope><name>operator bool</name></member>
      <member refid="struct_t_expected_1aca7418bc0987ed7be11fb0939a7a66c3" prot="public" virt="non-virtual"><scope>TExpected</scope><name>operator*</name></member>
      <member refid="struct_t_expected_1a73d09b3c71cc75fc73b6081f76bbb1f3" prot="public" virt="non-virtual"><scope>TExpected</scope><name>operator*</name></member>
      <member refid="struct_t_expected_1a08b17eaeca4b4da1ce71993346d7f8eb" prot="public" virt="non-virtual"><scope>TExpected</scope><name>operator-&gt;</name></member>
      <member refid="struct_t_expected_1a0cdd92cbfa43b69de4f514e81ef96770" prot="public" virt="non-virtual"><scope>TExpected</scope><name>operator-&gt;</name></member>
      <member refid="struct_t_expected_1a60584fef6b3244f646269f3924400d8b" prot="public" virt="non-virtual"><scope>TExpected</scope><name>TExpected</name></member>
      <member refid="struct_t_expected_1a731fc963ef770835edae70b71a670037" prot="public" virt="non-virtual"><scope>TExpected</scope><name>TExpected</name></member>
      <member refid="struct_t_expected_1a6b9d455b9b2b3e9df13c5fea0c329b38" prot="public" virt="non-virtual"><scope>TExpected</scope><name>UnexpectedType</name></member>
      <member refid="struct_t_expected_1aa6ccee022698b5c3b94c5aee67f908d3" prot="public" virt="non-virtual"><scope>TExpected</scope><name>Value</name></member>
      <member refid="struct_t_expected_1a1dfbe082f3f3c711e13947c3840330d5" prot="public" virt="non-virtual"><scope>TExpected</scope><name>Value</name></member>
      <member refid="struct_t_expected_1a20607471659378e3cd0b731af4c876c7" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ValueOr</name></member>
      <member refid="struct_t_expected_1afe60385d6c19c43c87a07822ecd99578" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ValueOr</name></member>
      <member refid="struct_t_expected_1a758e2c7420589b0f65d430aa649caeb6" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ValueOr</name></member>
      <member refid="struct_t_expected_1ac7e109353e442e01a79b83e06511d596" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ValueOr</name></member>
      <member refid="struct_t_expected_1ac57f6617afc4a98ee00a20af8c164fe1" prot="public" virt="non-virtual"><scope>TExpected</scope><name>ValueType</name></member>
      <member refid="struct_t_expected_1a290da8601a8560f821093b1206c33152" prot="public" virt="non-virtual"><scope>TExpected</scope><name>~TExpected</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
