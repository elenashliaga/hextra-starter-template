<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_meta_pixel_streaming_input" kind="class" language="C++" prot="public">
    <compoundname>UMetaPixelStreamingInput</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UActorComponent</basecompoundref>
    <includes refid="_meta_pixel_streaming_input_8h" local="no">MetaPixelStreamingInput.h</includes>
    <innerclass refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport" prot="private">UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_u_meta_pixel_streaming_input_1af97f02f44346a60186b04c6319ae1ee4" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TOptional</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TFunction</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMemoryReader</ref>)&gt; &gt;</type>
        <definition>TOptional&lt;TFunction&lt;void(FString, FMemoryReader)&gt; &gt; UMetaPixelStreamingInput::UpstreamUIInteractionHandler</definition>
        <argsstring></argsstring>
        <name>UpstreamUIInteractionHandler</name>
        <qualifiedname>UMetaPixelStreamingInput::UpstreamUIInteractionHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="24" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_meta_pixel_streaming_input_1ae0c4e91be5838bdc89cc3750d1693f40" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedRef</ref>&lt; <ref refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport" kindref="compound">FMetaJsonNetRpcPixelStreamingTransport</ref> &gt;</type>
        <definition>TSharedRef&lt;FMetaJsonNetRpcPixelStreamingTransport&gt; UMetaPixelStreamingInput::JsonRpcTransport</definition>
        <argsstring></argsstring>
        <name>JsonRpcTransport</name>
        <qualifiedname>UMetaPixelStreamingInput::JsonRpcTransport</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">MakeShared</ref>&lt;<ref refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport" kindref="compound">FMetaJsonNetRpcPixelStreamingTransport</ref>&gt;(*<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">this</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="37" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_meta_pixel_streaming_input_1a65b5f7a65db63f1263d84af58e3624ff" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonNetRpcModule</ref> *</type>
        <definition>FJsonNetRpcModule* UMetaPixelStreamingInput::JsonRpcModule</definition>
        <argsstring></argsstring>
        <name>JsonRpcModule</name>
        <qualifiedname>UMetaPixelStreamingInput::JsonRpcModule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="39" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_u_meta_pixel_streaming_input_1a2688c50cca76e751306cc172fe5f2662" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMetaOnPixelStreamingInputEvent</ref></type>
        <definition>FMetaOnPixelStreamingInputEvent UMetaPixelStreamingInput::OnInputEvent</definition>
        <argsstring></argsstring>
        <name>OnInputEvent</name>
        <qualifiedname>UMetaPixelStreamingInput::OnInputEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="105" column="41" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1afecec9b969bb28ec590d0dbfee900dda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::ReceiveSerializedRpcObject</definition>
        <argsstring>(const FString &amp;Message)</argsstring>
        <name>ReceiveSerializedRpcObject</name>
        <qualifiedname>UMetaPixelStreamingInput::ReceiveSerializedRpcObject</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="42" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="58" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a38fc374a9d0ebda19a0791ec0c216c09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>UMetaPixelStreamingInput::BeginPlay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается при старте игры. Он переопределяет команды ввода для трансляции пикселей и обрабатывает изменение разрешения. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="49" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="78" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a718729eb329f8f958495b479276d19c4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::OverrideInputCommands</definition>
        <argsstring>()</argsstring>
        <name>OverrideInputCommands</name>
        <qualifiedname>UMetaPixelStreamingInput::OverrideInputCommands</qualifiedname>
        <briefdescription>
<para>Переопределяет команды ввода для Pixel Streaming. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод используется для переопределения стандартных команд ввода. Он получает модуль трансляции пикселей, получает список идентификаторов потоков, и для каждого потока, он устанавливает обработчик команд для команды <computeroutput>ResolutionWidth</computeroutput>, чтобы обрабатывать изменения разрешения.</para>
<para><simplesect kind="note"><para>Если модуль трансляции пикселей недоступен, записывается предупреждающее сообщение, и метод возвращает управление. Если текущий поток не действует, записывается предупреждающее сообщение, и метод возвращает управление. Если обработчик ввода для текущего потока не действует, записывается предупреждающее сообщение, и метод возвращает управление.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_f_pixel_streaming_input_commands" kindref="compound">FPixelStreamingInputCommands</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="65" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="95" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a83259c8ff61c78ad024b797e9a5e8f02" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::HandleResolutionChange</definition>
        <argsstring>(const FString &amp;Descriptor, const FString &amp;WidthString)</argsstring>
        <name>HandleResolutionChange</name>
        <qualifiedname>UMetaPixelStreamingInput::HandleResolutionChange</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Descriptor</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>WidthString</declname>
        </param>
        <briefdescription>
<para>Обрабатывает изменение разрешения. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается при изменении разрешения во вводе трансляции пикселей.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>- Дескриптор, содержащий новое разрешение. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WidthString</parametername>
</parameternamelist>
<parameterdescription>
<para>- Ширина нового разрешения в виде строки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="75" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="148" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a4a9188efc713f86526ed89c515668918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UMetaPixelStreamingInput::UMetaPixelStreamingInput</definition>
        <argsstring>(const FObjectInitializer &amp;ObjectInitializer)</argsstring>
        <name>UMetaPixelStreamingInput</name>
        <qualifiedname>UMetaPixelStreamingInput::UMetaPixelStreamingInput</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FObjectInitializer</ref> &amp;</type>
          <declname>ObjectInitializer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="78" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a4c37b34ada3a6aaa3a58351c8faf0702" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedRef</ref>&lt; <ref refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport" kindref="compound">FMetaJsonNetRpcPixelStreamingTransport</ref> &gt;</type>
        <definition>TSharedRef&lt; UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport &gt; UMetaPixelStreamingInput::GetJsonRpcTransport</definition>
        <argsstring>() const</argsstring>
        <name>GetJsonRpcTransport</name>
        <qualifiedname>UMetaPixelStreamingInput::GetJsonRpcTransport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="81" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a28d1e5c89e5c15174cd494c363643517" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::SendMessage</definition>
        <argsstring>(const FString &amp;Message) const</argsstring>
        <name>SendMessage</name>
        <qualifiedname>UMetaPixelStreamingInput::SendMessage</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
<para>Отправляет ответ всем подключенным клиентам. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Message</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка ответного сообщения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="102" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="248" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1af1fc76d99b6d98658eef3133fb286b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UMetaPixelStreamingInput::DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam</definition>
        <argsstring>(FMetaOnPixelStreamingInputEvent, const FString &amp;, Message)</argsstring>
        <name>DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam</name>
        <qualifiedname>UMetaPixelStreamingInput::DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMetaOnPixelStreamingInputEvent</ref></type>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
        </param>
        <param>
          <type>Message</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="104" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_meta_pixel_streaming_input_1a57a8e0f4400756a8b89a4e7de4f30743" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::CalculateScreenSize</definition>
        <argsstring>(const int32 &amp;Width, const int32 &amp;Height, int32 &amp;NewWidth, int32 &amp;NewHeight)</argsstring>
        <name>CalculateScreenSize</name>
        <qualifiedname>UMetaPixelStreamingInput::CalculateScreenSize</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &amp;</type>
          <declname>Width</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &amp;</type>
          <declname>Height</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &amp;</type>
          <declname>NewWidth</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &amp;</type>
          <declname>NewHeight</declname>
        </param>
        <briefdescription>
<para>Рассчитывает новый размер экрана на основе указанной ширины и высоты. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод рассчитывает новый размер экрана на основе указанной ширины и высоты, сохраняя соотношение сторон. Он учитывает максимальную ширину и высоту, указанную в классе <computeroutput>UMetaPixel StreamingSettings</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Width</parametername>
</parameternamelist>
<parameterdescription>
<para>Ширина исходного размера экрана. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Height</parametername>
</parameternamelist>
<parameterdescription>
<para>Высота исходного размера экрана. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Ссылка на переменную, которая будет содержать новую ширину. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Ссылка на переменную, которая будет содержать новую высоту.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Аргументы <computeroutput>NewWidth</computeroutput> и <computeroutput>NewHeight</computeroutput> должны быть действующими ссылками lvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="96" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="206" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UActorComponent</label>
      </node>
      <node id="1">
        <label>UMetaPixelStreamingInput</label>
        <link refid="class_u_meta_pixel_streaming_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>UActorComponent</label>
      </node>
      <node id="1">
        <label>UMetaPixelStreamingInput</label>
        <link refid="class_u_meta_pixel_streaming_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="20" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="21" bodyend="106"/>
    <listofallmembers>
      <member refid="class_u_meta_pixel_streaming_input_1a38fc374a9d0ebda19a0791ec0c216c09" prot="protected" virt="virtual"><scope>UMetaPixelStreamingInput</scope><name>BeginPlay</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a57a8e0f4400756a8b89a4e7de4f30743" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>CalculateScreenSize</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1af1fc76d99b6d98658eef3133fb286b61" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a4c37b34ada3a6aaa3a58351c8faf0702" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>GetJsonRpcTransport</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a83259c8ff61c78ad024b797e9a5e8f02" prot="protected" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>HandleResolutionChange</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a65b5f7a65db63f1263d84af58e3624ff" prot="private" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>JsonRpcModule</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1ae0c4e91be5838bdc89cc3750d1693f40" prot="private" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>JsonRpcTransport</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a2688c50cca76e751306cc172fe5f2662" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>OnInputEvent</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a718729eb329f8f958495b479276d19c4" prot="protected" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>OverrideInputCommands</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1afecec9b969bb28ec590d0dbfee900dda" prot="private" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>ReceiveSerializedRpcObject</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a28d1e5c89e5c15174cd494c363643517" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>SendMessage</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1a4a9188efc713f86526ed89c515668918" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>UMetaPixelStreamingInput</name></member>
      <member refid="class_u_meta_pixel_streaming_input_1af97f02f44346a60186b04c6319ae1ee4" prot="private" virt="non-virtual"><scope>UMetaPixelStreamingInput</scope><name>UpstreamUIInteractionHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
