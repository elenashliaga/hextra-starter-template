<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_j_s_o_n_parser_blueprint_library_ex" kind="class" language="C++" prot="public">
    <compoundname>UJSONParserBlueprintLibraryEx</compoundname>
    <basecompoundref refid="class_u_j_s_o_n_parser_blueprint_library" prot="public" virt="non-virtual">UJSONParserBlueprintLibrary</basecompoundref>
    <includes refid="_j_s_o_n_parser_blueprint_library_ex_8h" local="no">JSONParserBlueprintLibraryEx.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_u_j_s_o_n_parser_blueprint_library_ex_1a207cd244c8189aa5fab98e59c1e705d0" prot="private" static="no">
        <type><ref refid="class_u_j_s_o_n_parser_blueprint_library_ex_1a207cd244c8189aa5fab98e59c1e705d0" kindref="member">json</ref></type>
        <definition>using UJSONParserBlueprintLibraryEx::json =  json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <qualifiedname>UJSONParserBlueprintLibraryEx::json</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="37" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_j_s_o_n_parser_blueprint_library_ex_1aca5197b63df3b7ee9467b01ebcb2461b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UJSONParserBlueprintLibraryEx::UpdateBuildingUnrealDemoViewModeInfoEx</definition>
        <argsstring>(const UDemoViewMetaCameraComponent *MetaDemoViewBuildingComponent, int32 Idx)</argsstring>
        <name>UpdateBuildingUnrealDemoViewModeInfoEx</name>
        <qualifiedname>UJSONParserBlueprintLibraryEx::UpdateBuildingUnrealDemoViewModeInfoEx</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_u_demo_view_meta_camera_component" kindref="compound">UDemoViewMetaCameraComponent</ref> *</type>
          <declname>MetaDemoViewBuildingComponent</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>Idx</declname>
        </param>
        <briefdescription>
<para>UpdateBuildingUnrealDemoViewModeInfo - Этот метод обновляет информацию о режиме просмотра демо здания Unreal в формате JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MetaDemoViewBuildingComponent</parametername>
</parameternamelist>
<parameterdescription>
<para>- Компонент камеры мета-вида. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Idx</parametername>
</parameternamelist>
<parameterdescription>
<para>- Индекс камеры.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FString - Обновленная строка в формате JSON. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="49" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/BuildingsDemoView/JSONParserBlueprintLibraryEx.cpp" bodystart="6" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_u_j_s_o_n_parser_blueprint_library_ex_1a6d6f960a8f95fdef37467029c1dcc607" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_demo_view_mode_info" kindref="compound">FDemoViewModeInfo</ref> &gt;</type>
        <definition>TArray&lt; FDemoViewModeInfo &gt; UJSONParserBlueprintLibraryEx::ParseDemoViewModeInfoEx</definition>
        <argsstring>(const FBuildingDataInfo &amp;DataInfo, ADemoViewMetaBuilding *SpawnedActor)</argsstring>
        <name>ParseDemoViewModeInfoEx</name>
        <qualifiedname>UJSONParserBlueprintLibraryEx::ParseDemoViewModeInfoEx</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_building_data_info" kindref="compound">FBuildingDataInfo</ref> &amp;</type>
          <declname>DataInfo</declname>
        </param>
        <param>
          <type><ref refid="class_a_demo_view_meta_building" kindref="compound">ADemoViewMetaBuilding</ref> *</type>
          <declname>SpawnedActor</declname>
        </param>
        <briefdescription>
<para>Анализирует информацию о режиме просмотра демо из заданной информации о данных здания и создает актера. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод анализирует информацию о режиме просмотра демо из предоставленной информации о данных здания. Он принимает информацию о данных, которая содержит путь к файлу JSON здания и преобразует его в глобальный путь с использованием функции ConvertRelativePathToGlobal. Затем он читает JSON из заданного пути с помощью функции ReadJsonFromPath и преобразует его в std::string. Затем JSON анализируется с помощью json::parse и сохраняется в объекте json. Информация о режиме просмотра демо здания получается из проанализированного JSON и сохраняется в массиве структур <ref refid="struct_f_demo_view_mode_info" kindref="compound">FDemoViewModeInfo</ref>. В конце метод возвращает множество структур информации о режиме просмотра демо.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DataInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Информация о данных здания, содержащая путь к файлу JSON здания. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SpawnedActor</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на созданного актера. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив структур <ref refid="struct_f_demo_view_mode_info" kindref="compound">FDemoViewModeInfo</ref>, представляющий проанализированную информацию о режиме просмотра демо. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="66" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/BuildingsDemoView/JSONParserBlueprintLibraryEx.cpp" bodystart="22" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_u_j_s_o_n_parser_blueprint_library_ex_1a5bf8949516083ec7403cab5d7ccb3c60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_meta_custom_cesium_sun_8h_1a1a1043c227d1d43b3e2f3337f6a1fca4" kindref="member">ELightActivationType</ref></type>
        <definition>ELightActivationType UJSONParserBlueprintLibraryEx::SetLightActivationTypeEx</definition>
        <argsstring>(const FString &amp;Value)</argsstring>
        <name>SetLightActivationTypeEx</name>
        <qualifiedname>UJSONParserBlueprintLibraryEx::SetLightActivationTypeEx</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>SetLightActivationType - Этот метод устанавливает тип активации света на основе данного значения. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>- Значение, представляющее тип активации света. Допустимые значения - 0, 1 и 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ELightActivationType - Тип активации света, соответствующий данному значению. Если значение не найдено в карте, возвращается NoLight. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="74" column="37" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/BuildingsDemoView/JSONParserBlueprintLibraryEx.cpp" bodystart="71" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_u_j_s_o_n_parser_blueprint_library_ex_1ab2ed2913cb8282407228e7981b5a9f56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UJSONParserBlueprintLibraryEx::GetLightActivationTypeEx</definition>
        <argsstring>(const ELightActivationType &amp;Value)</argsstring>
        <name>GetLightActivationTypeEx</name>
        <qualifiedname>UJSONParserBlueprintLibraryEx::GetLightActivationTypeEx</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_meta_custom_cesium_sun_8h_1a1a1043c227d1d43b3e2f3337f6a1fca4" kindref="member">ELightActivationType</ref> &amp;</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="75" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/BuildingsDemoView/JSONParserBlueprintLibraryEx.cpp" bodystart="89" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="2">
        <label>UJSONParserBlueprintLibrary</label>
        <link refid="class_u_j_s_o_n_parser_blueprint_library"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>UJSONParserBlueprintLibraryEx</label>
        <link refid="class_u_j_s_o_n_parser_blueprint_library_ex"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="2">
        <label>UJSONParserBlueprintLibrary</label>
        <link refid="class_u_j_s_o_n_parser_blueprint_library"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>UJSONParserBlueprintLibraryEx</label>
        <link refid="class_u_j_s_o_n_parser_blueprint_library_ex"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" line="32" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/ToDel_BuildingsDemoView/JSONParserBlueprintLibraryEx.h" bodystart="34" bodyend="77"/>
    <listofallmembers>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a064b5cf0ca4452e94a915270fc2ed602" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>CheckKeyExistsInJson</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a08839339735c887e7d168c1e57e32235" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ConvertRelativePathToGlobal</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ae092dbd8886d1b75f374c0457583b768" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>DeleteDublicateFromStringArr</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a4fcb6154a9fa5171eacc84696628dab0" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>DeleteSpaceFromString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ac6b9a25de22ba57a42e67a7d79bd8292" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>FormatRussianStringToCase</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a22200b218b7deb72d74c6b1e2f9d0e35" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>FormatString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ad047a427bda2b19f104a30be38aec536" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>FStringToStdString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ac7e0448c14f2c7a232c38434ad6cee1e" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>GetEnumFromString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a7f1816790af4353b434bd6d0ad8d0d7b" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>GetFileIdFromJSON</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ae0779175e60cf20dfa16c5ba96b0e8be" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>GetFloat</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a5ca3602e97c9cb0b1bb9a2c39944e1c4" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>GetFloatFromString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_ex_1ab2ed2913cb8282407228e7981b5a9f56" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>GetLightActivationTypeEx</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a5a8b8f075a225388a2d9a4d9f813e89d" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>IsNull</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_ex_1a207cd244c8189aa5fab98e59c1e705d0" prot="private" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>json</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ac804b594c4208d2048141a66d1a94237" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseAnswerFromSearchJSON</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1ad0fe71db351451b32f62277927f08cfb" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseDemoViewModeInfo</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_ex_1a6d6f960a8f95fdef37467029c1dcc607" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseDemoViewModeInfoEx</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a8fb12cba0496106f8d05305d89829b4f" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseMultiPointCoordinates</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1abcf24abef2a225e4be3118f7199d4396" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseMultiPolygonCoordinates</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a9aacc4c642e2a89b72420447aeb370f5" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParsePointCoordinates</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a7785ec73ccd473d2ec881ef1788524b4" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParsePolygonCoordinates</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a9a1a69fb1ea9954bc8d6eb559f4fdb0b" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ParseYandexDataFromJSON</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a0a835c088b1c91a9fc5199075a9d1798" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ProcessCoordinatesJSON</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a6545f1fe593a7a484ede9ba4e9a6cfda" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ReadJsonFromPath</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a0f6b0da4d60c34ca27c9dfb32448af0b" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>ReplaceJsonFileContents</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a3542d3786c930b04ea6dca013d985a80" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>SeparateStringToStringArray</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a010d32d47bb7eb7ba49290b51c86dbdc" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>SetLightActivationType</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_ex_1a5bf8949516083ec7403cab5d7ccb3c60" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>SetLightActivationTypeEx</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a964f5f5da6c09e60ae165a18b3127be0" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>StdStringToFString</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_1a0c778d31da8f1f88cf73af7855bf51cf" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>UpdateBuildingUnrealDemoViewModeInfo</name></member>
      <member refid="class_u_j_s_o_n_parser_blueprint_library_ex_1aca5197b63df3b7ee9467b01ebcb2461b" prot="public" virt="non-virtual"><scope>UJSONParserBlueprintLibraryEx</scope><name>UpdateBuildingUnrealDemoViewModeInfoEx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
