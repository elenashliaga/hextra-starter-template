<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_geo_json_serializer" kind="class" language="C++" prot="public">
    <compoundname>UGeoJsonSerializer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UBlueprintFunctionLibrary</basecompoundref>
    <includes refid="_geo_json_serializer_8h" local="no">GeoJsonSerializer.h</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_geo_json_serializer_1a7d5aa9ccd43cdd39953b688bfa2fdebc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UGeoJsonSerializer::SerializeObjectToString</definition>
        <argsstring>(const FJsonObjectWrapper &amp;JsonObject)</argsstring>
        <name>SerializeObjectToString</name>
        <qualifiedname>UGeoJsonSerializer::SerializeObjectToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> FJsonObjectWrapper &amp;</type>
          <declname>JsonObject</declname>
        </param>
        <briefdescription>
<para>Сериализует данный JSON-объект в строку. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON-объект, который должен быть сериализован. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON-объект в виде строки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="33" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a93046fdc35f8b65827b9ad65db9c63b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UGeoJsonSerializer::SerializeObjectToString</definition>
        <argsstring>(const TSharedPtr&lt; FJsonObject &gt; &amp;JsonObject)</argsstring>
        <name>SerializeObjectToString</name>
        <qualifiedname>UGeoJsonSerializer::SerializeObjectToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt; &amp;</type>
          <declname>JsonObject</declname>
        </param>
        <briefdescription>
<para>Сериализует данный JSON-объект в строку. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON-объект, который должен быть сериализован. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON-объект в виде строки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="41" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1aa1655ee74656ec094bfebee4ccd01f47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonObject &gt; UGeoJsonSerializer::SerializeFeatureCollection</definition>
        <argsstring>(const FJsonFeatureCollection &amp;FeatureCollection, bool bSerializeZ=true)</argsstring>
        <name>SerializeFeatureCollection</name>
        <qualifiedname>UGeoJsonSerializer::SerializeFeatureCollection</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_feature_collection" kindref="compound">FJsonFeatureCollection</ref> &amp;</type>
          <declname>FeatureCollection</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует структуру коллекции фичей в JSON объект. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FeatureCollection</parametername>
</parameternamelist>
<parameterdescription>
<para>Структура коллекции фичей для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON объект. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="49" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a27006a67f198f5d6432cd4a7f9097074" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonObject &gt; UGeoJsonSerializer::SerializeFeature</definition>
        <argsstring>(const FJsonObjectFeature &amp;Feature, bool bSerializeZ=true)</argsstring>
        <name>SerializeFeature</name>
        <qualifiedname>UGeoJsonSerializer::SerializeFeature</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_object_feature" kindref="compound">FJsonObjectFeature</ref> &amp;</type>
          <declname>Feature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует структуру фичи в JSON объект. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Структура фичи для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON объект. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="57" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a1eb4734f4097843ecacf459f441dd0c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonObject &gt; UGeoJsonSerializer::SerializeGeometry</definition>
        <argsstring>(EGeoJsonType GeometryType, const FJsonGeometry &amp;Geometry, bool bSerializeZ=true)</argsstring>
        <name>SerializeGeometry</name>
        <qualifiedname>UGeoJsonSerializer::SerializeGeometry</qualifiedname>
        <param>
          <type><ref refid="_geo_json_wrapper_types_8h_1abe0c1594da7eaae696f40d7abd5cb36d" kindref="member">EGeoJsonType</ref></type>
          <declname>GeometryType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_geometry" kindref="compound">FJsonGeometry</ref> &amp;</type>
          <declname>Geometry</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует GeoJSON геометрию в JSON объект. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GeometryType</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип сериализуемой геометрии. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Геометрия для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON объект. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="66" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="102" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1aa4eb0fde98e5853621b74237ba264fcb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeVector</definition>
        <argsstring>(const FVector &amp;Vector, bool bSerializeZ=true)</argsstring>
        <name>SerializeVector</name>
        <qualifiedname>UGeoJsonSerializer::SerializeVector</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>Vector</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует объект FVector в JSON массив. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект FVector, который необходимо сериализовать. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющий сериализованный объект FVector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="75" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a1de37094f0a28f12fa9f50c4eb33ffd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeRotator</definition>
        <argsstring>(const FRotator &amp;Rotation)</argsstring>
        <name>SerializeRotator</name>
        <qualifiedname>UGeoJsonSerializer::SerializeRotator</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FRotator</ref> &amp;</type>
          <declname>Rotation</declname>
        </param>
        <briefdescription>
<para>Сериализует объект FRotator в массив объектов FJsonValue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект FRotator для сериализации. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющих сериализованный FRotator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="83" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1aaf9369791d4b5bd02cdb4dea1a9b65fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializePoint</definition>
        <argsstring>(const FJsonPoint &amp;Point, bool bSerializeZ=true)</argsstring>
        <name>SerializePoint</name>
        <qualifiedname>UGeoJsonSerializer::SerializePoint</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_point" kindref="compound">FJsonPoint</ref> &amp;</type>
          <declname>Point</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует точку GeoJSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющих точку. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="92" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1ab568050d9bb4a411efeeaa915b061d2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeMultiPoint</definition>
        <argsstring>(const FJsonMultiPoint &amp;MultiPoint, bool bSerializeZ=true)</argsstring>
        <name>SerializeMultiPoint</name>
        <qualifiedname>UGeoJsonSerializer::SerializeMultiPoint</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_multi_point" kindref="compound">FJsonMultiPoint</ref> &amp;</type>
          <declname>MultiPoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует мультиточку GeoJSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MultiPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Мультиточка для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющих мультиточку. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="101" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1ab77c649c1d8ddd3b7a698fed8dfbef32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializePolygon</definition>
        <argsstring>(const FJsonPolygon &amp;Polygon, bool bSerializeZ=true)</argsstring>
        <name>SerializePolygon</name>
        <qualifiedname>UGeoJsonSerializer::SerializePolygon</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_polygon" kindref="compound">FJsonPolygon</ref> &amp;</type>
          <declname>Polygon</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует полигон GeoJSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>Полигон для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющих полигон. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="110" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a0cf2aefb8df94312448a677b06ddaec6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeMultiPolygon</definition>
        <argsstring>(const FJsonMultiPolygon &amp;MultiPolygon, bool bSerializeZ=true)</argsstring>
        <name>SerializeMultiPolygon</name>
        <qualifiedname>UGeoJsonSerializer::SerializeMultiPolygon</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_multi_polygon" kindref="compound">FJsonMultiPolygon</ref> &amp;</type>
          <declname>MultiPolygon</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует мультиполигон GeoJSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MultiPolygon</parametername>
</parameternamelist>
<parameterdescription>
<para>Мультиполигон для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив значений JSON, представляющих мультиполигон. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="119" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1ae82cbea699c8b4a4dae218de3ebe70ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeArray</definition>
        <argsstring>(const TMap&lt; FString, FString &gt; &amp;Properties, const FString &amp;Prefix)</argsstring>
        <name>SerializeArray</name>
        <qualifiedname>UGeoJsonSerializer::SerializeArray</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;</type>
          <declname>Properties</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Prefix</declname>
        </param>
        <briefdescription>
<para>Сериализует свойства, представленные в виде ключ-значение в JSON-массив </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Свойства для сериализации </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Префикс ключа, для которого нужна сериализация </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON-массив </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="128" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="162" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_u_geo_json_serializer_1a13aad5300e97011caef16700208a62e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonObject &gt; UGeoJsonSerializer::SerializeObject</definition>
        <argsstring>(const TMap&lt; FString, FString &gt; &amp;Properties, const FString &amp;Prefix)</argsstring>
        <name>SerializeObject</name>
        <qualifiedname>UGeoJsonSerializer::SerializeObject</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;</type>
          <declname>Properties</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Prefix</declname>
        </param>
        <briefdescription>
<para>Сериализует свойства, представленные в виде ключ-значение в JSON-объект </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Свойства для сериализации </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Префикс ключа, для которого нужна сериализация </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Сериализованный JSON-объект </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="137" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Private/GeoJsonSerializer.cpp" bodystart="198" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_u_geo_json_serializer_1aea46db602d644825a7f88ba60ee83bf6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonType</ref></type>
          </param>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FSerializer</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &gt;</type>
        <definition>TArray&lt; TSharedPtr&lt; FJsonValue &gt; &gt; UGeoJsonSerializer::SerializeGeometry</definition>
        <argsstring>(const FJsonType &amp;Coords, const FSerializer &amp;SubGeomSerializer, bool bSerializeZ=true)</argsstring>
        <name>SerializeGeometry</name>
        <qualifiedname>UGeoJsonSerializer::SerializeGeometry</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonType</ref> &amp;</type>
          <declname>Coords</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FSerializer</ref> &amp;</type>
          <declname>SubGeomSerializer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSerializeZ</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Сериализует заданные координаты геометрии с использованием предоставленной функции для сериализации подгеометрии. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Coords</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты геометрии для сериализации. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SubGeomSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>Функция сериализации подгеометрии. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bSerializeZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Если истина, сериализует трехмерную геометрию, иначе - двумерную</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив shared pointers указывающих на значения JSON, представляющие сериализованную геометрию. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="150" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" bodystart="154" bodyend="162"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UGeoJsonSerializer</label>
        <link refid="class_u_geo_json_serializer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UGeoJsonSerializer</label>
        <link refid="class_u_geo_json_serializer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" line="21" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeoJsonWrapper/Source/GeoJsonWrapper/Public/GeoJsonSerializer.h" bodystart="22" bodyend="151"/>
    <listofallmembers>
      <member refid="class_u_geo_json_serializer_1ae82cbea699c8b4a4dae218de3ebe70ab" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeArray</name></member>
      <member refid="class_u_geo_json_serializer_1a27006a67f198f5d6432cd4a7f9097074" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeFeature</name></member>
      <member refid="class_u_geo_json_serializer_1aa1655ee74656ec094bfebee4ccd01f47" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeFeatureCollection</name></member>
      <member refid="class_u_geo_json_serializer_1a1eb4734f4097843ecacf459f441dd0c3" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeGeometry</name></member>
      <member refid="class_u_geo_json_serializer_1aea46db602d644825a7f88ba60ee83bf6" prot="private" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeGeometry</name></member>
      <member refid="class_u_geo_json_serializer_1ab568050d9bb4a411efeeaa915b061d2f" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeMultiPoint</name></member>
      <member refid="class_u_geo_json_serializer_1a0cf2aefb8df94312448a677b06ddaec6" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeMultiPolygon</name></member>
      <member refid="class_u_geo_json_serializer_1a13aad5300e97011caef16700208a62e3" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeObject</name></member>
      <member refid="class_u_geo_json_serializer_1a7d5aa9ccd43cdd39953b688bfa2fdebc" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeObjectToString</name></member>
      <member refid="class_u_geo_json_serializer_1a93046fdc35f8b65827b9ad65db9c63b6" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeObjectToString</name></member>
      <member refid="class_u_geo_json_serializer_1aaf9369791d4b5bd02cdb4dea1a9b65fb" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializePoint</name></member>
      <member refid="class_u_geo_json_serializer_1ab77c649c1d8ddd3b7a698fed8dfbef32" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializePolygon</name></member>
      <member refid="class_u_geo_json_serializer_1a1de37094f0a28f12fa9f50c4eb33ffd7" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeRotator</name></member>
      <member refid="class_u_geo_json_serializer_1aa4eb0fde98e5853621b74237ba264fcb" prot="public" virt="non-virtual"><scope>UGeoJsonSerializer</scope><name>SerializeVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
