<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_meta_algo_utils_8h" kind="file" language="C++">
    <compoundname>MetaAlgoUtils.h</compoundname>
    <includes local="yes">CoreMinimal.h</includes>
    <includes local="yes">Algo/Copy.h</includes>
    <includes local="yes">Math/NumericLimits.h</includes>
    <includedby refid="_variant_console_commands_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantDebug/VariantConsoleCommands.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h</label>
        <link refid="_meta_algo_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Algo/Copy.h</label>
      </node>
      <node id="2">
        <label>CoreMinimal.h</label>
      </node>
      <node id="4">
        <label>Math/NumericLimits.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h</label>
        <link refid="_meta_algo_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantDebug/VariantConsoleCommands.cpp</label>
        <link refid="_variant_console_commands_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_meta">Meta</innernamespace>
    <innernamespace refid="namespace_meta_1_1_algo">Meta::Algo</innernamespace>
    <innernamespace refid="namespace_meta_1_1_algo_1_1_detail">Meta::Algo::Detail</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">::SizeType</ref></type>
        <definition>using Meta::Algo::Detail::TSizeType = typedef typename TArray&lt;T&gt;::SizeType</definition>
        <argsstring></argsstring>
        <name>TSizeType</name>
        <qualifiedname>Meta::Algo::Detail::TSizeType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" line="13" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" bodystart="13" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_meta_1_1_algo_1_1_detail_1a3d7c54f4066dae8c71ed3852812e20eb" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> TSizeType&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;</type>
        <definition>constexpr TSizeType&lt;T&gt; Meta::Algo::Detail::SizeMax</definition>
        <argsstring></argsstring>
        <name>SizeMax</name>
        <qualifiedname>Meta::Algo::Detail::SizeMax</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TNumericLimits</ref>&lt;TSizeType&lt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref>&gt;&gt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">::Max</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" line="16" column="37" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_meta_1_1_algo_1ace2824efbbbe0ac09861f9b88caa0fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;</type>
        <definition>TArray&lt; T &gt; Meta::Algo::Slice</definition>
        <argsstring>(const TArray&lt; T &gt; &amp;Array, Detail::TSizeType&lt; T &gt; Start, Detail::TSizeType&lt; T &gt; End=Detail::SizeMax&lt; T &gt;)</argsstring>
        <name>Slice</name>
        <qualifiedname>Meta::Algo::Slice</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt; &amp;</type>
          <declname>Array</declname>
        </param>
        <param>
          <type>Detail::TSizeType&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;</type>
          <declname>Start</declname>
        </param>
        <param>
          <type>Detail::TSizeType&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;</type>
          <declname>End</declname>
          <defval>Detail::SizeMax&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref> &gt;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" line="20" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h" bodystart="20" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CoreMinimal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Algo/Copy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math/NumericLimits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="namespace_meta_1_1_algo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_meta_1_1_algo" kindref="compound">Meta::Algo</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespace_meta_1_1_algo_1_1_detail" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Detail</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="13" refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" kindref="member">TSizeType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TArray&lt;T&gt;::SizeType;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="16" refid="namespace_meta_1_1_algo_1_1_detail_1a3d7c54f4066dae8c71ed3852812e20eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" kindref="member">TSizeType&lt;T&gt;</ref><sp/><ref refid="namespace_meta_1_1_algo_1_1_detail_1a3d7c54f4066dae8c71ed3852812e20eb" kindref="member">SizeMax</ref><sp/>=<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TNumericLimits&lt;TSizeType&lt;T&gt;</ref>&gt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">::Max</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20" refid="namespace_meta_1_1_algo_1ace2824efbbbe0ac09861f9b88caa0fc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray&lt;T&gt;</ref><sp/><ref refid="namespace_meta_1_1_algo_1ace2824efbbbe0ac09861f9b88caa0fc5" kindref="member">Slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray&lt;T&gt;</ref>&amp;<sp/>Array,<sp/><ref refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" kindref="member">Detail::TSizeType&lt;T&gt;</ref><sp/>Start,<sp/><ref refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" kindref="member">Detail::TSizeType&lt;T&gt;</ref><sp/><ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>=<sp/>Detail::SizeMax&lt;T&gt;)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>==<sp/>Detail::SizeMax&lt;T&gt;)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>=<sp/>Array.Num();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_meta_1_1_algo_1_1_detail_1af2eb5ac8b66edc4b9752d892c955ba23" kindref="member">Detail::TSizeType&lt;T&gt;</ref><sp/>Count<sp/>=<sp/><ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>==<sp/>Detail::SizeMax&lt;T&gt;<sp/>?<sp/><ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>:<sp/><ref refid="_library_8h_1a3984936eef37a8ac0ba1cd004d546a4d" kindref="member">End</ref><sp/>-<sp/>Start;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray&lt;T&gt;</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">MakeArrayView</ref>(Array).<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Mid</ref>(Start,<sp/>Count));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaAlgoUtils.h"/>
  </compounddef>
</doxygen>
