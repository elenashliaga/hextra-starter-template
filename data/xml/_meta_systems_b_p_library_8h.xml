<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_meta_systems_b_p_library_8h" kind="file" language="C++">
    <compoundname>MetaSystemsBPLibrary.h</compoundname>
    <includes local="yes">Kismet/BlueprintFunctionLibrary.h</includes>
    <includes local="yes">MetaSystemsBPLibrary.generated.h</includes>
    <includedby refid="_meta_systems_b_p_library_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaSystems/Source/MetaSystems/Private/MetaSystemsBPLibrary.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaSystems/Source/MetaSystems/Public/MetaSystemsBPLibrary.h</label>
        <link refid="_meta_systems_b_p_library_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Kismet/BlueprintFunctionLibrary.h</label>
      </node>
      <node id="3">
        <label>MetaSystemsBPLibrary.generated.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaSystems/Source/MetaSystems/Private/MetaSystemsBPLibrary.cpp</label>
        <link refid="_meta_systems_b_p_library_8cpp"/>
      </node>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaSystems/Source/MetaSystems/Public/MetaSystemsBPLibrary.h</label>
        <link refid="_meta_systems_b_p_library_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_u_meta_systems_b_p_library" prot="public">UMetaSystemsBPLibrary</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Kismet/BlueprintFunctionLibrary.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MetaSystemsBPLibrary.generated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/><sp/>Function<sp/>library<sp/>class.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/>Each<sp/>function<sp/>in<sp/>it<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>static<sp/>and<sp/>represents<sp/>blueprint<sp/>node<sp/>that<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>blueprint.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/>When<sp/>declaring<sp/>function<sp/>you<sp/>can<sp/>define<sp/>metadata<sp/>for<sp/>the<sp/>node.<sp/>Key<sp/>function<sp/>specifiers<sp/>will<sp/>be<sp/>BlueprintPure<sp/>and<sp/>BlueprintCallable.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/>BlueprintPure<sp/>-<sp/>means<sp/>the<sp/>function<sp/>does<sp/>not<sp/>affect<sp/>the<sp/>owning<sp/>object<sp/>in<sp/>any<sp/>way<sp/>and<sp/>thus<sp/>creates<sp/>a<sp/>node<sp/>without<sp/>Exec<sp/>pins.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/>BlueprintCallable<sp/>-<sp/>makes<sp/>a<sp/>function<sp/>which<sp/>can<sp/>be<sp/>executed<sp/>in<sp/>Blueprints<sp/>-<sp/>Thus<sp/>it<sp/>has<sp/>Exec<sp/>pins.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/>DisplayName<sp/>-<sp/>full<sp/>name<sp/>of<sp/>the<sp/>node,<sp/>shown<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>node<sp/>and<sp/>in<sp/>the<sp/>blueprint<sp/>drop<sp/>down<sp/>menu.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Its<sp/>lets<sp/>you<sp/>name<sp/>the<sp/>node<sp/>using<sp/>characters<sp/>not<sp/>allowed<sp/>in<sp/>C++<sp/>function<sp/>names.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/>CompactNodeTitle<sp/>-<sp/>the<sp/>word(s)<sp/>that<sp/>appear<sp/>on<sp/>the<sp/>node.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/>Keywords<sp/>-<sp/><sp/>the<sp/>list<sp/>of<sp/>keywords<sp/>that<sp/>helps<sp/>you<sp/>to<sp/>find<sp/>node<sp/>when<sp/>you<sp/>search<sp/>for<sp/>it<sp/>using<sp/>Blueprint<sp/>drop-down<sp/>menu.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Good<sp/>example<sp/>is<sp/>&quot;Print<sp/>String&quot;<sp/>node<sp/>which<sp/>you<sp/>can<sp/>find<sp/>also<sp/>by<sp/>using<sp/>keyword<sp/>&quot;log&quot;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/>Category<sp/>-<sp/><sp/>the<sp/>category<sp/>your<sp/>node<sp/>will<sp/>be<sp/>under<sp/>in<sp/>the<sp/>Blueprint<sp/>drop-down<sp/>menu.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/>For<sp/>more<sp/>info<sp/>on<sp/>custom<sp/>blueprint<sp/>nodes<sp/>visit<sp/>documentation:</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/><sp/>https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UCLASS</ref>()</highlight></codeline>
<codeline lineno="26" refid="class_u_meta_systems_b_p_library" refkind="compound"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref><sp/><ref refid="class_u_meta_systems_b_p_library" kindref="compound">UMetaSystemsBPLibrary</ref><sp/>:<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">public</ref><sp/>UBlueprintFunctionLibrary</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">GENERATED_UCLASS_BODY</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">meta</ref><sp/>=<sp/>(DisplayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Execute<sp/>Sample<sp/>function&quot;</highlight><highlight class="normal">,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Keywords</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MetaSystems<sp/>sample<sp/>test<sp/>testing&quot;</highlight><highlight class="normal">),<sp/>Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MetaSystemsTesting&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MetaSystemsSampleFunction(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Param</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaSystems/Source/MetaSystems/Public/MetaSystemsBPLibrary.h"/>
  </compounddef>
</doxygen>
