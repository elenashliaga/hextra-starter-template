<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_base_utils_expose_8h" kind="file" language="C++">
    <compoundname>BaseUtilsExpose.h</compoundname>
    <includes local="yes">CoreMinimal.h</includes>
    <includes local="yes">UObject/Object.h</includes>
    <includes refid="_meta_unreal_utils_8h" local="yes">MetaUnrealUtils.h</includes>
    <includes refid="_meta_texture_utils_8h" local="yes">MetaTextureUtils.h</includes>
    <includes local="yes">BaseUtilsExpose.generated.h</includes>
    <includedby refid="_procedural_line_generator_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp</includedby>
    <includedby refid="_base_utils_expose_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Utilities/BaseUtils/BaseUtilsExpose.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>MetaTextureUtils.h</label>
        <link refid="_meta_texture_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MetaUnrealUtils.h</label>
        <link refid="_meta_unreal_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>MetaUtilsShare.h</label>
        <link refid="_meta_utils_share_8h"/>
      </node>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h</label>
        <link refid="_base_utils_expose_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>BaseUtilsExpose.generated.h</label>
      </node>
      <node id="2">
        <label>CoreMinimal.h</label>
      </node>
      <node id="10">
        <label>Engine/Texture2D.h</label>
      </node>
      <node id="13">
        <label>IImageWrapper.h</label>
      </node>
      <node id="12">
        <label>ImageUtils.h</label>
      </node>
      <node id="14">
        <label>Kismet/BlueprintFunctionLibrary.h</label>
      </node>
      <node id="5">
        <label>Kismet/GameplayStatics.h</label>
      </node>
      <node id="6">
        <label>LevelInstance/LevelInstanceActor.h</label>
      </node>
      <node id="16">
        <label>MetaTextureUtils.generated.h</label>
      </node>
      <node id="8">
        <label>MetaUnrealUtils.generated.h</label>
      </node>
      <node id="11">
        <label>Misc/Base64.h</label>
      </node>
      <node id="7">
        <label>Misc/Paths.h</label>
      </node>
      <node id="3">
        <label>UObject/Object.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp</label>
        <link refid="_procedural_line_generator_8cpp"/>
      </node>
      <node id="3">
        <label>/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Utilities/BaseUtils/BaseUtilsExpose.cpp</label>
        <link refid="_base_utils_expose_8cpp"/>
      </node>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h</label>
        <link refid="_base_utils_expose_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_u_base_utils_expose" prot="public">UBaseUtilsExpose</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>META<sp/>all<sp/>rights<sp/>received<sp/>(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CoreMinimal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;UObject/Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_unreal_utils_8h" kindref="compound">MetaUnrealUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_texture_utils_8h" kindref="compound">MetaTextureUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BaseUtilsExpose.generated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UCLASS</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintType</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Blueprintable</ref>)</highlight></codeline>
<codeline lineno="15" refid="class_u_base_utils_expose" refkind="compound"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">METAMOSCOW_API</ref><sp/><ref refid="class_u_base_utils_expose" kindref="compound">UBaseUtilsExpose</ref><sp/>:<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">public</ref><sp/>UObject</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERATED_BODY()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintPure</ref>,<sp/>Category=</highlight><highlight class="stringliteral">&quot;MetaBaseUtils&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPlatformLinux();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,<sp/>Category=</highlight><highlight class="stringliteral">&quot;MetaBaseUtils&quot;</highlight><highlight class="normal">,<sp/>DisplayName=</highlight><highlight class="stringliteral">&quot;Calculate<sp/>SHA1<sp/>Hash&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/>CalculateSha1Hash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">InputString</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,<sp/>Category=</highlight><highlight class="stringliteral">&quot;MetaBaseUtils&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FLinearColor</ref><sp/>HexToRgb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">HexCode</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO[linkfly]!<sp/>Избавиться<sp/>от<sp/>дублирования<sp/>-<sp/>старого<sp/>файла<sp/>утилит<sp/>Source/MetaMoscow/Public/Core/Utilities/Texture/TextureBPLibrary.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO[linkfly]<sp/>Избавиться<sp/>от<sp/>временного<sp/>суффикса<sp/>`Util`<sp/>в<sp/>GetMaterialTextureUtil<sp/>(он<sp/>нужен,<sp/>пока<sp/>существует<sp/>старый<sp/>файл)</highlight></codeline>
<codeline lineno="69" refid="class_u_base_utils_expose_1ab01b51defab49ec211b58cf588cf8bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_base_utils_expose_1ab01b51defab49ec211b58cf588cf8bab" kindref="member">UFUNCTION</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">meta</ref><sp/>=<sp/>(DisplayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Get<sp/>Textures<sp/>array<sp/>from<sp/>Material&quot;</highlight><highlight class="normal">,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Keywords</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Materials<sp/>texture&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MetaBaseUtils|Texture&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72" refid="class_u_base_utils_expose_1a3ade8dbf76c8e4ef1522063d9ae7d11f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">static</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">GetMaterialTextureUtil</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMaterialInterface</ref>*<sp/>Material,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture</ref>*&gt;&amp;<sp/>OutTextures,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllQualityLevels,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllFeatureLevels)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_meta_texture_utils_1a351d1cb9e763d8115398bae46c0ce6d7" kindref="member">UMetaTextureUtils::GetMaterialTexture</ref>(Material,<sp/>OutTextures,<sp/>bAllQualityLevels,<sp/>bAllFeatureLevels);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintPure</ref>,<sp/>Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Meta|BaseUtils&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83" refid="class_u_base_utils_expose_1add7ef36cd04405d10b766dde1a3994a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">static</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/>GetBoxCenter(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FBox</ref>&amp;<sp/><ref refid="_mass_gameplay_debug_types_8h_1a68deb526a428f98729898526f79cd64fa3cfce651e667ab85486dd42a8185f98a" kindref="member">Box</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_mass_gameplay_debug_types_8h_1a68deb526a428f98729898526f79cd64fa3cfce651e667ab85486dd42a8185f98a" kindref="member">Box</ref>.GetCenter();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UFUNCTION(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintPure</ref>,<sp/>Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Meta|BaseUtils&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94" refid="class_u_base_utils_expose_1aa0527e38e478bc7d6ac0899651411d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">static</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/>GetBoxExtent(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FBox</ref>&amp;<sp/><ref refid="_mass_gameplay_debug_types_8h_1a68deb526a428f98729898526f79cd64fa3cfce651e667ab85486dd42a8185f98a" kindref="member">Box</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_mass_gameplay_debug_types_8h_1a68deb526a428f98729898526f79cd64fa3cfce651e667ab85486dd42a8185f98a" kindref="member">Box</ref>.GetExtent();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h"/>
  </compounddef>
</doxygen>
