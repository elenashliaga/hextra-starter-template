<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_server_utils_8h" kind="file" language="C++">
    <compoundname>ServerUtils.h</compoundname>
    <includes refid="_pixel_streaming2_servers_8h" local="yes">PixelStreaming2Servers.h</includes>
    <includes local="yes">Templates/SharedPointer.h</includes>
    <includes local="yes">Misc/MonitoredProcess.h</includes>
    <includes local="yes">Dom/JsonObject.h</includes>
    <includes local="yes">Engine/EngineBaseTypes.h</includes>
    <includedby refid="_server_utils_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp</includedby>
    <includedby refid="_signalling_server_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/SignallingServer.cpp</includedby>
    <includedby refid="_server_tests_8cpp" local="yes">/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/Tests/ServerTests.cpp</includedby>
    <includedby refid="_web_socket_probe_8h" local="yes">/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/WebSocketProbe.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h</label>
        <link refid="_server_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>PixelStreaming2Servers.h</label>
        <link refid="_pixel_streaming2_servers_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Containers/Map.h</label>
      </node>
      <node id="9">
        <label>Dom/JsonObject.h</label>
      </node>
      <node id="6">
        <label>Engine/EngineBaseTypes.h</label>
      </node>
      <node id="4">
        <label>GenericPlatform/GenericPlatformMisc.h</label>
      </node>
      <node id="7">
        <label>HAL/ThreadSafeBool.h</label>
      </node>
      <node id="8">
        <label>Misc/MonitoredProcess.h</label>
      </node>
      <node id="3">
        <label>Templates/SharedPointer.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/PixelStreaming2Servers.cpp</label>
        <link refid="_pixel_streaming2_servers_8cpp"/>
      </node>
      <node id="2">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp</label>
        <link refid="_server_utils_8cpp"/>
      </node>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h</label>
        <link refid="_server_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/SignallingServer.cpp</label>
        <link refid="_signalling_server_8cpp"/>
      </node>
      <node id="6">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/SignallingServer.h</label>
        <link refid="_signalling_server_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/Tests/ServerTests.cpp</label>
        <link refid="_server_tests_8cpp"/>
      </node>
      <node id="5">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/WebSocketProbe.h</label>
        <link refid="_web_socket_probe_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_u_e">UE</innernamespace>
    <innernamespace refid="namespace_u_e_1_1_pixel_streaming2_servers">UE::PixelStreaming2Servers</innernamespace>
    <innernamespace refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils">UE::PixelStreaming2Servers::Utils</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1ab350ef37c22359e32aa38be98ed321e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UE::PixelStreaming2Servers::Utils::QueryOrSetProcessArgs</definition>
        <argsstring>(FLaunchArgs &amp;LaunchArgs, FString ArgKey, FString FallbackArgValue)</argsstring>
        <name>QueryOrSetProcessArgs</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::QueryOrSetProcessArgs</qualifiedname>
        <param>
          <type>FLaunchArgs &amp;</type>
          <declname>LaunchArgs</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>ArgKey</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FallbackArgValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inspects the <computeroutput>LaunchArgs.ProcessArgs</computeroutput> for a string key matching <computeroutput>ArgKey</computeroutput>. We assume <computeroutput>LaunchArgs.ProcessArgs</computeroutput> are passed as <computeroutput>--key=value</computeroutput> in a String. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LaunchArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>The launch args to get/set the ProcessArgs of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ArgKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to look for in the <computeroutput>LaunchArgs.ProcessArgs</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FallbackArgValue</parametername>
</parameternamelist>
<parameterdescription>
<para>If the key does not exist in the <computeroutput>LaunchArgs.ProcessArgs</computeroutput> this value to set for it in-place. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The extracted/set process arg. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="98" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="98" bodyend="110" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="23" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a5903606a52707372a496ea0a9064a6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMonitoredProcess</ref> &gt;</type>
        <definition>TSharedPtr&lt; FMonitoredProcess &gt; UE::PixelStreaming2Servers::Utils::LaunchChildProcess</definition>
        <argsstring>(FString ExecutableAbsPath, FString Args, FString LogPrefix, bool bRunAsScript)</argsstring>
        <name>LaunchChildProcess</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::LaunchChildProcess</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>ExecutableAbsPath</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>Args</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>LogPrefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bRunAsScript</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Launches an executable or script as a child process of Unreal Engine. Note: When running scripts they must be launchable through cmd.exe on Windows or bash on Linux. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ExecutableAbsPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute path to the executable or script we want to run. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument to pass to the child process we are launching. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LogPrefix</parametername>
</parameternamelist>
<parameterdescription>
<para>If the child process has output the prefix to put on the <ref refid="namespace_u_e" kindref="compound">UE</ref> log message for that output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bRunAsScript</parametername>
</parameternamelist>
<parameterdescription>
<para>If true the <computeroutput>ExecutableAbsPath</computeroutput> will be passed to cmd/bash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="19" column="12" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="19" bodyend="67" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="33" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1aa80fc090e68d7594f79ac1e7bd666929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UE::PixelStreaming2Servers::Utils::GetResourcesDir</definition>
        <argsstring>(FString &amp;OutResourcesDir)</argsstring>
        <name>GetResourcesDir</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::GetResourcesDir</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>OutResourcesDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the absolute path to the Pixel Streaming resources dir (changes based on whether called in editor or not.) In editor this PixelStreaming2/Resources in a game this is Samples/PixelStreaming2 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutResourcesDir</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute path to &quot;resources&quot; dir. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the returned path exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="112" column="6" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="112" bodyend="127" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a56e161fd9cdb98dfe76c285e7b929c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UE::PixelStreaming2Servers::Utils::GetWebServersDir</definition>
        <argsstring>(FString &amp;OutWebServersAbsPath)</argsstring>
        <name>GetWebServersDir</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::GetWebServersDir</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>OutWebServersAbsPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the absolute path to the webservers (changes based on whether called in editor or not.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutWebServersAbsPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute path to the webservers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the returned path exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="129" column="6" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="129" bodyend="145" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a8bf08d2cf68042e5697a3ed765625ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UE::PixelStreaming2Servers::Utils::GetDownloadedServer</definition>
        <argsstring>(FString &amp;OutAbsPath, FString ServerDirectoryName)</argsstring>
        <name>GetDownloadedServer</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::GetDownloadedServer</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>OutAbsPath</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>ServerDirectoryName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attempts to get the absolute path to a downloaded server residing in the /Resources directory of the Pixel Streaming plugin, if it exists. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutAbsPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute path of the downloaded server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ServerDirectoryName</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory name of the server we should look for under /Resources </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the scripts to launch the server exist at this location. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="147" column="6" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="147" bodyend="173" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2badef0855a1e0dd6e6f4b92662aeeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMonitoredProcess</ref> &gt;</type>
        <definition>TSharedPtr&lt; FMonitoredProcess &gt; UE::PixelStreaming2Servers::Utils::DownloadPixelStreaming2Servers</definition>
        <argsstring>(bool bSkipIfPresent)</argsstring>
        <name>DownloadPixelStreaming2Servers</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::DownloadPixelStreaming2Servers</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bSkipIfPresent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Download the Pixel Streaming servers using the <computeroutput>get_ps_servers</computeroutput> scripts. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bSkipIfPresent</parametername>
</parameternamelist>
<parameterdescription>
<para>Servers will not be downloaded if they are already present. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child process that is used to download the servers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="175" column="12" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="175" bodyend="205" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="64" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a41045857c65355c3d7a6eea29227b5e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UE::PixelStreaming2Servers::Utils::PopulateCirrusEndPoints</definition>
        <argsstring>(FLaunchArgs &amp;InLaunchArgs, TMap&lt; EEndpoint, FURL &gt; &amp;OutEndPoints)</argsstring>
        <name>PopulateCirrusEndPoints</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::PopulateCirrusEndPoints</qualifiedname>
        <param>
          <type>FLaunchArgs &amp;</type>
          <declname>InLaunchArgs</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">EEndpoint</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FURL</ref> &gt; &amp;</type>
          <declname>OutEndPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Populates the cirrus endpoints by extracting endpoint information from the <computeroutput>InLaunchArgs.ProcessArgs</computeroutput>, and if not found, using defaults. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InLaunchArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>The launch args containing the process args that we will be inspecting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutEndPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The end points for the server if we launch it with these launch args. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="207" column="6" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="207" bodyend="250" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2bc216882e8df418cdc99ded6c67bd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UE::PixelStreaming2Servers::Utils::ToString</definition>
        <argsstring>(FURL Url)</argsstring>
        <name>ToString</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::ToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FURL</ref></type>
          <declname>Url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <computeroutput>FURL</computeroutput> into a <computeroutput>FString</computeroutput>. <computeroutput>FURL::ToString()</computeroutput> already exists; however, it appends a problematic trailing slash to the output string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Url</parametername>
</parameternamelist>
<parameterdescription>
<para>The url to format into a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The url formatted without a trailing slash (the trailing slash messes up the Websocket clients). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="252" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="252" bodyend="255" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="78" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a6edc875ded5bb901918d68de1041d843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UE::PixelStreaming2Servers::Utils::ToString</definition>
        <argsstring>(TArrayView&lt; uint8 &gt; UTF8Bytes)</argsstring>
        <name>ToString</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::ToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArrayView</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">uint8</ref> &gt;</type>
          <declname>UTF8Bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a UTF8 byte array to an FString <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>UTF8Bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte array of UTF8 characters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string representation of the byte array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="257" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="257" bodyend="262" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="85" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1afe551c6d32082e431939564525752c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UE::PixelStreaming2Servers::Utils::ToString</definition>
        <argsstring>(TSharedPtr&lt; FJsonObject &gt; JSONObj)</argsstring>
        <name>ToString</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::ToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
          <declname>JSONObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert JSON object to FString. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JSONObj</parametername>
</parameternamelist>
<parameterdescription>
<para>A JSON object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stringified JSON object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="264" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="264" bodyend="274" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="92" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a0c9809132adbfe0f530171abd741d240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonObject &gt; UE::PixelStreaming2Servers::Utils::ToJSON</definition>
        <argsstring>(const FString &amp;InString)</argsstring>
        <name>ToJSON</name>
        <qualifiedname>UE::PixelStreaming2Servers::Utils::ToJSON</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>InString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a JSON formatted string into a JSON object, if possible. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InString</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON object expressed as a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output json object or null on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" line="276" column="12" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.cpp" bodystart="276" bodyend="285" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h" declline="99" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pixel_streaming2_servers_8h" kindref="compound">PixelStreaming2Servers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Templates/SharedPointer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Misc/MonitoredProcess.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Dom/JsonObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Engine/EngineBaseTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_u_e_1_1_pixel_streaming2_servers" kindref="compound">UE::PixelStreaming2Servers</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Utils</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1ab350ef37c22359e32aa38be98ed321e7" kindref="member">QueryOrSetProcessArgs</ref>(FLaunchArgs&amp;<sp/>LaunchArgs,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ArgKey</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FallbackArgValue</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr&lt;FMonitoredProcess&gt;</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a5903606a52707372a496ea0a9064a6c9" kindref="member">LaunchChildProcess</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ExecutableAbsPath</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Args</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">LogPrefix</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bRunAsScript</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1aa80fc090e68d7594f79ac1e7bd666929" kindref="member">GetResourcesDir</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">OutResourcesDir</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a56e161fd9cdb98dfe76c285e7b929c54" kindref="member">GetWebServersDir</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">OutWebServersAbsPath</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a8bf08d2cf68042e5697a3ed765625ad0" kindref="member">GetDownloadedServer</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">OutAbsPath</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ServerDirectoryName</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr&lt;FMonitoredProcess&gt;</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2badef0855a1e0dd6e6f4b92662aeeb2" kindref="member">DownloadPixelStreaming2Servers</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bSkipIfPresent</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a41045857c65355c3d7a6eea29227b5e5" kindref="member">PopulateCirrusEndPoints</ref>(FLaunchArgs&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">InLaunchArgs</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap&lt;EEndpoint, FURL&gt;</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">OutEndPoints</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2bc216882e8df418cdc99ded6c67bd5d" kindref="member">ToString</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FURL</ref><sp/>Url);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2bc216882e8df418cdc99ded6c67bd5d" kindref="member">ToString</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArrayView&lt;uint8&gt;</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTF8Bytes</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a2bc216882e8df418cdc99ded6c67bd5d" kindref="member">ToString</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr&lt;FJsonObject&gt;</ref><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">JSONObj</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr&lt;FJsonObject&gt;</ref><sp/><ref refid="namespace_u_e_1_1_pixel_streaming2_servers_1_1_utils_1a0c9809132adbfe0f530171abd741d240" kindref="member">ToJSON</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">InString</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Utils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>UE::PixelStreaming2Servers</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2Servers/Private/ServerUtils.h"/>
  </compounddef>
</doxygen>
