<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_demo_view_meta_building" kind="class" language="C++" prot="public">
    <compoundname>ADemoViewMetaBuilding</compoundname>
    <basecompoundref refid="class_a_building_core" prot="public" virt="non-virtual">ABuildingCore</basecompoundref>
    <includes refid="_demo_view_meta_building_8h" local="no">DemoViewMetaBuilding.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1a14e4fe29d1acd62f4e448b61d0550c1c" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_demo_view_collision" kindref="compound">ADemoViewCollision</ref> * &gt;</type>
        <definition>TArray&lt;ADemoViewCollision*&gt; ADemoViewMetaBuilding::ADemoViewModeCollisionComponents</definition>
        <argsstring></argsstring>
        <name>ADemoViewModeCollisionComponents</name>
        <qualifiedname>ADemoViewMetaBuilding::ADemoViewModeCollisionComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="42" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1ad05bf9cd77cfa2f724bc362cc70f9fd4" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_demo_view_widget" kindref="compound">UDemoViewWidget</ref> &gt;</type>
        <definition>TObjectPtr&lt;UDemoViewWidget&gt; ADemoViewMetaBuilding::DemoViewModeWidgetPtr</definition>
        <argsstring></argsstring>
        <name>DemoViewModeWidgetPtr</name>
        <qualifiedname>ADemoViewMetaBuilding::DemoViewModeWidgetPtr</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
<para>Указатель на виджет режима демо-просмотра. </para>
        </briefdescription>
        <detaileddescription>
<para>Переменная DemoViewModeWidgetPtr - это указатель на экземпляр класса <ref refid="class_u_demo_view_widget" kindref="compound">UDemoViewWidget</ref>. Он используется для ссылки на виджет режима демо-просмотра и управления его поведением. Указатель инициализируется nullptr (нулл) по умолчанию. Эта переменная помечена как VisibleAnywhere, что означает, что к ней можно получить доступ и изменить её из любого класса или схемы.</para>
<para><simplesect kind="see"><para><ref refid="class_u_demo_view_widget" kindref="compound">UDemoViewWidget</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="81" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1ae5e07af028c3358250ca00ad29993c0d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UStaticMesh</ref> &gt;</type>
        <definition>TObjectPtr&lt;UStaticMesh&gt; ADemoViewMetaBuilding::CollisionStaticMesh</definition>
        <argsstring></argsstring>
        <name>CollisionStaticMesh</name>
        <qualifiedname>ADemoViewMetaBuilding::CollisionStaticMesh</qualifiedname>
        <briefdescription>
<para>Статический меш, используемый для столкновений в MetaDemoViewModeBuilding. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная представляет собой статический меш, используемый для столкновений в классе MetaDemoViewModeBuilding. Он используется для определения геометрии для обнаружения столкновений и реагирования на них. Статический меш должен быть установлен в редакторе используя категорию свойства EditAnywhere &quot;CollisionActorSettings&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="153" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1a683caaba7f9cf814fc37e3224a3141d9" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMaterialInterface</ref> &gt;</type>
        <definition>TObjectPtr&lt;UMaterialInterface&gt; ADemoViewMetaBuilding::CollisionOverrideMaterial</definition>
        <argsstring></argsstring>
        <name>CollisionOverrideMaterial</name>
        <qualifiedname>ADemoViewMetaBuilding::CollisionOverrideMaterial</qualifiedname>
        <briefdescription>
<para>Материал, используемый для переопределения материала столкновения. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная представляет материал, который будет использоваться для переопределения материала столкновения. Она доступна для редактирования в любом месте и относится к категории &quot;CollisionActorSettings&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="161" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1a626123ad611a218d1d5e26b81a4e4c29" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_a_demo_view_collision" kindref="compound">ADemoViewCollision</ref> &gt;</type>
        <definition>TObjectPtr&lt;ADemoViewCollision&gt; ADemoViewMetaBuilding::DemoViewModeCollision</definition>
        <argsstring></argsstring>
        <name>DemoViewModeCollision</name>
        <qualifiedname>ADemoViewMetaBuilding::DemoViewModeCollision</qualifiedname>
        <briefdescription>
<para>Переменная DemoViewModeCollision представляет собой указатель на объект ADemoViewModeCollisionComponent. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная видима в любом месте кода. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="169" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1a199b1bb085bea38eb05c481f77c598ce" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ADemoViewMetaBuilding::CollisionScale</definition>
        <argsstring></argsstring>
        <name>CollisionScale</name>
        <qualifiedname>ADemoViewMetaBuilding::CollisionScale</qualifiedname>
        <initializer>= 2000.0f</initializer>
        <briefdescription>
<para>Скейл коллижн актора. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная представляет масштаб, применяемый к объекту коллизии. Она используется для корректировки размера формы столкновения. Значение по умолчанию - 1200.f.</para>
<para><simplesect kind="see"><para>UPROPERTY(EditAnywhere, BlueprintReadWrite) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="180" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1ad7e4d0ba605d08673c9db1cda13364a3" prot="public" static="no" mutable="no">
        <type><ref refid="_meta_custom_cesium_sun_8h_1a1a1043c227d1d43b3e2f3337f6a1fca4" kindref="member">ELightActivationType</ref></type>
        <definition>ELightActivationType ADemoViewMetaBuilding::LastLightActivationType</definition>
        <argsstring></argsstring>
        <name>LastLightActivationType</name>
        <qualifiedname>ADemoViewMetaBuilding::LastLightActivationType</qualifiedname>
        <briefdescription>
<para>Перечисление, представляющее различные типы активации света. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="186" column="30" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_demo_view_meta_building_1a1cd7716502b893c01aeae18a94bf99e0" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_demo_view_meta_camera_component" kindref="compound">UDemoViewMetaCameraComponent</ref> * &gt;</type>
        <definition>TArray&lt;UDemoViewMetaCameraComponent*&gt; ADemoViewMetaBuilding::MetaDemoViewBuildingComponents</definition>
        <argsstring></argsstring>
        <name>MetaDemoViewBuildingComponents</name>
        <qualifiedname>ADemoViewMetaBuilding::MetaDemoViewBuildingComponents</qualifiedname>
        <briefdescription>
<para>Массив компонентов <ref refid="namespace_meta" kindref="compound">Meta</ref> Camera DemoView, связанных с классом MetaDemoViewModeBuilding. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот массив хранит экземпляры UMetaCameraDemoViewComponent, представляющие компоненты фото камеры в здании. Массив помечен как VisibleAnywhere для доступа из других классов и заполняется во время игры.</para>
<para><simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMetaCameraDemoViewComponent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="197" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="197" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a79f316fc60d334b65a369cb3ea8e9c8d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>ADemoViewMetaBuilding::BeginPlay</qualifiedname>
        <reimplements refid="class_a_building_core_1a3227c233d501ccf77bf7445385a14d06">BeginPlay</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Реализация метода BeginPlay. Этот метод вызывается при создании актера или при начале игры. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="32" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1ad736d629ec72212c6d1649b19bc99a9f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ADemoViewMetaBuilding::ShowLeftWindowWidget</definition>
        <argsstring>(AMetaPlayerController *PlayerController) override</argsstring>
        <name>ShowLeftWindowWidget</name>
        <qualifiedname>ADemoViewMetaBuilding::ShowLeftWindowWidget</qualifiedname>
        <reimplements refid="class_a_building_core_1a9461886e75b024a056e3b4ed1949cde5">ShowLeftWindowWidget</reimplements>
        <param>
          <type><ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref> *</type>
          <declname>PlayerController</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Отображает виджет левого окна для режима фотографии в классе MetaDemoViewModeBuilding.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PlayerController</parametername>
</parameternamelist>
<parameterdescription>
<para>Контроллер игрока, для которого показывается виджет левого окна. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="39" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="34" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a1924f4d7721c2a84bfa2ecadac17a4f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::OnConstruction</definition>
        <argsstring>(const FTransform &amp;Transform) override</argsstring>
        <name>OnConstruction</name>
        <qualifiedname>ADemoViewMetaBuilding::OnConstruction</qualifiedname>
        <reimplements refid="class_a_building_core_1ad71c489e95b62b3716c7d7a66482f58d">OnConstruction</reimplements>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTransform</ref> &amp;</type>
          <declname>Transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается при конструировании или переконфигурации актера после горячей перезагрузки. Он переопределен из класса <ref refid="class_building_core" kindref="compound">BuildingCore</ref>. Обновляет фото компоненты и сохраняет их координаты.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Преобразование актера. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="52" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a2b75b8aa4c6069aae3bce676f001541c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::RemoveLastDemoViewComponent</definition>
        <argsstring>()</argsstring>
        <name>RemoveLastDemoViewComponent</name>
        <qualifiedname>ADemoViewMetaBuilding::RemoveLastDemoViewComponent</qualifiedname>
        <briefdescription>
<para>Удаляет последний фото компонент из массива &quot;MetaDemoViewBuildingComponents&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para>Если массив &quot;MetaDemoViewBuildingComponents&quot; не пуст, эта функция уничтожит компонент с последним индексом и удалит его из массива. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="90" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a7f22aef7e8776d8adb7cf4b0f17a77c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::RemoveAllDemoViewComponents</definition>
        <argsstring>()</argsstring>
        <name>RemoveAllDemoViewComponents</name>
        <qualifiedname>ADemoViewMetaBuilding::RemoveAllDemoViewComponents</qualifiedname>
        <briefdescription>
<para>Удаляет все фото компоненты из массива MetaDemoViewBuildingComponents и уничтожает их. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод проходит по каждому фото компоненту в массиве MetaDemoViewBuildingComponents, проверяет, является ли он действительным, затем уничтожает компонент и удаляет его из массива. После удаления всех фото компонентов массив очищается.</para>
<para><simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMetaCameraDemoViewComponent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="102" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="161" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a21ebc79aa9a6402f67c99bf5774d031d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::SaveAllDemoViewComponentCoordinates</definition>
        <argsstring>()</argsstring>
        <name>SaveAllDemoViewComponentCoordinates</name>
        <qualifiedname>ADemoViewMetaBuilding::SaveAllDemoViewComponentCoordinates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Сохраняет координаты и владельца актера всех фото компонентов в здании. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="108" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="212" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a6d7ae8993447e5645911adc316a71883" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::CheckUpdateCesiumSunSky</definition>
        <argsstring>()</argsstring>
        <name>CheckUpdateCesiumSunSky</name>
        <qualifiedname>ADemoViewMetaBuilding::CheckUpdateCesiumSunSky</qualifiedname>
        <briefdescription>
<para>Проверяет и обновляет настройки солнца и неба Cesium для всех компонентов DemoViewMetaCameraComponents в массиве MetaDemoViewBuildingComponents. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод итерирует все компоненты DemoViewMetaCameraComponents в массиве MetaDemoViewBuildingComponents. Если существует как максимум один компонент DemoViewMetaCameraComponent с DemoViewComponent-&gt;DebugModeActive, установленным в true, он устанавливает настройки солнца на Cesium sky. Если нет ни одного компонента DemoViewMetaCameraComponent с DemoViewComponent-&gt;DebugModeActive, установленным в true, он устанавливает настройки солнца по умолчанию. Если существует более одного компонента DemoViewMetaCameraComponent с DemoViewComponent-&gt;DebugModeActive, установленным в true, он устанавливает DebugModeActive в false для всех компонентов, кроме первого, выводит предупреждающее сообщение в LogTemp и устанавливает настройки солнца по умолчанию для всех компонентов.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="122" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_demo_view_meta_building_1ad760ccf4dfaa43892740e7aa81ecc3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::AddDemoViewComponent</definition>
        <argsstring>() override</argsstring>
        <name>AddDemoViewComponent</name>
        <qualifiedname>ADemoViewMetaBuilding::AddDemoViewComponent</qualifiedname>
        <reimplements refid="class_a_building_core_1a05ec65b9ee634db00f7e23ade1471959">AddDemoViewComponent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Добавляет компонент фотографии к зданию.</para>
<para>Функция создает новый экземпляр UMetaCameraDemoViewComponent и добавляет его как компонент к зданию. Если UMetaCameraDemoViewComponent успешно создается и добавляется в качестве компонента, он присоединяется к корневому компоненту здания. Наконец, UMetaCameraDemoViewComponent добавляется в TArray&lt;UMetaCameraDemoViewComponent&gt; для отслеживания.</para>
<para><simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMetaCameraDemoViewComponent</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">AddComponentByClass</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">AddInstanceComponent</ref> </para>
</simplesect>
<simplesect kind="see"><para>UMetaCameraDemoViewComponent::AttachToComponent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="68" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="59" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a413c0054001e34c4db6e001d26e0bcc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::CreateDemoViewModeCollision</definition>
        <argsstring>()</argsstring>
        <name>CreateDemoViewModeCollision</name>
        <qualifiedname>ADemoViewMetaBuilding::CreateDemoViewModeCollision</qualifiedname>
        <briefdescription>
<para>Создать DemoViewModeCollision для MetaDemoViewModeBuilding. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает DemoViewModeCollision для MetaDemoViewModeBuilding. Он создает экземпляр ADemoViewModeCollisionComponent и присоединяет его к MetaDemoViewModeBuilding. Также устанавливает свойства CollisionStaticMesh и CollisionOverrideMaterial компонента DemoViewModeCollision. Затем завершает создание DemoViewModeCollision.</para>
<para>Примечание: У MetaDemoViewModeBuilding должен быть действительный мир для создания DemoViewModeCollision. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="135" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="94" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1add12769b40a3a0738dbdd0646aa1645b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::RemoveDemoViewModeCollision</definition>
        <argsstring>()</argsstring>
        <name>RemoveDemoViewModeCollision</name>
        <qualifiedname>ADemoViewMetaBuilding::RemoveDemoViewModeCollision</qualifiedname>
        <briefdescription>
<para>Удаляет столкновение фото режима. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет компонент столкновения фото режима из актера здания. Если компонент столкновения фото режима существует, он будет уничтожен и удален из актера. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="144" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a2e2c9887e4c8f067647c7d0a09602b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::UpdateDemoViewComponents</definition>
        <argsstring>()</argsstring>
        <name>UpdateDemoViewComponents</name>
        <qualifiedname>ADemoViewMetaBuilding::UpdateDemoViewComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Обновляет компоненты фотографии экземпляра MetaDemoViewModeBuilding.</para>
<para>Этот метод проверяет количество компонентов типа UMetaCameraDemoViewComponent и сравнивает его с количеством компонентов в массиве MetaDemoViewBuildingComponents. Если числа совпадают, обновление не требуется. Если количество компонентов больше, чем количество компонентов в массиве, последний компонент удаляется. Если количество компонентов меньше, чем количество компонентов в массиве, добавляются новые компоненты. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="209" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="176" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a79cdb6ad392161f0f1d6e1d5e1ea657b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::AddDemoViewComponent</definition>
        <argsstring>(FDemoViewModeInfo DemoViewModeInfo) override</argsstring>
        <name>AddDemoViewComponent</name>
        <qualifiedname>ADemoViewMetaBuilding::AddDemoViewComponent</qualifiedname>
        <reimplements refid="class_a_building_core_1ad845f6f89fd3cbe6d1d3f983c03fae4e">AddDemoViewComponent</reimplements>
        <param>
          <type><ref refid="struct_f_demo_view_mode_info" kindref="compound">FDemoViewModeInfo</ref></type>
          <declname>DemoViewModeInfo</declname>
        </param>
        <briefdescription>
<para>Добавляет компонент демо-вида в здание демо-вида. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод добавляет компонент демо-вида в здание демо-вида. Добавленный компонент типа <ref refid="class_u_demo_view_meta_camera_component" kindref="compound">UDemoViewMetaCameraComponent</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DemoViewModeInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Компонент демо-вида, который необходимо добавить.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_u_demo_view_meta_camera_component" kindref="compound">UDemoViewMetaCameraComponent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="220" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="74" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a5afb964ff0f3fa2480e242fa1b575caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::CombineBuildings</definition>
        <argsstring>() override</argsstring>
        <name>CombineBuildings</name>
        <qualifiedname>ADemoViewMetaBuilding::CombineBuildings</qualifiedname>
        <reimplements refid="class_a_building_core_1a13c1cd899b27d65125a696810297c330">CombineBuildings</reimplements>
        <briefdescription>
<para>Объединяет мета-здания в одно здание, устанавливая компоненты статического меша и материалы и добавляя компоненты демо-вида. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод отвечает за объединение нескольких зданий в одно здание, выполняя следующие шаги:<itemizedlist>
<listitem><para>Очищает массив CombineMetaBuildings.</para>
</listitem><listitem><para>Устанавливает компоненты статического меша и материалы для каждого здания в массиве CombineMetaBuildings.</para>
</listitem><listitem><para>Добавляет компоненты демо-вида к объединенному зданию.</para>
</listitem><listitem><para>Уничтожает все отдельные здания в массиве CombineMetaBuildings.</para>
</listitem><listitem><para>Очищает массив CombineMetaBuildings.</para>
</listitem><listitem><para>Обновляет компоненты демонстрационного вида для отражения изменений. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="235" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="230" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1ac0c857441d76815f84fa0411ceae964f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ADemoViewMetaBuilding::ComparingInformationInJSON</definition>
        <argsstring>() const override</argsstring>
        <name>ComparingInformationInJSON</name>
        <qualifiedname>ADemoViewMetaBuilding::ComparingInformationInJSON</qualifiedname>
        <reimplements refid="class_a_building_core_base_1ab97ba704067ab70af51a4114ef4ff771">ComparingInformationInJSON</reimplements>
        <briefdescription>
<para>Сравнивает информацию в JSON-файле и возвращает, равны ли они. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод сравнивает хеш SHA1 текущего JSON-файла и предоставленного JSON-содержимого. Если хеши равны, это означает, что информация в JSON-файлах одинакова.</para>
<para><simplesect kind="return"><para>Истина, если информация в JSON-файлах равна, иначе ложь. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="245" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="283" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a7bf115afa0e4f5b612d02536a95d7f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::WriteUnrealMetadataToJSON</definition>
        <argsstring>() override</argsstring>
        <name>WriteUnrealMetadataToJSON</name>
        <qualifiedname>ADemoViewMetaBuilding::WriteUnrealMetadataToJSON</qualifiedname>
        <reimplements refid="class_a_building_core_base_1ac225fb80e01553d1ac8e9faac0c7f4b4">WriteUnrealMetadataToJSON</reimplements>
        <briefdescription>
<para>Записывает метаданные Unreal в JSON. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод генерирует новое JSON представление метаданных Unreal для класса DemoViewMetaBuilding. Он вызывает метод GenerateNewJSONFromDemoViewInfo для получения JSON представления DemoViewInfo. Затем он объединяет это с JSON представлением метаданных Unreal, полученным от метода GenerateNewJSONFromUnrealMetadata. Результативное JSON содержимое сохраняется в переменной JsonContent.</para>
<para>Затем он заменяет содержимое файла по абсолютному пути, полученному из метода GetAbsolutePath, на JsonContent. Наконец, он вызывает метод ChangeColorNeedUpdateJSON для обновления JSON с цветовыми изменениями, если это необходимо.</para>
<para><simplesect kind="note"><para>Данный метод предполагает, что необходимые библиотеки и утилиты JSON были включены и инициализированы правильно. </para>
</simplesect>
<simplesect kind="note"><para>Любое существующее содержимое в файле по абсолютному пути, полученному из метода GetAbsolutePath, будет перезаписано. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="261" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a73f5a14159ba92fdc1721bda0315beb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::ChangeColorNeedUpdateJSON</definition>
        <argsstring>() override</argsstring>
        <name>ChangeColorNeedUpdateJSON</name>
        <qualifiedname>ADemoViewMetaBuilding::ChangeColorNeedUpdateJSON</qualifiedname>
        <reimplements refid="class_a_building_core_base_1a2f99d2ef85cfd7d2e2225fad94892368">ChangeColorNeedUpdateJSON</reimplements>
        <briefdescription>
<para>Этот метод используется для изменения цвета флага NeedUpdateJSON на основе сравнения информации в JSON. Он также обновляет флаг bJsonUpdated. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Этот метод устарел и должен быть заменен на <ref refid="class_a_building_core_base_1aed8a853fc441eaf4b1038938a92a05a1" kindref="member">GetUpdatedStatusColor()</ref> для получения соответствующего цвета в зависимости от свежести JSON. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="267" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="275" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a1e65bb3d213c1abecea16fcd0e854f56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString ADemoViewMetaBuilding::GenerateNewJSONFromDemoViewInfo</definition>
        <argsstring>() const</argsstring>
        <name>GenerateNewJSONFromDemoViewInfo</name>
        <qualifiedname>ADemoViewMetaBuilding::GenerateNewJSONFromDemoViewInfo</qualifiedname>
        <briefdescription>
<para>Генерирует новую строку JSON из данной информации DemoViewInfo. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает массив JSON, содержащий информацию обо всех компонентах в DemoViewInfo. Информация каждого компонента представлена как строка JSON и добавляется в массив. Итоговый массив JSON возвращается как одна строка JSON.</para>
<para><simplesect kind="return"><para>Сгенерированная строка JSON. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="278" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="290" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a261244115cdd4ebe426d87ebbb02b574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::InitDemoView</definition>
        <argsstring>(AMetaPlayerController *PlayerController)</argsstring>
        <name>InitDemoView</name>
        <qualifiedname>ADemoViewMetaBuilding::InitDemoView</qualifiedname>
        <param>
          <type><ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref> *</type>
          <declname>PlayerController</declname>
        </param>
        <briefdescription>
<para>Инициализирует Demo View здания <ref refid="namespace_meta" kindref="compound">Meta</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод отвечает за инициализацию Demo View здания <ref refid="namespace_meta" kindref="compound">Meta</ref>. В качестве параметра он принимает экземпляр <ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref> для доступа к MainHud и выполнения необходимой инициализации.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PlayerController</parametername>
</parameternamelist>
<parameterdescription>
<para>Экземпляр <ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="288" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="311" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_a_demo_view_meta_building_1a3c07c7f0d56fb86c1a2332b2d5cf43ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ADemoViewMetaBuilding::EnableDemoViewMode</definition>
        <argsstring>()</argsstring>
        <name>EnableDemoViewMode</name>
        <qualifiedname>ADemoViewMetaBuilding::EnableDemoViewMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Включает режим демо-просмотра. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="294" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/DemoViewMetaBuilding.cpp" bodystart="324" bodyend="358"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Представляет здание фото режима, который расширяет класс <ref refid="class_a_building_core" kindref="compound">ABuildingCore</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>AActor</label>
      </node>
      <node id="2">
        <label>ABuildingCore</label>
        <link refid="class_a_building_core"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ABuildingCoreBaseEx</label>
        <link refid="class_a_building_core_base_ex"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ADemoViewMetaBuilding</label>
        <link refid="class_a_demo_view_meta_building"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>AActor</label>
      </node>
      <node id="2">
        <label>ABuildingCore</label>
        <link refid="class_a_building_core"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>SetupCesiumCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ExistingCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>PositionsManager</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ABuildingCoreBaseEx</label>
        <link refid="class_a_building_core_base_ex"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>ACesiumCartographicPolygon</label>
      </node>
      <node id="1">
        <label>ADemoViewMetaBuilding</label>
        <link refid="class_a_demo_view_meta_building"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>AJrpsPlayerController</label>
        <link refid="class_a_jrps_player_controller"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>AMetaCesiumCartographicPolygon</label>
        <link refid="class_a_meta_cesium_cartographic_polygon"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>AMetaPlayerController</label>
        <link refid="class_a_meta_player_controller"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>ControlMode</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>DemoViewMode</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>APlayerController</label>
      </node>
      <node id="14">
        <label>FControlMode</label>
        <link refid="struct_f_control_mode"/>
      </node>
      <node id="8">
        <label>FSetupCesiumCartographicPolygon</label>
        <link refid="struct_f_setup_cesium_cartographic_polygon"/>
      </node>
      <node id="7">
        <label>UActorComponent</label>
      </node>
      <node id="15">
        <label>UDemoViewWidget</label>
        <link refid="class_u_demo_view_widget"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>MetaDemoViewModeBuilding</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>UPositionsManager</label>
        <link refid="class_u_positions_manager"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>UUserWidget</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" line="23" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/DemoViewMetaBuilding.h" bodystart="24" bodyend="295"/>
    <listofallmembers>
      <member refid="class_a_building_core_1a89844dfc9f417fd56585b9fc9be7656d" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ABuildingCore</name></member>
      <member refid="class_a_building_core_base_1a69581d8796dbf1cccfb049b38b57f52a" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ABuildingCoreBase</name></member>
      <member refid="class_a_building_core_base_ex_1ad044267ff54a3c19babe2009265d2662" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ABuildingCoreBaseEx</name></member>
      <member refid="class_a_building_core_1a5d11aed22efd60cf45b856d1d2457674" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ActivateBuildingsCulling</name></member>
      <member refid="class_a_building_core_1ac71d9eb13d6e514d604805b6f071ea8d" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ActivateStartBuildingTimer</name></member>
      <member refid="class_a_demo_view_meta_building_1ad760ccf4dfaa43892740e7aa81ecc3b2" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>AddDemoViewComponent</name></member>
      <member refid="class_a_demo_view_meta_building_1a79cdb6ad392161f0f1d6e1d5e1ea657b" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>AddDemoViewComponent</name></member>
      <member refid="class_a_building_core_1a0cc27249c616a0914b58ed71efef1618" prot="public" virt="virtual" ambiguityscope="ABuildingCore::"><scope>ADemoViewMetaBuilding</scope><name>AddDemoViewComponent</name></member>
      <member refid="class_a_building_core_base_1adc0ab11020b8c55d52afc12cc326be9b" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>AddExistingCartographicPolygon</name></member>
      <member refid="class_a_demo_view_meta_building_1a14e4fe29d1acd62f4e448b61d0550c1c" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ADemoViewModeCollisionComponents</name></member>
      <member refid="class_a_building_core_base_1a5cd6f15aa81269e192a4bd62cbf60ed3" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>AttachActor</name></member>
      <member refid="class_a_building_core_base_1a902c9e8b22317211b1d0808229656792" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>BaseDynamicMaterial</name></member>
      <member refid="class_a_building_core_1ab579bef0a9ef833c3f8c3f3d9ca2514d" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bCutRestorePolygons</name></member>
      <member refid="class_a_building_core_base_1a62db347057436f0cd618547d2ae80d95" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>BeginDestroy</name></member>
      <member refid="class_a_demo_view_meta_building_1a79f316fc60d334b65a369cb3ea8e9c8d" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>BeginPlay</name></member>
      <member refid="class_a_building_core_base_1a3f3af75573e8db0dd7c8e6a2fc8ec0de" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bJsonUpdated</name></member>
      <member refid="class_a_building_core_base_1ac83fc8e04f0d7bb5a6ef5cb3db4ded36" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bMediaFasadeBuilding</name></member>
      <member refid="class_a_building_core_base_1a84a591bc0a149f444be1f8cb87110958" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bNoCheckGuid</name></member>
      <member refid="class_a_building_core_base_1a6c628be7b3ea54131caa55d6b75301fc" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>Bounds</name></member>
      <member refid="class_a_building_core_1a1a16e0382617a269ed10b0d44192f6d1" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bResetSettingsOnCut</name></member>
      <member refid="class_a_building_core_base_1a0c9357a8bf5dfde7ea2c3782cb9bbdea" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bShowBuildingInfo</name></member>
      <member refid="class_a_building_core_1ad9d1bef28e9985746245453a8db0a545" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>BuildingHideWidgetEvent</name></member>
      <member refid="class_a_building_core_base_1a0438c67018693b34a4dd47286c1a8b81" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>bUseOldApiBuildingOption</name></member>
      <member refid="class_a_demo_view_meta_building_1a73f5a14159ba92fdc1721bda0315beb6" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>ChangeColorNeedUpdateJSON</name></member>
      <member refid="class_a_building_core_base_1a285628ccc5d12b4f48176adc40831bd2" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CheckId</name></member>
      <member refid="class_a_building_core_base_1ab82ef54f9050cd04f493d1c442c8b9c4" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CheckPolygonsProcessor</name></member>
      <member refid="class_a_demo_view_meta_building_1a6d7ae8993447e5645911adc316a71883" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CheckUpdateCesiumSunSky</name></member>
      <member refid="class_a_building_core_1ab8b73c00062dd8230f1a8e5798ad57aa" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CheckVisibilityConditions</name></member>
      <member refid="class_a_demo_view_meta_building_1a683caaba7f9cf814fc37e3224a3141d9" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CollisionOverrideMaterial</name></member>
      <member refid="class_a_demo_view_meta_building_1a199b1bb085bea38eb05c481f77c598ce" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CollisionScale</name></member>
      <member refid="class_a_demo_view_meta_building_1ae5e07af028c3358250ca00ad29993c0d" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CollisionStaticMesh</name></member>
      <member refid="class_a_demo_view_meta_building_1a5afb964ff0f3fa2480e242fa1b575caa" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>CombineBuildings</name></member>
      <member refid="class_a_building_core_1af1e6aa8a2f9a442b1631bcfd5a4ae17d" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CombineMetaBuildings</name></member>
      <member refid="class_a_demo_view_meta_building_1ac0c857441d76815f84fa0411ceae964f" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>ComparingInformationInJSON</name></member>
      <member refid="class_a_building_core_base_1aadf06530111089e08cdb147d78ec4694" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ContainerStaticMeshComponents</name></member>
      <member refid="class_a_building_core_1af9a6227eba087f8ffa0a8e326f018b2f" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ConvertToDemoView</name></member>
      <member refid="class_a_demo_view_meta_building_1a413c0054001e34c4db6e001d26e0bcc4" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CreateDemoViewModeCollision</name></member>
      <member refid="class_a_building_core_base_1afb8457a1e25344a48deb4530e095128f" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>CutPolygons</name></member>
      <member refid="class_a_building_core_1a1409c85cda19ef684fe35e2447dc882b" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DataBaseCounter</name></member>
      <member refid="class_a_building_core_1abe1d20eac270c60ae00b910198894f4b" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DataInfoGetter</name></member>
      <member refid="class_a_building_core_1ac7207d29f5dc8ead4f7babd11c9f5d33" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DataInfoSetter</name></member>
      <member refid="class_a_building_core_base_1a281893dae406bbd8f8e238decc0be61e" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DECLARE_DELEGATE</name></member>
      <member refid="class_a_building_core_base_1a2e7e037a7eaa74e6b4b73e8e3faf66d2" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DECLARE_MULTICAST_DELEGATE_OneParam</name></member>
      <member refid="class_a_building_core_base_1a1275ad9665cb946f4bb3a0e06a3c3053" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DECLARE_MULTICAST_DELEGATE_ThreeParams</name></member>
      <member refid="class_a_demo_view_meta_building_1a626123ad611a218d1d5e26b81a4e4c29" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DemoViewModeCollision</name></member>
      <member refid="class_a_demo_view_meta_building_1ad05bf9cd77cfa2f724bc362cc70f9fd4" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DemoViewModeWidgetPtr</name></member>
      <member refid="class_a_building_core_1a93fe227eb2ddfeed970f688c680702bf" prot="private" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>Destroyed</name></member>
      <member refid="class_a_building_core_base_1a8dd4a62b5b79cc018a2d312ee5369ca2" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>DoesAnyTextureHaveAlphaChannel</name></member>
      <member refid="class_a_demo_view_meta_building_1a3c07c7f0d56fb86c1a2332b2d5cf43ac" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>EnableDemoViewMode</name></member>
      <member refid="class_a_building_core_1a5a13359942ef2dec937c07d0751f3dc2" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ExistingCartographicPolygon</name></member>
      <member refid="class_a_demo_view_meta_building_1a1e65bb3d213c1abecea16fcd0e854f56" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GenerateNewJSONFromDemoViewInfo</name></member>
      <member refid="class_a_building_core_base_1a9f822a8ddd547db712f59c1d2515c528" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GenerateNewJSONFromUnrealMetadata</name></member>
      <member refid="class_a_building_core_base_1a7a7b0860b65aa01fc25aef624bd3ecc7" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetAbsolutePath</name></member>
      <member refid="class_a_building_core_base_ex_1a3f4b6cb3655ac1319d088ebd6a751e1c" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetAttachedPolygons</name></member>
      <member refid="class_a_building_core_base_1a61ee683f16dbf67f7b607883540e34df" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetBuildingInfoContainerClass</name></member>
      <member refid="class_a_building_core_base_1a5a978b631b4e280be0c234be2a6be1ce" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetBuildingManagerClass</name></member>
      <member refid="class_a_building_core_1a2dad2640e198abb33f329455384bf303" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetCameraLocation</name></member>
      <member refid="class_a_building_core_base_1a705e9ed7bfcefbe0f66ecb27205d96f3" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetInfoStorageManager</name></member>
      <member refid="class_a_building_core_1ab213d48333a0dcb1e3f3236188b54dd5" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetMetaPlayerController</name></member>
      <member refid="class_a_building_core_base_1a86b5ca4785feb4d2b50a5dfe690b3400" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>GetPolygonsProcessClass</name></member>
      <member refid="class_a_building_core_base_1a667b15a73a32a951dc96be207ad8535a" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetPositionsManagerClass</name></member>
      <member refid="class_a_building_core_base_1a56783619dfdf3f17c3a7f621dc706194" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetTeleportArrowTransform</name></member>
      <member refid="class_a_building_core_base_1aa31ad0d33b096bbb7a9802f19e243373" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetToggleNotifier</name></member>
      <member refid="class_a_building_core_base_1aed8a853fc441eaf4b1038938a92a05a1" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>GetUpdatedStatusColor</name></member>
      <member refid="class_a_building_core_base_1aed1be52f8a7104c17db9d1c5ef0c79de" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>Info</name></member>
      <member refid="class_a_demo_view_meta_building_1a261244115cdd4ebe426d87ebbb02b574" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>InitDemoView</name></member>
      <member refid="class_a_building_core_base_1a4d3b7e3e1259fd6ddb0479a8c5fbe1f9" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>InitializeInfo</name></member>
      <member refid="class_a_building_core_base_1ae81d3b8ba63e7aea5c0ad8af51e0dce5" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>InitializeStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1a41b090cf998c933c7245df439f98fc27" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>InitPolygonsProcessor</name></member>
      <member refid="class_a_building_core_base_1a7a3823deefffa0abf48cc7757383e43d" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>InitPositionSettings</name></member>
      <member refid="class_a_building_core_1a0ea4ae161ebc714cc725b6cc41ba3118" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>IsFirstOpenApp</name></member>
      <member refid="class_a_building_core_base_1a323f474d0bb2d94aba906da5ea2614b8" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>JsonContent</name></member>
      <member refid="class_a_building_core_base_1afe5d9dc12af8a717ac22d351db321ba5" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>JsonUpdatedStatusColorMap</name></member>
      <member refid="class_a_demo_view_meta_building_1ad7e4d0ba605d08673c9db1cda13364a3" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>LastLightActivationType</name></member>
      <member refid="class_a_demo_view_meta_building_1a1cd7716502b893c01aeae18a94bf99e0" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>MetaDemoViewBuildingComponents</name></member>
      <member refid="class_a_building_core_1ae7131f8a1fea20cb8c7c2df039cd6d6e" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>MetaDemoViewModeBuilding</name></member>
      <member refid="class_a_building_core_1ae34d75f4c5b0e843b71e4e4765f6b0ce" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>MetaPlayerController</name></member>
      <member refid="class_a_building_core_base_1afc618d409375936228b65e1670f071fd" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>NeedUpdateJSON</name></member>
      <member refid="class_a_demo_view_meta_building_1a1924f4d7721c2a84bfa2ecadac17a4f4" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>OnConstruction</name></member>
      <member refid="class_a_building_core_1a35f8b6c709379f95c2bc988da7287c7f" prot="private" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>OnDestroyedVisualAction</name></member>
      <member refid="class_a_building_core_1a606cd0b4da734e95e795c5840a0fa7fc" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>OnHttpGetFailJSonString</name></member>
      <member refid="class_a_building_core_1acf8698cbf8f81c67d3a7355b584a2f1d" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>OnHttpGetSuccessMiniIcon</name></member>
      <member refid="class_a_building_core_base_1a75204d8ab70741124cbd9ba55ccaa6fc" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>OnInfoSet</name></member>
      <member refid="class_a_building_core_base_1a9ba41ae213d28363407d6b2df2bd26b7" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>PolygonsProcessor</name></member>
      <member refid="class_a_building_core_base_1ac8c07cf16f1ee79ca3bd0ed635a04d2a" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>PositionsManager</name></member>
      <member refid="class_a_building_core_1ac890dab2ba34f434715c1aca4cfd056c" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>PostInitProperties</name></member>
      <member refid="class_a_building_core_base_1ac9dc567c7c432eaddb28000fb2133efd" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>PropagateStaticMobilityToStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1ab3231c150f2bf13d33d171a4e7d0ad35" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ReadBuildingJSON</name></member>
      <member refid="class_a_building_core_base_1a4bddee987cacc713d1c0746cbdbc2dda" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RefBuildingDataCollector</name></member>
      <member refid="class_a_building_core_base_1a6850415a0bc892df8cc98551077abe11" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>RegisterInInfoStorageManager</name></member>
      <member refid="class_a_demo_view_meta_building_1a7f22aef7e8776d8adb7cf4b0f17a77c3" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RemoveAllDemoViewComponents</name></member>
      <member refid="class_a_building_core_base_1a92bfaea50bfa3d34ba792d94e511b9af" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RemoveCartographicPolygons</name></member>
      <member refid="class_a_demo_view_meta_building_1add12769b40a3a0738dbdd0646aa1645b" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RemoveDemoViewModeCollision</name></member>
      <member refid="class_a_demo_view_meta_building_1a2b75b8aa4c6069aae3bce676f001541c" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RemoveLastDemoViewComponent</name></member>
      <member refid="class_a_building_core_base_1af7ddd00a4b58250bb0e6452150055ae6" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>RestorePolygons</name></member>
      <member refid="class_a_building_core_1ae8bb14f941216a5bd0ed4f7c8c1052c0" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SanitizeBuildingsArray</name></member>
      <member refid="class_a_demo_view_meta_building_1a21ebc79aa9a6402f67c99bf5774d031d" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SaveAllDemoViewComponentCoordinates</name></member>
      <member refid="class_a_building_core_base_1ad92938ffd2868715ca6fde4942f8c88b" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SceneComponent</name></member>
      <member refid="class_a_building_core_base_1a800a65984b6cf42b9629529f9c6283de" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>SetBuildingDataInfo</name></member>
      <member refid="class_a_building_core_base_1a74a30edbebfc5d56b477572ca2477b46" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetCollisionResponseChannelForStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1a82d5c1cda540165111e94d2cf13c8f75" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>SetDefaultPositionFromUnrealMetadata</name></member>
      <member refid="class_a_building_core_base_1af33e6f0989efd68a2da65bee027f29e8" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetDynamicMaterialForMesh</name></member>
      <member refid="class_a_building_core_base_1a403237fbfd20fe1781c07bb5582320ad" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetDynamicMaterials</name></member>
      <member refid="class_a_building_core_base_1abfdd4d1f97ab517443c242ec0b0bce71" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetMiniIcon</name></member>
      <member refid="class_a_building_core_base_1ac2bb65d69ee2824ceebc6c623b3ab215" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetNewUnrealMetaData</name></member>
      <member refid="class_a_building_core_base_1a5e1d7fc1e69dc3ffe4b200efa0fbf85e" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_base_1af631c960a2fb9ac997b2d18b22aa2bcb" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_base_1ac488e21b5e95781484df20996d0c088d" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_1a58925a77ec629a521dcd83a81d37a88e" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetStaticMeshComponentVisibility</name></member>
      <member refid="class_a_building_core_base_1a2d4977c5e5016901b71932cf16742b0b" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetTeleportPoint</name></member>
      <member refid="class_a_building_core_1a1ff51e5240a907ba0ef13754b0306b17" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>SetThisIntoUI</name></member>
      <member refid="class_a_building_core_base_1a22eb4e65eb2974e9c4f95361c0af097f" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetToggleNotifier</name></member>
      <member refid="class_a_building_core_1a8baa385fddaf7141d908148dd1bc2792" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SetupCesiumCartographicPolygon</name></member>
      <member refid="class_a_demo_view_meta_building_1ad736d629ec72212c6d1649b19bc99a9f" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>ShowLeftWindowWidget</name></member>
      <member refid="class_a_building_core_base_1a5295897d55756d4d403d9b737fe71f42" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>SpawnCartographicPolygon</name></member>
      <member refid="class_a_building_core_base_1a5e2a733b120b7a7d22340db3433da007" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>SwitchActivePolygonsHandler</name></member>
      <member refid="class_a_building_core_base_1a3dfafbcfa571ab74f948d5b72974248f" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>TeleportTransform</name></member>
      <member refid="class_a_building_core_1a8acd37d6ad1a796d5a0d548f80c55f4b" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>TilesLabels</name></member>
      <member refid="class_a_building_core_1af1c6da1a42442b647012f82843ebd469" prot="protected" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>TilesPolygons</name></member>
      <member refid="class_a_building_core_base_1a61cfdd2f6cb2f2e3b90a681b6ec426b4" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>TimerRegistration</name></member>
      <member refid="class_a_building_core_base_ex_1aa22919a325b4f5dbc11f9e56b297b9a8" prot="protected" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>ToggleActive</name></member>
      <member refid="class_a_building_core_base_1a5fc01679285985d6ba7495d304e7bc73" prot="private" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>ToggleNotifier</name></member>
      <member refid="class_a_demo_view_meta_building_1a2e2c9887e4c8f067647c7d0a09602b77" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>UpdateDemoViewComponents</name></member>
      <member refid="class_a_building_core_1a9ddea83130509731f7003f81bb61c4f8" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>UPROPERTY</name></member>
      <member refid="class_a_building_core_1af15b484c886fe94cfcf45bdfd3893fa6" prot="public" virt="non-virtual"><scope>ADemoViewMetaBuilding</scope><name>VisibilityCheckTimerHandle</name></member>
      <member refid="class_a_demo_view_meta_building_1a7bf115afa0e4f5b612d02536a95d7f98" prot="public" virt="virtual"><scope>ADemoViewMetaBuilding</scope><name>WriteUnrealMetadataToJSON</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
