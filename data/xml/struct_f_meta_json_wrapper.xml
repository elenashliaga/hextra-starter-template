<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_f_meta_json_wrapper" kind="struct" language="C++" prot="public">
    <compoundname>FMetaJsonWrapper</compoundname>
    <includes refid="_meta_json_wrapper_8h" local="no">MetaJsonWrapper.h</includes>
    <innerclass refid="class_f_meta_json_wrapper_1_1_f_iterator" prot="public">FMetaJsonWrapper::FIterator</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt;</type>
        <definition>using FMetaJsonWrapper::FTJsonPtr =  TSharedPtr&lt;FJsonValue&gt;</definition>
        <argsstring></argsstring>
        <name>FTJsonPtr</name>
        <qualifiedname>FMetaJsonWrapper::FTJsonPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="19" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_f_meta_json_wrapper_1a2dadd92ba01c0fd5a3d7b544b5053da3" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt;</type>
        <definition>using FMetaJsonWrapper::FTJsonObjPtr =  TSharedPtr&lt;FJsonObject&gt;</definition>
        <argsstring></argsstring>
        <name>FTJsonObjPtr</name>
        <qualifiedname>FMetaJsonWrapper::FTJsonObjPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="20" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_f_meta_json_wrapper_1a4ad2ed0950bf53cfe08683b91b8546c4" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValueArray</ref> &gt;</type>
        <definition>using FMetaJsonWrapper::FTJsonArrPtr =  TSharedPtr&lt;FJsonValueArray&gt;</definition>
        <argsstring></argsstring>
        <name>FTJsonArrPtr</name>
        <qualifiedname>FMetaJsonWrapper::FTJsonArrPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="21" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_f_meta_json_wrapper_1a54f9f839c66c846a3ac39e7eb9e56c47" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValueBoolean</ref> &gt;</type>
        <definition>using FMetaJsonWrapper::FTJsonBoolPtr =  TSharedPtr&lt;FJsonValueBoolean&gt;</definition>
        <argsstring></argsstring>
        <name>FTJsonBoolPtr</name>
        <qualifiedname>FMetaJsonWrapper::FTJsonBoolPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="22" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_f_meta_json_wrapper_1a109928ebccc8401f8bca43041202bff2" prot="public" static="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref> &gt;</type>
        <definition>using FMetaJsonWrapper::FTArrJsonVals =  TArray&lt;FTJsonPtr&gt;</definition>
        <argsstring></argsstring>
        <name>FTArrJsonVals</name>
        <qualifiedname>FMetaJsonWrapper::FTArrJsonVals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="23" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_f_meta_json_wrapper_1a425d6302f3b5c524c5323287344c17bd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> bool</type>
        <definition>constexpr bool FMetaJsonWrapper::GBSuppressWarnOnNotFoundKey</definition>
        <argsstring></argsstring>
        <name>GBSuppressWarnOnNotFoundKey</name>
        <qualifiedname>FMetaJsonWrapper::GBSuppressWarnOnNotFoundKey</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">true</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="26" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_f_meta_json_wrapper_1a8b37092460cd25f4d62626c6efaa4303" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref></type>
        <definition>FTJsonPtr FMetaJsonWrapper::JsonValue</definition>
        <argsstring></argsstring>
        <name>JsonValue</name>
        <qualifiedname>FMetaJsonWrapper::JsonValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="28" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_meta_json_wrapper_1a367bfa7990482d41300ecd0e41562c7b" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TUniquePtr</ref>&lt; <ref refid="struct_f_meta_json_wrapper_context" kindref="compound">FMetaJsonWrapperContext</ref> &gt;</type>
        <definition>TUniquePtr&lt;FMetaJsonWrapperContext&gt; FMetaJsonWrapper::PCtx</definition>
        <argsstring></argsstring>
        <name>PCtx</name>
        <qualifiedname>FMetaJsonWrapper::PCtx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="29" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a6798c8d3da205088cc26cd2b59d75ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::FMetaJsonWrapper</definition>
        <argsstring>()=default</argsstring>
        <name>FMetaJsonWrapper</name>
        <qualifiedname>FMetaJsonWrapper::FMetaJsonWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1afa4fe90bf894ba66fc1ff30d2c7b41c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::FMetaJsonWrapper</definition>
        <argsstring>(const FMetaJsonWrapper &amp;Other)</argsstring>
        <name>FMetaJsonWrapper</name>
        <qualifiedname>FMetaJsonWrapper::FMetaJsonWrapper</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
          <declname>Other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="33" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a2eb1f178d355a7758c8ddb6cc8d41d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::FMetaJsonWrapper</definition>
        <argsstring>(const FTJsonPtr &amp;Val)</argsstring>
        <name>FMetaJsonWrapper</name>
        <qualifiedname>FMetaJsonWrapper::FMetaJsonWrapper</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref> &amp;</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="36" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a3607fa481570a25d3268c8016333fb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::FMetaJsonWrapper</definition>
        <argsstring>(const FTJsonPtr &amp;Val, const FMetaJsonWrapperContext &amp;Context)</argsstring>
        <name>FMetaJsonWrapper</name>
        <qualifiedname>FMetaJsonWrapper::FMetaJsonWrapper</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref> &amp;</type>
          <declname>Val</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper_context" kindref="compound">FMetaJsonWrapperContext</ref> &amp;</type>
          <declname>Context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="38" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae5c8596aca031237a95310fe1c554540" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper_1a2dadd92ba01c0fd5a3d7b544b5053da3" kindref="member">FTJsonObjPtr</ref></type>
        <definition>FMetaJsonWrapper::FTJsonObjPtr FMetaJsonWrapper::GetObject</definition>
        <argsstring>() const</argsstring>
        <name>GetObject</name>
        <qualifiedname>FMetaJsonWrapper::GetObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="41" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ad0b458f2dc635c7a14cf4b592f58f1d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt;</type>
        <definition>TSharedPtr&lt; FJsonValue &gt; FMetaJsonWrapper::GetArrayVal</definition>
        <argsstring>(const int32 Idx) const</argsstring>
        <name>GetArrayVal</name>
        <qualifiedname>FMetaJsonWrapper::GetArrayVal</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>Idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="43" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="33" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a6d3a2d4282ab7623085f9c25fa928942" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsNull</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsNull</name>
        <qualifiedname>FMetaJsonWrapper::IsNull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="47" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a11430035181a812dbcc8120b59384bcc" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsArray</name>
        <qualifiedname>FMetaJsonWrapper::IsArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="48" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a995d722597819684a230351b326c6c38" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsObject</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsObject</name>
        <qualifiedname>FMetaJsonWrapper::IsObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="49" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a789f64d22f49ade03e2cd9fd64dc8060" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsString</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsString</name>
        <qualifiedname>FMetaJsonWrapper::IsString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="50" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a95846e4e50bd0fb62569369d1b3446f4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsNumberFloat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsNumberFloat</name>
        <qualifiedname>FMetaJsonWrapper::IsNumberFloat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="51" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aa2b9ceb6d1087171bd3636a4e198aa30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::IsDiscarded</definition>
        <argsstring>() const</argsstring>
        <name>IsDiscarded</name>
        <qualifiedname>FMetaJsonWrapper::IsDiscarded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="52" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1afe450876eb99f7ccbf3e4b7b64453176" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
        <definition>T FMetaJsonWrapper::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>FMetaJsonWrapper::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="54" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1af6b69d802ba7325d763f03f81246b047" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 FMetaJsonWrapper::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <qualifiedname>FMetaJsonWrapper::Size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="66" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="77" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ad4fc784335bdbbc33004dea4c573b17f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FMetaJsonWrapper::Dump</definition>
        <argsstring>() const</argsstring>
        <name>Dump</name>
        <qualifiedname>FMetaJsonWrapper::Dump</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="68" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="94" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1acdbc30944b0a100560cac9a98a10cca2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FMetaJsonWrapper::Dump</definition>
        <argsstring>(int32 Unknown) const</argsstring>
        <name>Dump</name>
        <qualifiedname>FMetaJsonWrapper::Dump</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>Unknown</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="71" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a6fc1582592eb2d4aee8a683a44491215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::Contains</definition>
        <argsstring>(const FString &amp;Key) const</argsstring>
        <name>Contains</name>
        <qualifiedname>FMetaJsonWrapper::Contains</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="73" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ab7d94cb4664e7209d5f43777709702a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::Contains</definition>
        <argsstring>(const std::string &amp;Key) const</argsstring>
        <name>Contains</name>
        <qualifiedname>FMetaJsonWrapper::Contains</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::string &amp;</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="74" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a8854b0edb1a1a54138bef20ec101822f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::Contains</definition>
        <argsstring>(const char Key[]) const</argsstring>
        <name>Contains</name>
        <qualifiedname>FMetaJsonWrapper::Contains</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">char</ref></type>
          <declname>Key</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="75" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1adebf5620893813235b01a1865cbc2830" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref></type>
        <definition>FMetaJsonWrapper::FTJsonPtr FMetaJsonWrapper::GetFieldVal</definition>
        <argsstring>(const FString &amp;Key) const</argsstring>
        <name>GetFieldVal</name>
        <qualifiedname>FMetaJsonWrapper::GetFieldVal</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="78" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a29b0fec40325ba25c46b6748f629c8b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FMetaJsonWrapper::LowValue</definition>
        <argsstring>(const FString &amp;Key, TSharedPtr&lt; FJsonValue &gt; &amp;PVal) const</argsstring>
        <name>LowValue</name>
        <qualifiedname>FMetaJsonWrapper::LowValue</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonValue</ref> &gt; &amp;</type>
          <declname>PVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="80" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="134" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ab071709f9311bbb174619b40e2478e02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &gt;</type>
        <definition>TMap&lt; FString, FMetaJsonWrapper &gt; FMetaJsonWrapper::Items</definition>
        <argsstring>() const</argsstring>
        <name>Items</name>
        <qualifiedname>FMetaJsonWrapper::Items</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="92" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="156" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a4c8694678e073c09f0327d7d700bbd53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Value</definition>
        <argsstring>(const FString &amp;Key, const FMetaJsonWrapper &amp;DefaultValue) const</argsstring>
        <name>Value</name>
        <qualifiedname>FMetaJsonWrapper::Value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="95" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a9ac54f0f4763cf0041267eccac296bc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Value</definition>
        <argsstring>(const FString &amp;Key, bool DefaultValue) const</argsstring>
        <name>Value</name>
        <qualifiedname>FMetaJsonWrapper::Value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="97" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae9ff5acb111f32d912813cf5c5abeeec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Value</definition>
        <argsstring>(const FString &amp;Key, int32 DefaultValue) const</argsstring>
        <name>Value</name>
        <qualifiedname>FMetaJsonWrapper::Value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="99" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a0a805d17f9a18649a6323b4b1d440b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Value</definition>
        <argsstring>(const FString &amp;Key, const char DefaultValue[]) const</argsstring>
        <name>Value</name>
        <qualifiedname>FMetaJsonWrapper::Value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">char</ref></type>
          <declname>DefaultValue</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="101" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a1a016445ee1c06bc29a152e5092fc240" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::operator[]</definition>
        <argsstring>(const FString &amp;Key) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>FMetaJsonWrapper::operator[]</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="104" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="190" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a53b7dbce4fec5ca3adcec0ae6d68c31c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::operator[]</definition>
        <argsstring>(const TCHAR Key[]) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>FMetaJsonWrapper::operator[]</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TCHAR</ref></type>
          <declname>Key</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="105" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a08570f836c9deb990488fad1ebc5db4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::operator[]</definition>
        <argsstring>(const char Key[]) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>FMetaJsonWrapper::operator[]</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">char</ref></type>
          <declname>Key</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="106" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a095a479790842d6afbb7167c133f41b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::operator[]</definition>
        <argsstring>(const std::string &amp;Key) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>FMetaJsonWrapper::operator[]</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::string &amp;</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="107" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a1a2fedfd625cb6e510910a8b365bb402" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::operator[]</definition>
        <argsstring>(const int32 Idx) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>FMetaJsonWrapper::operator[]</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>Idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="109" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a95a14b602071fab7218296051415d68c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const FString &amp;Val)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="111" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae54bae5b646c5a70f48293248065f9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const TCHAR Val[])</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TCHAR</ref></type>
          <declname>Val</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="113" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aaa9ce3fcfb3d00232381a48ab6f1bdc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const std::string &amp;Val)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::string &amp;</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="115" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a04fc2b65761fc1f54149657d43d1fb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const char Val[])</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">char</ref></type>
          <declname>Val</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="117" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a0da1bb38df5ea3ec95b536df93c18db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const FMetaJsonWrapper &amp;Other)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
          <declname>Other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="119" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae0a7bc78d2279d88d490f008ec38cd68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const TArray&lt; double &gt; &amp;Values)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref> &gt; &amp;</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="121" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="256" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1afdbee8c72ebbe7edc3b982702925e14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(const std::initializer_list&lt; double &gt; &amp;Values)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> std::initializer_list&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref> &gt; &amp;</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="123" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="266" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a8f8534e929c7353897e5eb8dbd2a69b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
        <definition>FMetaJsonWrapper &amp; FMetaJsonWrapper::operator=</definition>
        <argsstring>(bool bFlag)</argsstring>
        <name>operator=</name>
        <qualifiedname>FMetaJsonWrapper::operator=</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="125" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="276" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a554f327dda7b0a2f5d1d8da200ac9df1" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator FTJsonPtr</definition>
        <argsstring>() const</argsstring>
        <name>operator FTJsonPtr</name>
        <qualifiedname>FMetaJsonWrapper::operator FTJsonPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="127" column="18"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a32a09466da3aa9805236100f83b7eef8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>FMetaJsonWrapper::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="130" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="287" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae2c19fea38877214501f74494de605b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator double</definition>
        <argsstring>() const</argsstring>
        <name>operator double</name>
        <qualifiedname>FMetaJsonWrapper::operator double</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="133" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="312" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a7cc5d5baf04d1432065932ef995a04c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator int64</definition>
        <argsstring>() const</argsstring>
        <name>operator int64</name>
        <qualifiedname>FMetaJsonWrapper::operator int64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="136" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aa66e2065bd6d187fed74b0f91b06b836" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator int32</definition>
        <argsstring>() const</argsstring>
        <name>operator int32</name>
        <qualifiedname>FMetaJsonWrapper::operator int32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="138" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1adcf3f957a0f2db362b0d26b5f48bd849" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FMetaJsonWrapper::operator FString</definition>
        <argsstring>() const</argsstring>
        <name>operator FString</name>
        <qualifiedname>FMetaJsonWrapper::operator FString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="141" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ae6ff747be6f0e0ccc65ca8f5c36aba57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_f_meta_json_wrapper_1_1_f_iterator" kindref="compound">FIterator</ref></type>
        <definition>FMetaJsonWrapper::FIterator FMetaJsonWrapper::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>FMetaJsonWrapper::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="178" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a8e0dd6c9356ec3f3835105a15200c677" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_f_meta_json_wrapper_1_1_f_iterator" kindref="compound">FIterator</ref></type>
        <definition>FMetaJsonWrapper::FIterator FMetaJsonWrapper::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>FMetaJsonWrapper::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="179" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aa1d0522f1beaebe50f2b3b27aa160417" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::value</definition>
        <argsstring>(const FString &amp;Key, const FMetaJsonWrapper &amp;DefaultValue) const</argsstring>
        <name>value</name>
        <qualifiedname>FMetaJsonWrapper::value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref> &amp;</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="186" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a309a1c3c9d9dbb08bf7b5269bda38702" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::value</definition>
        <argsstring>(const FString &amp;Key, bool DefaultValue) const</argsstring>
        <name>value</name>
        <qualifiedname>FMetaJsonWrapper::value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="188" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a526f04c0f16a8efd75eb96b18313114b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::value</definition>
        <argsstring>(const FString &amp;Key, int32 DefaultValue) const</argsstring>
        <name>value</name>
        <qualifiedname>FMetaJsonWrapper::value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="190" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aceebc329e8337daf85ffd80e9f6a0cae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::value</definition>
        <argsstring>(const FString &amp;Key, const char DefaultValue[]) const</argsstring>
        <name>value</name>
        <qualifiedname>FMetaJsonWrapper::value</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">char</ref></type>
          <declname>DefaultValue</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="192" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a686e82e2ebcc0f9dc035e75b72a11292" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
        <definition>T FMetaJsonWrapper::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>FMetaJsonWrapper::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="195" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aebfa92e1631c49506aa2711916e7a4c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FMetaJsonWrapper::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <qualifiedname>FMetaJsonWrapper::dump</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="198" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aaf2c1bfdab6ca8a5cbdf24a966cab2d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 FMetaJsonWrapper::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>FMetaJsonWrapper::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="222" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a87738fb83105ff77f93c14ddcf59f558" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float FMetaJsonWrapper::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>FMetaJsonWrapper::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="229" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a0732e95520034ad05679d054551a1056" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FMetaJsonWrapper::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>FMetaJsonWrapper::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="236" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a7fbe471f7f05f3a272ab5bf5c8880ac7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double FMetaJsonWrapper::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>FMetaJsonWrapper::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="250" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="250" bodyend="255"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1af189dff81eb9ca9ab1c6c35cd611d359" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref></type>
        <definition>FMetaJsonWrapper::FTJsonPtr FMetaJsonWrapper::NativeArrToJsonArr</definition>
        <argsstring>(const TArray&lt; double &gt; &amp;Values)</argsstring>
        <name>NativeArrToJsonArr</name>
        <qualifiedname>FMetaJsonWrapper::NativeArrToJsonArr</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref> &gt; &amp;</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="45" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1af5458c41960fc5b4b8cabf8d3c77f344" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" kindref="member">FTJsonPtr</ref></type>
        <definition>FMetaJsonWrapper::FTJsonPtr FMetaJsonWrapper::LowParse</definition>
        <argsstring>(const FString &amp;JsonString)</argsstring>
        <name>LowParse</name>
        <qualifiedname>FMetaJsonWrapper::LowParse</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>JsonString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="64" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1a9d7170ae39236142d3f7d7fcb45df991" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Array</definition>
        <argsstring>()</argsstring>
        <name>Array</name>
        <qualifiedname>FMetaJsonWrapper::Array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="83" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ade32e1a9a3050e6b61bf49631b94ff7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Object</definition>
        <argsstring>()</argsstring>
        <name>Object</name>
        <qualifiedname>FMetaJsonWrapper::Object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="85" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1ac514b16cb0913ad551f213131d727386" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Null</definition>
        <argsstring>()</argsstring>
        <name>Null</name>
        <qualifiedname>FMetaJsonWrapper::Null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="87" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_meta_json_wrapper_1aa880e3520aba7ea71824c39e0d409bc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_meta_json_wrapper" kindref="compound">FMetaJsonWrapper</ref></type>
        <definition>FMetaJsonWrapper FMetaJsonWrapper::Parse</definition>
        <argsstring>(const FString &amp;JsonString)</argsstring>
        <name>Parse</name>
        <qualifiedname>FMetaJsonWrapper::Parse</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>JsonString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="89" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaJsonWrapper.cpp" bodystart="155" bodyend="155"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" line="17" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaJsonWrapper.h" bodystart="18" bodyend="201"/>
    <listofallmembers>
      <member refid="struct_f_meta_json_wrapper_1a9d7170ae39236142d3f7d7fcb45df991" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Array</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae6ff747be6f0e0ccc65ca8f5c36aba57" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>begin</name></member>
      <member refid="struct_f_meta_json_wrapper_1a6fc1582592eb2d4aee8a683a44491215" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Contains</name></member>
      <member refid="struct_f_meta_json_wrapper_1ab7d94cb4664e7209d5f43777709702a5" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Contains</name></member>
      <member refid="struct_f_meta_json_wrapper_1a8854b0edb1a1a54138bef20ec101822f" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Contains</name></member>
      <member refid="struct_f_meta_json_wrapper_1aebfa92e1631c49506aa2711916e7a4c3" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>dump</name></member>
      <member refid="struct_f_meta_json_wrapper_1ad4fc784335bdbbc33004dea4c573b17f" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Dump</name></member>
      <member refid="struct_f_meta_json_wrapper_1acdbc30944b0a100560cac9a98a10cca2" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Dump</name></member>
      <member refid="struct_f_meta_json_wrapper_1a8e0dd6c9356ec3f3835105a15200c677" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>end</name></member>
      <member refid="struct_f_meta_json_wrapper_1a6798c8d3da205088cc26cd2b59d75ffe" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FMetaJsonWrapper</name></member>
      <member refid="struct_f_meta_json_wrapper_1afa4fe90bf894ba66fc1ff30d2c7b41c3" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FMetaJsonWrapper</name></member>
      <member refid="struct_f_meta_json_wrapper_1a2eb1f178d355a7758c8ddb6cc8d41d1c" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FMetaJsonWrapper</name></member>
      <member refid="struct_f_meta_json_wrapper_1a3607fa481570a25d3268c8016333fb49" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FMetaJsonWrapper</name></member>
      <member refid="struct_f_meta_json_wrapper_1a109928ebccc8401f8bca43041202bff2" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FTArrJsonVals</name></member>
      <member refid="struct_f_meta_json_wrapper_1a4ad2ed0950bf53cfe08683b91b8546c4" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FTJsonArrPtr</name></member>
      <member refid="struct_f_meta_json_wrapper_1a54f9f839c66c846a3ac39e7eb9e56c47" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FTJsonBoolPtr</name></member>
      <member refid="struct_f_meta_json_wrapper_1a2dadd92ba01c0fd5a3d7b544b5053da3" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FTJsonObjPtr</name></member>
      <member refid="struct_f_meta_json_wrapper_1a94208a7432a17e26cb62105e999c8ddf" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>FTJsonPtr</name></member>
      <member refid="struct_f_meta_json_wrapper_1a425d6302f3b5c524c5323287344c17bd" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>GBSuppressWarnOnNotFoundKey</name></member>
      <member refid="struct_f_meta_json_wrapper_1afe450876eb99f7ccbf3e4b7b64453176" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Get</name></member>
      <member refid="struct_f_meta_json_wrapper_1aaf2c1bfdab6ca8a5cbdf24a966cab2d2" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Get</name></member>
      <member refid="struct_f_meta_json_wrapper_1a87738fb83105ff77f93c14ddcf59f558" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Get</name></member>
      <member refid="struct_f_meta_json_wrapper_1a0732e95520034ad05679d054551a1056" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Get</name></member>
      <member refid="struct_f_meta_json_wrapper_1a7fbe471f7f05f3a272ab5bf5c8880ac7" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Get</name></member>
      <member refid="struct_f_meta_json_wrapper_1a686e82e2ebcc0f9dc035e75b72a11292" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>get</name></member>
      <member refid="struct_f_meta_json_wrapper_1ad0b458f2dc635c7a14cf4b592f58f1d6" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>GetArrayVal</name></member>
      <member refid="struct_f_meta_json_wrapper_1adebf5620893813235b01a1865cbc2830" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>GetFieldVal</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae5c8596aca031237a95310fe1c554540" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>GetObject</name></member>
      <member refid="struct_f_meta_json_wrapper_1a11430035181a812dbcc8120b59384bcc" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsArray</name></member>
      <member refid="struct_f_meta_json_wrapper_1aa2b9ceb6d1087171bd3636a4e198aa30" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsDiscarded</name></member>
      <member refid="struct_f_meta_json_wrapper_1a6d3a2d4282ab7623085f9c25fa928942" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsNull</name></member>
      <member refid="struct_f_meta_json_wrapper_1a95846e4e50bd0fb62569369d1b3446f4" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsNumberFloat</name></member>
      <member refid="struct_f_meta_json_wrapper_1a995d722597819684a230351b326c6c38" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsObject</name></member>
      <member refid="struct_f_meta_json_wrapper_1a789f64d22f49ade03e2cd9fd64dc8060" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>IsString</name></member>
      <member refid="struct_f_meta_json_wrapper_1ab071709f9311bbb174619b40e2478e02" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Items</name></member>
      <member refid="struct_f_meta_json_wrapper_1a8b37092460cd25f4d62626c6efaa4303" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>JsonValue</name></member>
      <member refid="struct_f_meta_json_wrapper_1af5458c41960fc5b4b8cabf8d3c77f344" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>LowParse</name></member>
      <member refid="struct_f_meta_json_wrapper_1a29b0fec40325ba25c46b6748f629c8b9" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>LowValue</name></member>
      <member refid="struct_f_meta_json_wrapper_1af189dff81eb9ca9ab1c6c35cd611d359" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>NativeArrToJsonArr</name></member>
      <member refid="struct_f_meta_json_wrapper_1ac514b16cb0913ad551f213131d727386" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Null</name></member>
      <member refid="struct_f_meta_json_wrapper_1ade32e1a9a3050e6b61bf49631b94ff7e" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Object</name></member>
      <member refid="struct_f_meta_json_wrapper_1a32a09466da3aa9805236100f83b7eef8" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator bool</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae2c19fea38877214501f74494de605b5" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator double</name></member>
      <member refid="struct_f_meta_json_wrapper_1adcf3f957a0f2db362b0d26b5f48bd849" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator FString</name></member>
      <member refid="struct_f_meta_json_wrapper_1a554f327dda7b0a2f5d1d8da200ac9df1" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator FTJsonPtr</name></member>
      <member refid="struct_f_meta_json_wrapper_1aa66e2065bd6d187fed74b0f91b06b836" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator int32</name></member>
      <member refid="struct_f_meta_json_wrapper_1a7cc5d5baf04d1432065932ef995a04c5" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator int64</name></member>
      <member refid="struct_f_meta_json_wrapper_1a95a14b602071fab7218296051415d68c" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae54bae5b646c5a70f48293248065f9c9" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1aaa9ce3fcfb3d00232381a48ab6f1bdc7" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1a04fc2b65761fc1f54149657d43d1fb8a" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1a0da1bb38df5ea3ec95b536df93c18db6" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae0a7bc78d2279d88d490f008ec38cd68" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1afdbee8c72ebbe7edc3b982702925e14e" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1a8f8534e929c7353897e5eb8dbd2a69b9" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator=</name></member>
      <member refid="struct_f_meta_json_wrapper_1a1a016445ee1c06bc29a152e5092fc240" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator[]</name></member>
      <member refid="struct_f_meta_json_wrapper_1a53b7dbce4fec5ca3adcec0ae6d68c31c" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator[]</name></member>
      <member refid="struct_f_meta_json_wrapper_1a08570f836c9deb990488fad1ebc5db4f" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator[]</name></member>
      <member refid="struct_f_meta_json_wrapper_1a095a479790842d6afbb7167c133f41b0" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator[]</name></member>
      <member refid="struct_f_meta_json_wrapper_1a1a2fedfd625cb6e510910a8b365bb402" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>operator[]</name></member>
      <member refid="struct_f_meta_json_wrapper_1aa880e3520aba7ea71824c39e0d409bc0" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Parse</name></member>
      <member refid="struct_f_meta_json_wrapper_1a367bfa7990482d41300ecd0e41562c7b" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>PCtx</name></member>
      <member refid="struct_f_meta_json_wrapper_1af6b69d802ba7325d763f03f81246b047" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Size</name></member>
      <member refid="struct_f_meta_json_wrapper_1a4c8694678e073c09f0327d7d700bbd53" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Value</name></member>
      <member refid="struct_f_meta_json_wrapper_1a9ac54f0f4763cf0041267eccac296bc7" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Value</name></member>
      <member refid="struct_f_meta_json_wrapper_1ae9ff5acb111f32d912813cf5c5abeeec" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Value</name></member>
      <member refid="struct_f_meta_json_wrapper_1a0a805d17f9a18649a6323b4b1d440b92" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>Value</name></member>
      <member refid="struct_f_meta_json_wrapper_1aa1d0522f1beaebe50f2b3b27aa160417" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>value</name></member>
      <member refid="struct_f_meta_json_wrapper_1a309a1c3c9d9dbb08bf7b5269bda38702" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>value</name></member>
      <member refid="struct_f_meta_json_wrapper_1a526f04c0f16a8efd75eb96b18313114b" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>value</name></member>
      <member refid="struct_f_meta_json_wrapper_1aceebc329e8337daf85ffd80e9f6a0cae" prot="public" virt="non-virtual"><scope>FMetaJsonWrapper</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
