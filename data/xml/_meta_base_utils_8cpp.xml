<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_meta_base_utils_8cpp" kind="file" language="C++">
    <compoundname>MetaBaseUtils.cpp</compoundname>
    <includes refid="_meta_base_utils_8h" local="yes">MetaBaseUtils.h</includes>
    <includes refid="_meta_unreal_utils_8h" local="yes">MetaUnrealUtils.h</includes>
    <includes refid="_test_meta_json_wrapper_8h" local="yes">Tests/TestMetaJsonWrapper.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/MetaBaseUtils.cpp</label>
        <link refid="_meta_base_utils_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MetaBaseUtils.h</label>
        <link refid="_meta_base_utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../MetaJsonWrapper.h</label>
        <link refid="_meta_json_wrapper_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>MetaJsonWrapper/MetaJsonWrapperContext.h</label>
        <link refid="_meta_json_wrapper_context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>MetaStrUtils.h</label>
        <link refid="_meta_str_utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>../MetaTrivialTestsUtils.h</label>
        <link refid="_meta_trivial_tests_utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>MetaUnrealUtils.h</label>
        <link refid="_meta_unreal_utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>MetaUtilsShare.h</label>
        <link refid="_meta_utils_share_8h"/>
      </node>
      <node id="10">
        <label>Tests/TestMetaJsonWrapper.h</label>
        <link refid="_test_meta_json_wrapper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>MetaLogging.h</label>
        <link refid="_meta_logging_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Containers/StringConv.h</label>
      </node>
      <node id="3">
        <label>CoreMinimal.h</label>
      </node>
      <node id="14">
        <label>Dom/JsonObject.h</label>
      </node>
      <node id="15">
        <label>Dom/JsonValue.h</label>
      </node>
      <node id="6">
        <label>Kismet/GameplayStatics.h</label>
      </node>
      <node id="21">
        <label>Kismet/KismetStringLibrary.h</label>
      </node>
      <node id="7">
        <label>LevelInstance/LevelInstanceActor.h</label>
      </node>
      <node id="25">
        <label>MetaStrUtils.generated.h</label>
      </node>
      <node id="28">
        <label>MetaTrivialTestsUtils.generated.h</label>
      </node>
      <node id="9">
        <label>MetaUnrealUtils.generated.h</label>
      </node>
      <node id="8">
        <label>Misc/Paths.h</label>
      </node>
      <node id="4">
        <label>Modules/ModuleManager.h</label>
      </node>
      <node id="17">
        <label>Serialization/JsonReader.h</label>
      </node>
      <node id="16">
        <label>Serialization/JsonWriter.h</label>
      </node>
      <node id="29">
        <label>TestMetaJsonWrapper.generated.h</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="12">
        <label>initializer_list</label>
      </node>
      <node id="23">
        <label>unicode/locid.h</label>
      </node>
      <node id="22">
        <label>unicode/unistr.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_meta_base_utils_8cpp_1a0de3ae51f3a629a8e5d113f1b9390da7" prot="public" static="no">
        <name>LOCTEXT_NAMESPACE</name>
        <initializer>&quot;FMetaBaseUtilsModule&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/MetaBaseUtils.cpp" line="8" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/MetaBaseUtils.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_base_utils_8h" kindref="compound">MetaBaseUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_unreal_utils_8h" kindref="compound">MetaUnrealUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_meta_json_wrapper_8h" kindref="compound">Tests/TestMetaJsonWrapper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCTEXT_NAMESPACE<sp/>&quot;FMetaBaseUtilsModule&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_meta_base_utils_module_1a15a373437f354191dd9bedb8ed673ce4" kindref="member">FMetaBaseUtilsModule::StartupModule</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>will<sp/>execute<sp/>after<sp/>your<sp/>module<sp/>is<sp/>loaded<sp/>into<sp/>memory;<sp/>the<sp/>exact<sp/>timing<sp/>is<sp/>specified<sp/>in<sp/>the<sp/>.uplugin<sp/>file<sp/>per-module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_meta_base_utils_module_1aaa1b7e555a7cfdb03277c1059578147e" kindref="member">bConfigTestOnLoad</ref>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_test_meta_json_wrapper_1af49692f1baf2191119637520f2e10f99" kindref="member">UTestMetaJsonWrapper::RunAll</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*const<sp/>FString<sp/>TestDir<sp/>=<sp/>UMetaUnrealUtils::UnrealAnyContentPathToRealPath(</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;/ArchitecturalScenePlugin/Tests/Buildings&quot;);</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(FPaths::DirectoryExists(TestDir))</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>META_LOG(LogMetaBaseUtils,<sp/>Warning,<sp/>TEXT(&quot;TEST<sp/>ArchitecturalScenePlugin<sp/>Content<sp/>test<sp/>dir:<sp/>%s&quot;),<sp/>*TestDir);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>META_LOG(LogMetaBaseUtils,<sp/>Warning,<sp/>TEXT(&quot;TEST<sp/>ArchitecturalScenePlugin<sp/>BAD<sp/>Content<sp/>test<sp/>dir:<sp/>%s&quot;),<sp/>*TestDir);</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_meta_base_utils_module_1a6f5662af27f777dad0316890df42feb7" kindref="member">FMetaBaseUtilsModule::ShutdownModule</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>may<sp/>be<sp/>called<sp/>during<sp/>shutdown<sp/>to<sp/>clean<sp/>up<sp/>your<sp/>module.<sp/><sp/>For<sp/>modules<sp/>that<sp/>support<sp/>dynamic<sp/>reloading,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>call<sp/>this<sp/>function<sp/>before<sp/>unloading<sp/>the<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LOCTEXT_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="_meta_localization_8cpp_1aca0aecd1b168e487d6a8d015cb651cd3" kindref="member">IMPLEMENT_MODULE</ref>(<ref refid="class_f_meta_base_utils_module" kindref="compound">FMetaBaseUtilsModule</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">MetaBaseUtils</ref>)</highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/MetaBaseUtils.cpp"/>
  </compounddef>
</doxygen>
