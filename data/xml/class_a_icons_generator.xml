<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_icons_generator" kind="class" language="C++" prot="public">
    <compoundname>AIconsGenerator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AActor</basecompoundref>
    <includes refid="_icons_generator_8h" local="no">IconsGenerator.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_icons_generator_1aa6391e2d92b6abcc5649ea89f2f0079d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FMakeWidgetDelegate</ref></type>
        <definition>FMakeWidgetDelegate AIconsGenerator::OnMakeWidget</definition>
        <argsstring></argsstring>
        <name>OnMakeWidget</name>
        <qualifiedname>AIconsGenerator::OnMakeWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="30" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a1abcd9fdcfc5612134e667a2a8a0351b" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FDataComplete</ref></type>
        <definition>FDataComplete AIconsGenerator::DataComplete</definition>
        <argsstring></argsstring>
        <name>DataComplete</name>
        <qualifiedname>AIconsGenerator::DataComplete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="33" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1ac1b6fad3bf3001a72174ec279bdda7c4" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> &gt;</type>
        <definition>TSubclassOf&lt;ADecayPin&gt; AIconsGenerator::DecayPinClass</definition>
        <argsstring></argsstring>
        <name>DecayPinClass</name>
        <qualifiedname>AIconsGenerator::DecayPinClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="36" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1ab4fa0230cf5fc37483548e33140c70f5" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ACesiumGeoreference</ref> *</type>
        <definition>ACesiumGeoreference* AIconsGenerator::CesiumGeoreference</definition>
        <argsstring></argsstring>
        <name>CesiumGeoreference</name>
        <qualifiedname>AIconsGenerator::CesiumGeoreference</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="38" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a15dbd5890114367a232ef1d9ba41179c" prot="public" static="no" mutable="no">
        <type><ref refid="class_a_icons_manager" kindref="compound">AIconsManager</ref> *</type>
        <definition>AIconsManager* AIconsGenerator::IconsManager</definition>
        <argsstring></argsstring>
        <name>IconsManager</name>
        <qualifiedname>AIconsGenerator::IconsManager</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="40" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1abb5bed5bafae16a829ae5e9a24d8b86a" prot="public" static="no" mutable="no">
        <type><ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref> *</type>
        <definition>AMetaPlayerController* AIconsGenerator::MetaPlayerController</definition>
        <argsstring></argsstring>
        <name>MetaPlayerController</name>
        <qualifiedname>AIconsGenerator::MetaPlayerController</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="42" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a9dad352d0ec2301be53ad7d17d429d04" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TArray&lt;FString&gt; AIconsGenerator::AllowedTrasnportProperty</definition>
        <argsstring></argsstring>
        <name>AllowedTrasnportProperty</name>
        <qualifiedname>AIconsGenerator::AllowedTrasnportProperty</qualifiedname>
        <briefdescription>
<para>Filter for allowed property in <ulink url="https://static.metapolis.su/road/transport_point.geojson">https://static.metapolis.su/road/transport_point.geojson</ulink>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="46" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a0c35a6a4e499adbd95b8b146335336fd" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TArray&lt;FString&gt; AIconsGenerator::AllowedPointsProperty</definition>
        <argsstring></argsstring>
        <name>AllowedPointsProperty</name>
        <qualifiedname>AIconsGenerator::AllowedPointsProperty</qualifiedname>
        <briefdescription>
<para>Filter for enters,BKL,MCK,MCD,MMTS in <ulink url="https://static.metapolis.su/road/points.geojson">https://static.metapolis.su/road/points.geojson</ulink>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="50" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a3fc40959886605bb60635f8752232261" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString AIconsGenerator::AllowedTPProperty</definition>
        <argsstring></argsstring>
        <name>AllowedTPProperty</name>
        <qualifiedname>AIconsGenerator::AllowedTPProperty</qualifiedname>
        <briefdescription>
<para>filter for MCD category in <ulink url="https://static.metapolis.su/road/transport_point.geojson">https://static.metapolis.su/road/transport_point.geojson</ulink> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="54" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a81e39c8a19f317c15dbbf316d2bc7b13" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString AIconsGenerator::AllowedPProperty</definition>
        <argsstring></argsstring>
        <name>AllowedPProperty</name>
        <qualifiedname>AIconsGenerator::AllowedPProperty</qualifiedname>
        <briefdescription>
<para>filter for MCD enters in <ulink url="https://static.metapolis.su/road/points.geojson">https://static.metapolis.su/road/points.geojson</ulink> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="58" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1aa5b1351177f4a953239a53ae12b35599" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_pin_widget" kindref="compound">UPinWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt;UPinWidget&gt; AIconsGenerator::WidgetClass</definition>
        <argsstring></argsstring>
        <name>WidgetClass</name>
        <qualifiedname>AIconsGenerator::WidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="61" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a836866bd32679576353c4716606e34c6" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSoftObjectPtr</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> &gt;, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &gt;</type>
        <definition>TMap&lt;TSoftObjectPtr&lt;ADecayPin&gt;, int32&gt; AIconsGenerator::DrawPriorityMap</definition>
        <argsstring></argsstring>
        <name>DrawPriorityMap</name>
        <qualifiedname>AIconsGenerator::DrawPriorityMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="64" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a0004b8135c7442170a4c28345cde6479" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 AIconsGenerator::MetroDrawPriority</definition>
        <argsstring></argsstring>
        <name>MetroDrawPriority</name>
        <qualifiedname>AIconsGenerator::MetroDrawPriority</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="67" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a68a14b3f035a00da14ffdfe49988197d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> * &gt;</type>
        <definition>TArray&lt;ADecayPin*&gt; AIconsGenerator::CreatedPins</definition>
        <argsstring></argsstring>
        <name>CreatedPins</name>
        <qualifiedname>AIconsGenerator::CreatedPins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="70" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1afbbbe7e98625a97e68e932184825851c" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &gt;</type>
        <definition>TArray&lt;FCommonIcon&gt; AIconsGenerator::IconsDataQueue</definition>
        <argsstring></argsstring>
        <name>IconsDataQueue</name>
        <qualifiedname>AIconsGenerator::IconsDataQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="73" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1af23d1b1cd0540fa9aa17cda65590fc8e" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &gt;</type>
        <definition>TArray&lt;FCommonIcon&gt; AIconsGenerator::MetroIconsDataQueue</definition>
        <argsstring></argsstring>
        <name>MetroIconsDataQueue</name>
        <qualifiedname>AIconsGenerator::MetroIconsDataQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="76" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1afc219ac39f2d3c97792e1e784c240037" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MaxCameraZForPriority1To4</definition>
        <argsstring></argsstring>
        <name>MaxCameraZForPriority1To4</name>
        <qualifiedname>AIconsGenerator::MaxCameraZForPriority1To4</qualifiedname>
        <initializer>= 2500000.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="79" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1afdde2cc9be46ef1745cdb71803dc7c8d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MaxCameraZForPriority5To8</definition>
        <argsstring></argsstring>
        <name>MaxCameraZForPriority5To8</name>
        <qualifiedname>AIconsGenerator::MaxCameraZForPriority5To8</qualifiedname>
        <initializer>= 120000.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="82" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1ab8d51854a981ad0c33e6de6afb6c18de" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MinRadiusPitchView</definition>
        <argsstring></argsstring>
        <name>MinRadiusPitchView</name>
        <qualifiedname>AIconsGenerator::MinRadiusPitchView</qualifiedname>
        <initializer>= 70000.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="85" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a4df0d784f185944eb7a09329a491f7be" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MaxRadiusPitchView</definition>
        <argsstring></argsstring>
        <name>MaxRadiusPitchView</name>
        <qualifiedname>AIconsGenerator::MaxRadiusPitchView</qualifiedname>
        <initializer>= 20000.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="88" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a81e1b3829e8cafdbbfd410392e5d7cca" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MinAnglePitchView</definition>
        <argsstring></argsstring>
        <name>MinAnglePitchView</name>
        <qualifiedname>AIconsGenerator::MinAnglePitchView</qualifiedname>
        <initializer>= 100.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="91" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a2d24e9e4f56e6a5604bde310f45fa8fd" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsGenerator::MaxAnglePitchView</definition>
        <argsstring></argsstring>
        <name>MaxAnglePitchView</name>
        <qualifiedname>AIconsGenerator::MaxAnglePitchView</qualifiedname>
        <initializer>= 50.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="94" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_icons_generator_1a476eb12ab791feee5b546e4295f5c1f8" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>const FString AIconsGenerator::DefaultMetroIcon</definition>
        <argsstring></argsstring>
        <name>DefaultMetroIcon</name>
        <qualifiedname>AIconsGenerator::DefaultMetroIcon</qualifiedname>
        <initializer>= &quot;i_metro_11&quot;</initializer>
        <briefdescription>
<para>&lt;helpers&gt; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="258" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1ac5ef8c60f80740055baf0e92294a391a" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>const float AIconsGenerator::FixedZ</definition>
        <argsstring></argsstring>
        <name>FixedZ</name>
        <qualifiedname>AIconsGenerator::FixedZ</qualifiedname>
        <initializer>= 170.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="259" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a73e1ef6b027db4b1d7e5d0721ade2d90" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>const FString AIconsGenerator::DefaultStringValue</definition>
        <argsstring></argsstring>
        <name>DefaultStringValue</name>
        <qualifiedname>AIconsGenerator::DefaultStringValue</qualifiedname>
        <initializer>= &quot;null&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="260" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a0cf8709f47010523a496c81cd15e8db8" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FName</ref></type>
        <definition>const FName AIconsGenerator::DefaultNameValue</definition>
        <argsstring></argsstring>
        <name>DefaultNameValue</name>
        <qualifiedname>AIconsGenerator::DefaultNameValue</qualifiedname>
        <initializer>= TEXT(&quot;null&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="261" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1aeb8e04bbc1206b6137e7e21b306eeb8d" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>const FString AIconsGenerator::MetroCategoryToken</definition>
        <argsstring></argsstring>
        <name>MetroCategoryToken</name>
        <qualifiedname>AIconsGenerator::MetroCategoryToken</qualifiedname>
        <initializer>= TEXT(&quot;Метро&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="262" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_generator_1a353c792ccc88e6595e75c85bdd095f63" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>const int32 AIconsGenerator::MetroIdAdditionalValue</definition>
        <argsstring></argsstring>
        <name>MetroIdAdditionalValue</name>
        <qualifiedname>AIconsGenerator::MetroIdAdditionalValue</qualifiedname>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="263" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="263" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_icons_generator_1a34cafbbaabaea29fa218bfd278cb816e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AIconsGenerator::AIconsGenerator</definition>
        <argsstring>()</argsstring>
        <name>AIconsGenerator</name>
        <qualifiedname>AIconsGenerator::AIconsGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="27" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="15" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1accfd14d9905183d62e4d9f09f1579494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::GetPointsData</definition>
        <argsstring>(const FString &amp;PointJsonSource)</argsstring>
        <name>GetPointsData</name>
        <qualifiedname>AIconsGenerator::GetPointsData</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PointJsonSource</declname>
        </param>
        <briefdescription>
<para>Получает данные о точках из источника JSON и обрабатывает их. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод разбирает предоставленный источник JSON и получает из него данные о точках. Затем он обрабатывает данные и выполняет определенные действия на основе полученных значений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PointJsonSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка источника JSON, содержащая данные о точках.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Ожидается, что формат источника JSON будет совместим с внутренней реализацией метода.</para>
</simplesect>
<simplesect kind="note"><para>Этот метод вызывается из класса <ref refid="class_a_icons_generator" kindref="compound">AIconsGenerator</ref> в методе ProcessGeneratePoints.</para>
</simplesect>
<simplesect kind="note"><para>У этого метода нет возвращаемого значения. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="111" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="38" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a99733acd3482a483384c0474c47b063e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::GetTransportPointsData</definition>
        <argsstring>(const FString &amp;TransportPointsJsonSource, const FString &amp;MetroStationsJsonSource)</argsstring>
        <name>GetTransportPointsData</name>
        <qualifiedname>AIconsGenerator::GetTransportPointsData</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>TransportPointsJsonSource</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>MetroStationsJsonSource</declname>
        </param>
        <briefdescription>
<para>Получает данные из источника JSON транспортных точек. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TransportPointsJsonSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Источник JSON, содержащий данные о транспортных точках. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MetroStationsJsonSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка источника JSON, содержащая данные о станциях метро. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="120" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="113" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1ad266e429edf43745916e7a3da294e87c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::ProcessGeneratePoints</definition>
        <argsstring>(const FString &amp;PointJsonSource, const FString &amp;MetroStationsJsonSource, const FString &amp;TransportPointsJsonSource)</argsstring>
        <name>ProcessGeneratePoints</name>
        <qualifiedname>AIconsGenerator::ProcessGeneratePoints</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PointJsonSource</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>MetroStationsJsonSource</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>TransportPointsJsonSource</declname>
        </param>
        <briefdescription>
<para>Получает данные о точках из источника JSON и обрабатывает их. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод разбирает предоставленный источник JSON и получает из него данные о точках. Затем он обрабатывает данные и выполняет определенные действия на основе полученных значений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PointJsonSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка источника JSON, содержащая данные о точках. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MetroStationsJsonSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка источника JSON, содержащая данные о станциях метро. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TransportPointsJsonSource</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Ожидается, что формат источника JSON будет совместим с внутренней реализацией метода.</para>
</simplesect>
<simplesect kind="note"><para>Этот метод вызывается из класса <ref refid="class_a_icons_generator" kindref="compound">AIconsGenerator</ref> в методе ProcessGeneratePoints.</para>
</simplesect>
<simplesect kind="note"><para>У этого метода нет возвращаемого значения. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="139" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a66504d889ad821fb52760e6f2bd512ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::CheckMetroProperty</definition>
        <argsstring>(TArray&lt; FCommonIcon &gt; &amp;OutPointsData, TArray&lt; FCommonIcon &gt; &amp;TransportPointsData)</argsstring>
        <name>CheckMetroProperty</name>
        <qualifiedname>AIconsGenerator::CheckMetroProperty</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &gt; &amp;</type>
          <declname>OutPointsData</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &gt; &amp;</type>
          <declname>TransportPointsData</declname>
        </param>
        <briefdescription>
<para>Проверяет свойство метро заданных массивов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод проверяет свойство метро заданных массивов. Если массивы пусты, выводится сообщение об ошибке и метод возвращается. В противном случае вызывается метод FilterRelevantPinInfos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutPointsData</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref>, представляющий выходные данные о точках. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TransportPointsData</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref>, представляющий данные о транспортных точках.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Массивы не должны быть пустыми; если они пусты, метод будет записывать сообщение об ошибке и возвращаться.</para>
</simplesect>
<simplesect kind="note"><para>У этого метода нет возвращаемого значения. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="154" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="210" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1aeb5ea8fc81729be99afc3a1bd1b73b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::FilterRelevantPinInfos</definition>
        <argsstring>()</argsstring>
        <name>FilterRelevantPinInfos</name>
        <qualifiedname>AIconsGenerator::FilterRelevantPinInfos</qualifiedname>
        <briefdescription>
<para>Фильтрует соответствующую информацию о пине на основе определенных условий. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод фильтрует соответствующую информацию о пине из <computeroutput>IconsDataQueue</computeroutput> на основе определенных условий. Он перебирает каждую <computeroutput>TransportPoint</computeroutput> в <computeroutput>MetroIconsDataQueue</computeroutput> и проверяет, если <computeroutput>Point</computeroutput> соответствует условиям для соответствия. Если <computeroutput>Point</computeroutput> подходит, он добавляет его в <computeroutput>RelevantPinInfoArray</computeroutput>, обновляет карту <computeroutput>ProcessedPoints</computeroutput> и создает пин распада с помощью метода <computeroutput>SpawnMetroDecayPin</computeroutput>. Наконец, он подготавливает обычные иконки с использованием метода <computeroutput>PrepareRegularIcon</computeroutput>.</para>
<para><simplesect kind="note"><para>Этот метод подразумевает наличие следующих переменных-членов:<itemizedlist>
<listitem><para><computeroutput>MetroIconsDataQueue</computeroutput>: Очередь, содержащая объекты <computeroutput><ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref></computeroutput>, представляющие транспортные точки.</para>
</listitem><listitem><para><computeroutput>IconsDataQueue</computeroutput>: Очередь, содержащая объекты <computeroutput><ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref></computeroutput>, представляющие данные об иконках.</para>
</listitem><listitem><para><computeroutput>ProcessedPoints</computeroutput>: Карта, которая отслеживает обработанные точки.</para>
</listitem><listitem><para><computeroutput>AllowedTPProperty</computeroutput>: Свойство, представляющее разрешенные транспортные точки.</para>
</listitem><listitem><para><computeroutput>AllowedPProperty</computeroutput>: Свойство, представляющее разрешенные точки.</para>
</listitem><listitem><para><computeroutput>AllowedPointsProperty</computeroutput>: Набор разрешенных точек.</para>
</listitem><listitem><para><computeroutput>CreatedPins</computeroutput>: Массив, содержащий созданные пины распада.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>Этот метод подразумевает наличие следующих вспомогательных методов:<itemizedlist>
<listitem><para><computeroutput>SpawnMetroDecayPin</computeroutput>: Метод, который создает пин распада на основе данного <computeroutput>TransportPoint</computeroutput> и <computeroutput>RelevantPinInfoArray</computeroutput>.</para>
</listitem><listitem><para><computeroutput>PrepareRegularIcon</computeroutput>: Метод, который подготавливает обычные иконки. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="177" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="223" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1ac9c5d3765f6bf4e8dc93e07e7f2a4ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> *</type>
        <definition>ADecayPin * AIconsGenerator::SpawnMetroDecayPin</definition>
        <argsstring>(const FCommonIcon &amp;CommonIcon, const TArray&lt; FCommonIcon &gt; &amp;CommonIconArray)</argsstring>
        <name>SpawnMetroDecayPin</name>
        <qualifiedname>AIconsGenerator::SpawnMetroDecayPin</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &amp;</type>
          <declname>CommonIcon</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &gt; &amp;</type>
          <declname>CommonIconArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Создает пин Metro Decay с данным общим значком и массивом общих значков.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CommonIcon</parametername>
</parameternamelist>
<parameterdescription>
<para>Общий значок, используемый в качестве основы для созданного пина Metro Decay. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CommonIconArray</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив общих значков, используемый для дополнительных общих значков, связанных с созданным пином Metro Decay. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Созданный пин Metro Decay в случае успеха, иначе nullptr. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="187" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="258" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a105c5a5e84a884082fd520b89adbe3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>AIconsGenerator::PrepareRegularIcon</definition>
        <argsstring>()</argsstring>
        <name>PrepareRegularIcon</name>
        <qualifiedname>AIconsGenerator::PrepareRegularIcon</qualifiedname>
        <briefdescription>
<para>Метод подготовки обычной иконки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод подготавливает обычную иконку, перебирая IconsDataQueue и создавая пины распада на основе данных об иконке.</para>
<para><simplesect kind="note"><para>Этот метод пропускает иконки, которые содержат &quot;i_metro&quot; или являются &quot;null&quot;.</para>
</simplesect>
<simplesect kind="return"><para>void</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_a_icons_generator_1ac80c887deddd642fcaabe7ff7a6e6fb8" kindref="member">SpawnDecayPin</ref>, <ref refid="class_a_icons_generator_1a2ef19c7d39d798ceab46f03b0740bdfb" kindref="member">PinCollect</ref>, <ref refid="class_a_icons_generator_1afbbbe7e98625a97e68e932184825851c" kindref="member">IconsDataQueue</ref>, <ref refid="class_a_icons_generator_1a68a14b3f035a00da14ffdfe49988197d" kindref="member">CreatedPins</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="202" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="76" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1ac80c887deddd642fcaabe7ff7a6e6fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> *</type>
        <definition>ADecayPin * AIconsGenerator::SpawnDecayPin</definition>
        <argsstring>(const FCommonIcon &amp;CommonIcon)</argsstring>
        <name>SpawnDecayPin</name>
        <qualifiedname>AIconsGenerator::SpawnDecayPin</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref> &amp;</type>
          <declname>CommonIcon</declname>
        </param>
        <briefdescription>
<para>Создает пин распада на основе данного общего значка. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает пин распада, если данный общий значок не является значком метро или &quot;null&quot;. Он преобразует координаты долготы и широты общего значка в местоположение в Unreal Engine. Затем пин распада создается в этом месте с нулевым вращением. Если пин распада успешно создан, ему назначаются данный общий значок, контроллер игрока и геореференс.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CommonIcon</parametername>
</parameternamelist>
<parameterdescription>
<para>Общий значок, используемый для создания пина распада. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Указатель на созданный пин распада или nullptr, если общий значок является значком метро или &quot;null&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="216" column="19" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="93" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a2ef19c7d39d798ceab46f03b0740bdfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::PinCollect</definition>
        <argsstring>(TArray&lt; ADecayPin * &gt; &amp;Pins)</argsstring>
        <name>PinCollect</name>
        <qualifiedname>AIconsGenerator::PinCollect</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> * &gt; &amp;</type>
          <declname>Pins</declname>
        </param>
        <briefdescription>
<para>Собирает пины по определенным критериям и наполняет DrawPriorityMap. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод собирает пины из предоставленного массива на основе следующих критериев:<itemizedlist>
<listitem><para>Пин не должен быть null.</para>
</listitem><listitem><para>CommonIcon.DrawPriority пина должен быть больше 0.</para>
</listitem><listitem><para>CommonIcon.DrawPriority пина должен быть меньше или равен 8. Пины, которые соответствуют этим критериям, будут добавлены в DrawPriorityMap.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив указателей <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref>, из которого будут собраны пины. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="230" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="274" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a68c3099d93061b58b95f92c1636ddea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::SetMaxHeight</definition>
        <argsstring>()</argsstring>
        <name>SetMaxHeight</name>
        <qualifiedname>AIconsGenerator::SetMaxHeight</qualifiedname>
        <briefdescription>
<para>Устанавливает максимальную высоту для значков в IconsGenerator. </para>
        </briefdescription>
        <detaileddescription>
<para>Максимальная высота определяет максимальное расстояние, на котором видны значки. Устанавливая максимальную высоту, вы можете контролировать, насколько далеко значки могут быть видны в сцене.</para>
<para>Этот метод обновляет максимальную высоту для каждого значка в IconsGenerator на основе предоставленного приоритета. Максимальная высота извлекается из карты, где каждому приоритету соответствует специфическое значение максимальной высоты. Если для данного приоритета не найдено максимальной высоты, используется значение по умолчанию 0.</para>
<para><simplesect kind="note"><para>Метод также устанавливает минимальные и максимальные углы обзора по тангажу и минимальный и максимальный радиус обзора по тангажу для каждого значка, на основе значений, указанных в IconsGenerator.</para>
</simplesect>
<simplesect kind="see"><para>IconsGenerator::MinRadiusPitchView </para>
</simplesect>
<simplesect kind="see"><para>IconsGenerator::MaxRadiusPitchView </para>
</simplesect>
<simplesect kind="see"><para>IconsGenerator::MinAnglePitchView </para>
</simplesect>
<simplesect kind="see"><para>IconsGenerator::MaxAnglePitchView</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="254" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="286" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_icons_generator_1aed78fda632db8314603306eeaa736600" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>const FString AIconsGenerator::GetStringFieldWithDefault</definition>
        <argsstring>(const TSharedPtr&lt; FJsonObject &gt; &amp;JsonObject, const FString &amp;FieldName, const FString &amp;DefaultValue)</argsstring>
        <name>GetStringFieldWithDefault</name>
        <qualifiedname>AIconsGenerator::GetStringFieldWithDefault</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt; &amp;</type>
          <declname>JsonObject</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>FieldName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
<para>Извлекает значение строкового поля из JSON-объекта с значением по умолчанию, если поле не существует или не является строкой. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON-объект, из которого следует извлечь значение поля. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя поля для извлечения из JSON-объекта. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DefaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение по умолчанию, которое следует вернуть, если поле не существует или не является строкой. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение строкового поля из JSON-объекта, если оно существует и является строкой, в противном случае - значение по умолчанию. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="272" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="336" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a8f449c80bf071bfc7bd820363d761382" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>const int32 AIconsGenerator::GetIntegerFieldWithDefault</definition>
        <argsstring>(const TSharedPtr&lt; FJsonObject &gt; &amp;JsonObject, const FString &amp;FieldName, int32 DefaultValue)</argsstring>
        <name>GetIntegerFieldWithDefault</name>
        <qualifiedname>AIconsGenerator::GetIntegerFieldWithDefault</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSharedPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &gt; &amp;</type>
          <declname>JsonObject</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>FieldName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>DefaultValue</declname>
        </param>
        <briefdescription>
<para>Получает значение целочисленного поля из данного JSON-объекта с указанным именем поля или возвращает значение по умолчанию, если поле не найдено или не является допустимым целым числом. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON-объект для извлечения поля. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя поля для извлечения. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DefaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение по умолчанию для возврата, если поле не найдено или не является допустимым целым числом.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Целочисленное значение указанного поля, если оно найдено и является допустимым целым числом; в противном случае, возвращает значение по умолчанию. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="282" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="347" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1ade69616635fe21ede229de20c779bea0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_common_icon" kindref="compound">FCommonIcon</ref></type>
        <definition>const FCommonIcon AIconsGenerator::CreateCommonIcon</definition>
        <argsstring>(const int32 &amp;Id, const FString &amp;F_Name, const FString &amp;VidXar, const FString &amp;Type, const FString &amp;ReserveKey, int DrawPriority, const FString &amp;Icon, const FString &amp;CountyName, float Longitude, float Latitude, TSubclassOf&lt; class UPinWidget &gt; Widget)</argsstring>
        <name>CreateCommonIcon</name>
        <qualifiedname>AIconsGenerator::CreateCommonIcon</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref> &amp;</type>
          <declname>Id</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>F_Name</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>VidXar</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Type</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>ReserveKey</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int</ref></type>
          <declname>DrawPriority</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Icon</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>CountyName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Longitude</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Latitude</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref> <ref refid="class_u_pin_widget" kindref="compound">UPinWidget</ref> &gt;</type>
          <declname>Widget</declname>
        </param>
        <briefdescription>
<para>Создает общий значок для генератора значков Icon Generator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор для значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>F_Name</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VidXar</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение VidXar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ReserveKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение запасного ключа. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DrawPriority</parametername>
</parameternamelist>
<parameterdescription>
<para>Приоритет отрисовки значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Icon</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CountyName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя округа. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение долготы позиции значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Значение широты позиции значка. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Widget</parametername>
</parameternamelist>
<parameterdescription>
<para>Подкласс <ref refid="class_u_pin_widget" kindref="compound">UPinWidget</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Созданная структура общего значка. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="300" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="308" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_generator_1a166830a2cff3239c94e339256cacd3ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::ParseMetroStationsFromLocalJson</definition>
        <argsstring>(const FString &amp;PointsSource)</argsstring>
        <name>ParseMetroStationsFromLocalJson</name>
        <qualifiedname>AIconsGenerator::ParseMetroStationsFromLocalJson</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PointsSource</declname>
        </param>
        <briefdescription>
<para>Функция разбирает на параметры исходный файл с данными об иконках в формате geojson. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PointsSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Исходная строка с данными об иконках</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="320" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="160" bodyend="208"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_a_icons_generator_1a53683f824667c2851f9c9eaa5cc0e328" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsGenerator::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>AIconsGenerator::BeginPlay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="323" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsGenerator.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="1">
        <label>AIconsGenerator</label>
        <link refid="class_a_icons_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="14">
        <label>ABuildingCore</label>
        <link refid="class_a_building_core"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>SetupCesiumCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>ExistingCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>PositionsManager</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>ABuildingCoreBaseEx</label>
        <link refid="class_a_building_core_base_ex"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>ACesiumCartographicPolygon</label>
      </node>
      <node id="13">
        <label>ADemoViewMetaBuilding</label>
        <link refid="class_a_demo_view_meta_building"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>AIconsGenerator</label>
        <link refid="class_a_icons_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>AIconsManager</label>
        <link refid="class_a_icons_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>RequestCamera</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ChangeGamePlayMode</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>IconsGenerator</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ProceduralLineGenerator</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>AJrpsPlayerController</label>
        <link refid="class_a_jrps_player_controller"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>AMetaCesiumCartographicPolygon</label>
        <link refid="class_a_meta_cesium_cartographic_polygon"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>AMetaPlayerController</label>
        <link refid="class_a_meta_player_controller"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ControlMode</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>DemoViewMode</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>APlayerController</label>
      </node>
      <node id="6">
        <label>AProceduralLineGenerator</label>
        <link refid="class_a_procedural_line_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>FChangeGamePlayMode</label>
        <link refid="struct_f_change_game_play_mode"/>
      </node>
      <node id="10">
        <label>FControlMode</label>
        <link refid="struct_f_control_mode"/>
      </node>
      <node id="4">
        <label>FRequestCameras</label>
        <link refid="struct_f_request_cameras"/>
      </node>
      <node id="19">
        <label>FSetupCesiumCartographicPolygon</label>
        <link refid="struct_f_setup_cesium_cartographic_polygon"/>
      </node>
      <node id="18">
        <label>UActorComponent</label>
      </node>
      <node id="11">
        <label>UDemoViewWidget</label>
        <link refid="class_u_demo_view_widget"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>MetaDemoViewModeBuilding</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>UPositionsManager</label>
        <link refid="class_u_positions_manager"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>UUserWidget</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" line="21" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsGenerator.h" bodystart="22" bodyend="324"/>
    <listofallmembers>
      <member refid="class_a_icons_generator_1a34cafbbaabaea29fa218bfd278cb816e" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>AIconsGenerator</name></member>
      <member refid="class_a_icons_generator_1a0c35a6a4e499adbd95b8b146335336fd" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>AllowedPointsProperty</name></member>
      <member refid="class_a_icons_generator_1a81e39c8a19f317c15dbbf316d2bc7b13" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>AllowedPProperty</name></member>
      <member refid="class_a_icons_generator_1a3fc40959886605bb60635f8752232261" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>AllowedTPProperty</name></member>
      <member refid="class_a_icons_generator_1a9dad352d0ec2301be53ad7d17d429d04" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>AllowedTrasnportProperty</name></member>
      <member refid="class_a_icons_generator_1a53683f824667c2851f9c9eaa5cc0e328" prot="protected" virt="virtual"><scope>AIconsGenerator</scope><name>BeginPlay</name></member>
      <member refid="class_a_icons_generator_1ab4fa0230cf5fc37483548e33140c70f5" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>CesiumGeoreference</name></member>
      <member refid="class_a_icons_generator_1a66504d889ad821fb52760e6f2bd512ff" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>CheckMetroProperty</name></member>
      <member refid="class_a_icons_generator_1ade69616635fe21ede229de20c779bea0" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>CreateCommonIcon</name></member>
      <member refid="class_a_icons_generator_1a68a14b3f035a00da14ffdfe49988197d" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>CreatedPins</name></member>
      <member refid="class_a_icons_generator_1a1abcd9fdcfc5612134e667a2a8a0351b" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>DataComplete</name></member>
      <member refid="class_a_icons_generator_1ac1b6fad3bf3001a72174ec279bdda7c4" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>DecayPinClass</name></member>
      <member refid="class_a_icons_generator_1a476eb12ab791feee5b546e4295f5c1f8" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>DefaultMetroIcon</name></member>
      <member refid="class_a_icons_generator_1a0cf8709f47010523a496c81cd15e8db8" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>DefaultNameValue</name></member>
      <member refid="class_a_icons_generator_1a73e1ef6b027db4b1d7e5d0721ade2d90" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>DefaultStringValue</name></member>
      <member refid="class_a_icons_generator_1a836866bd32679576353c4716606e34c6" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>DrawPriorityMap</name></member>
      <member refid="class_a_icons_generator_1aeb5ea8fc81729be99afc3a1bd1b73b42" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>FilterRelevantPinInfos</name></member>
      <member refid="class_a_icons_generator_1ac5ef8c60f80740055baf0e92294a391a" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>FixedZ</name></member>
      <member refid="class_a_icons_generator_1a8f449c80bf071bfc7bd820363d761382" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>GetIntegerFieldWithDefault</name></member>
      <member refid="class_a_icons_generator_1accfd14d9905183d62e4d9f09f1579494" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>GetPointsData</name></member>
      <member refid="class_a_icons_generator_1aed78fda632db8314603306eeaa736600" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>GetStringFieldWithDefault</name></member>
      <member refid="class_a_icons_generator_1a99733acd3482a483384c0474c47b063e" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>GetTransportPointsData</name></member>
      <member refid="class_a_icons_generator_1afbbbe7e98625a97e68e932184825851c" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>IconsDataQueue</name></member>
      <member refid="class_a_icons_generator_1a15dbd5890114367a232ef1d9ba41179c" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>IconsManager</name></member>
      <member refid="class_a_icons_generator_1a2d24e9e4f56e6a5604bde310f45fa8fd" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MaxAnglePitchView</name></member>
      <member refid="class_a_icons_generator_1afc219ac39f2d3c97792e1e784c240037" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MaxCameraZForPriority1To4</name></member>
      <member refid="class_a_icons_generator_1afdde2cc9be46ef1745cdb71803dc7c8d" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MaxCameraZForPriority5To8</name></member>
      <member refid="class_a_icons_generator_1a4df0d784f185944eb7a09329a491f7be" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MaxRadiusPitchView</name></member>
      <member refid="class_a_icons_generator_1abb5bed5bafae16a829ae5e9a24d8b86a" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MetaPlayerController</name></member>
      <member refid="class_a_icons_generator_1aeb8e04bbc1206b6137e7e21b306eeb8d" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>MetroCategoryToken</name></member>
      <member refid="class_a_icons_generator_1a0004b8135c7442170a4c28345cde6479" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MetroDrawPriority</name></member>
      <member refid="class_a_icons_generator_1af23d1b1cd0540fa9aa17cda65590fc8e" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MetroIconsDataQueue</name></member>
      <member refid="class_a_icons_generator_1a353c792ccc88e6595e75c85bdd095f63" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>MetroIdAdditionalValue</name></member>
      <member refid="class_a_icons_generator_1a81e1b3829e8cafdbbfd410392e5d7cca" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MinAnglePitchView</name></member>
      <member refid="class_a_icons_generator_1ab8d51854a981ad0c33e6de6afb6c18de" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>MinRadiusPitchView</name></member>
      <member refid="class_a_icons_generator_1aa6391e2d92b6abcc5649ea89f2f0079d" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>OnMakeWidget</name></member>
      <member refid="class_a_icons_generator_1a166830a2cff3239c94e339256cacd3ad" prot="private" virt="non-virtual"><scope>AIconsGenerator</scope><name>ParseMetroStationsFromLocalJson</name></member>
      <member refid="class_a_icons_generator_1a2ef19c7d39d798ceab46f03b0740bdfb" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>PinCollect</name></member>
      <member refid="class_a_icons_generator_1a105c5a5e84a884082fd520b89adbe3bc" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>PrepareRegularIcon</name></member>
      <member refid="class_a_icons_generator_1ad266e429edf43745916e7a3da294e87c" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>ProcessGeneratePoints</name></member>
      <member refid="class_a_icons_generator_1a68c3099d93061b58b95f92c1636ddea7" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>SetMaxHeight</name></member>
      <member refid="class_a_icons_generator_1ac80c887deddd642fcaabe7ff7a6e6fb8" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>SpawnDecayPin</name></member>
      <member refid="class_a_icons_generator_1ac9c5d3765f6bf4e8dc93e07e7f2a4ea0" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>SpawnMetroDecayPin</name></member>
      <member refid="class_a_icons_generator_1aa5b1351177f4a953239a53ae12b35599" prot="public" virt="non-virtual"><scope>AIconsGenerator</scope><name>WidgetClass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
