<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_f_json_rpc_response" kind="struct" language="C++" prot="public">
    <compoundname>FJsonRpcResponse</compoundname>
    <basecompoundref refid="struct_f_json_rpc_object" prot="public" virt="non-virtual">FJsonRpcObject</basecompoundref>
    <includes refid="_json_rpc_response_8h" local="no">JsonRpcResponse.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_json_rpc_response_1a1c6b5970c2e5fce3b64baa3e6d0a9428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcResponse::FJsonRpcResponse</definition>
        <argsstring>()=default</argsstring>
        <name>FJsonRpcResponse</name>
        <qualifiedname>FJsonRpcResponse::FJsonRpcResponse</qualifiedname>
        <briefdescription>
<para>Конструктор по умолчанию для <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот конструктор инициализирует новый экземпляр класса <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref> значениями по умолчанию.</para>
<para><simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a7981c8521fba00e6d0ee04b47bad8b4f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcResponse::FJsonRpcResponse</definition>
        <argsstring>(const FJsonObject &amp;ResponseJsonObject)</argsstring>
        <name>FJsonRpcResponse</name>
        <qualifiedname>FJsonRpcResponse::FJsonRpcResponse</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &amp;</type>
          <declname>ResponseJsonObject</declname>
        </param>
        <briefdescription>
<para>Конструктор нового экземпляра <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref> из заданного FJsonObject. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот конструктор инициализирует новый экземпляр <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref>, вызывая конструктор его базового класса, <ref refid="struct_f_json_rpc_object" kindref="compound">FJsonRpcObject</ref>, с предоставленным ResponseJsonObject.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ResponseJsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>FJsonObject для создания <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="38" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="9" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a9e2ebb9279d0b6e536f840aeaca0e5c1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcResponse::FJsonRpcResponse</definition>
        <argsstring>(const FGuid &amp;Guid, const FJsonObject &amp;Result, const FJsonRpcError &amp;Error={})</argsstring>
        <name>FJsonRpcResponse</name>
        <qualifiedname>FJsonRpcResponse::FJsonRpcResponse</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &amp;</type>
          <declname>Guid</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &amp;</type>
          <declname>Result</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> &amp;</type>
          <declname>Error</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Конструктор для <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот конструктор создает новый экземпляр <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref> с заданными Guid, Result и Error объектами.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор объекта ответа JSON-RPC. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Result</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON-объект, содержащий данные результата. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Error</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект ошибки JSON-RPC. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="48" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="12" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a9f6d1bb874dd8cf273331e319e849f75" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcResponse::FJsonRpcResponse</definition>
        <argsstring>(const FGuid &amp;Guid, const FJsonRpcError &amp;Error)</argsstring>
        <name>FJsonRpcResponse</name>
        <qualifiedname>FJsonRpcResponse::FJsonRpcResponse</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &amp;</type>
          <declname>Guid</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> &amp;</type>
          <declname>Error</declname>
        </param>
        <briefdescription>
<para>Конструктор нового объекта <ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref> с заданным Guid и Error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guid</parametername>
</parameternamelist>
<parameterdescription>
<para>Guid для установки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Error</parametername>
</parameternamelist>
<parameterdescription>
<para>Информация об ошибке для установки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="55" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1ad0549c20008ccb2f03f5a110fe4ef8d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref></type>
        <definition>FJsonObject FJsonRpcResponse::GetResult</definition>
        <argsstring>() const</argsstring>
        <name>GetResult</name>
        <qualifiedname>FJsonRpcResponse::GetResult</qualifiedname>
        <briefdescription>
<para>Извлекает результат из ответа JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает результат ответа JSON-RPC в виде FJsonObject. Если ответ не содержит поля результата, возвращается пустой FJsonObject.</para>
<para><simplesect kind="return"><para>Результат ответа JSON-RPC в виде FJsonObject. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="67" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a0fd2fbdc485ff0a482239a7bee6f4374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcResponse::SetResult</definition>
        <argsstring>(const FJsonObject &amp;Result) const</argsstring>
        <name>SetResult</name>
        <qualifiedname>FJsonRpcResponse::SetResult</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &amp;</type>
          <declname>Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Устанавливает поле результата объекта ответа JSON-RPC. Этот метод устанавливает значение поля &quot;result&quot; в основном JsonObject в предоставленный объект результата.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Result</parametername>
</parameternamelist>
<parameterdescription>
<para>FJsonObject, представляющий результат.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="77" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1aa8af5eab01d0cdfb87c532831174c1f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcResponse::SetResult</definition>
        <argsstring>(const FString &amp;Message) const</argsstring>
        <name>SetResult</name>
        <qualifiedname>FJsonRpcResponse::SetResult</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
<para>Устанавливает поле result объекта JSON-RPC ответа. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод устанавливает поле &quot;result&quot; в соответствующем JsonObject в виде строки.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Message</parametername>
</parameternamelist>
<parameterdescription>
<para>Сообщение, которое будет установлено в качестве результата.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="88" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1ada8c59522c9702ec85637a5f2d72b1c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcResponse::UnsetResult</definition>
        <argsstring>() const</argsstring>
        <name>UnsetResult</name>
        <qualifiedname>FJsonRpcResponse::UnsetResult</qualifiedname>
        <briefdescription>
<para>Сбрасывает поле результата объекта ответа JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет поле &quot;result&quot; из объекта JSON, представляющего ответ JSON-RPC. Любое существующее значение, связанное с полем &quot;result&quot;, будет утеряно. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="96" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1addfbb8e6c283100443d4918b057522c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref></type>
        <definition>FJsonRpcError FJsonRpcResponse::GetError</definition>
        <argsstring>() const</argsstring>
        <name>GetError</name>
        <qualifiedname>FJsonRpcResponse::GetError</qualifiedname>
        <briefdescription>
<para>Извлекает объект ошибки из ответа JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод извлекает объект ошибки из ответа JSON-RPC. Если ответ JSON-RPC содержит поле &quot;error&quot;, оно извлекается и возвращается в виде объекта <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>. Если &quot;error&quot; не найдено, возвращается пустой объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>.</para>
<para><simplesect kind="return"><para>Объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>, представляющий ошибку, или пустой объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>, если ошибки не найдены.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="109" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="66" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a9967e231850553b70e4f33582c934073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcResponse::SetError</definition>
        <argsstring>(const FJsonRpcError &amp;Error) const</argsstring>
        <name>SetError</name>
        <qualifiedname>FJsonRpcResponse::SetError</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> &amp;</type>
          <declname>Error</declname>
        </param>
        <briefdescription>
<para>Устанавливает объект ошибки для ответа JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод устанавливает объект ошибки для ответа JSON-RPC с использованием предоставленного объекта <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>. Объект ошибки создается путем установки поля &quot;error&quot; в основном JsonObject.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Error</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>, содержащий информацию об ошибке.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="121" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_response_1a1cdcc1c6f89daf49c6958652383c7668" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcResponse::UnsetError</definition>
        <argsstring>() const</argsstring>
        <name>UnsetError</name>
        <qualifiedname>FJsonRpcResponse::UnsetError</qualifiedname>
        <briefdescription>
<para>Удаляет поле &quot;error&quot; из объекта ответа JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет поле &quot;error&quot; из основного JsonObject ответа JSON-RPC. После вызова этого метода любая информация об ошибке, связанная с ответом, будет очищена. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="129" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcResponse.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_f_json_rpc_response" kindref="compound">FJsonRpcResponse</ref> - это структура, представляющая ответ JSON-RPC. Она унаследована от <ref refid="struct_f_json_rpc_object" kindref="compound">FJsonRpcObject</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>FJsonObjectWrapper</label>
      </node>
      <node id="2">
        <label>FJsonRpcObject</label>
        <link refid="struct_f_json_rpc_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>FJsonRpcResponse</label>
        <link refid="struct_f_json_rpc_response"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>FJsonObjectWrapper</label>
      </node>
      <node id="2">
        <label>FJsonRpcObject</label>
        <link refid="struct_f_json_rpc_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>FJsonRpcResponse</label>
        <link refid="struct_f_json_rpc_response"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" line="17" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcResponse.h" bodystart="18" bodyend="132"/>
    <listofallmembers>
      <member refid="struct_f_json_rpc_object_1a4d13cd38d04157bea9a04401e9c3c877" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcObject</name></member>
      <member refid="struct_f_json_rpc_object_1a2c94aef92133a3c6b5473b06a2ce6b76" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcObject</name></member>
      <member refid="struct_f_json_rpc_object_1af89580a8f733622663b00d79168e5872" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcObject</name></member>
      <member refid="struct_f_json_rpc_response_1a1c6b5970c2e5fce3b64baa3e6d0a9428" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcResponse</name></member>
      <member refid="struct_f_json_rpc_response_1a7981c8521fba00e6d0ee04b47bad8b4f" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcResponse</name></member>
      <member refid="struct_f_json_rpc_response_1a9e2ebb9279d0b6e536f840aeaca0e5c1" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcResponse</name></member>
      <member refid="struct_f_json_rpc_response_1a9f6d1bb874dd8cf273331e319e849f75" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>FJsonRpcResponse</name></member>
      <member refid="struct_f_json_rpc_response_1addfbb8e6c283100443d4918b057522c7" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>GetError</name></member>
      <member refid="struct_f_json_rpc_object_1aeaf619297ff32702b4e4c18e00664dfe" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>GetGuid</name></member>
      <member refid="struct_f_json_rpc_response_1ad0549c20008ccb2f03f5a110fe4ef8d5" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>GetResult</name></member>
      <member refid="struct_f_json_rpc_object_1ad2a73595fab01bd309a298791eea6ace" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>ResetProtocolVersion</name></member>
      <member refid="struct_f_json_rpc_response_1a9967e231850553b70e4f33582c934073" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>SetError</name></member>
      <member refid="struct_f_json_rpc_object_1a219a16e5ee426af576bb56e1d2d8f621" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>SetGuid</name></member>
      <member refid="struct_f_json_rpc_response_1a0fd2fbdc485ff0a482239a7bee6f4374" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>SetResult</name></member>
      <member refid="struct_f_json_rpc_response_1aa8af5eab01d0cdfb87c532831174c1f7" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>SetResult</name></member>
      <member refid="struct_f_json_rpc_response_1a1cdcc1c6f89daf49c6958652383c7668" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>UnsetError</name></member>
      <member refid="struct_f_json_rpc_response_1ada8c59522c9702ec85637a5f2d72b1c5" prot="public" virt="non-virtual"><scope>FJsonRpcResponse</scope><name>UnsetResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
