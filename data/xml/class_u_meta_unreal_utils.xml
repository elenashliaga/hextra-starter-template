<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_meta_unreal_utils" kind="class" language="C++" prot="public">
    <compoundname>UMetaUnrealUtils</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UObject</basecompoundref>
    <derivedcompoundref refid="class_u_unreal_utils" prot="public" virt="non-virtual">UUnrealUtils</derivedcompoundref>
    <includes refid="_meta_unreal_utils_8h" local="no">MetaUnrealUtils.h</includes>
    <innerclass refid="struct_u_meta_unreal_utils_1_1_f_plugin_dirs" prot="public">UMetaUnrealUtils::FPluginDirs</innerclass>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_u_meta_unreal_utils_1afdb38e78e4b3242345e5da3f8d436c89" prot="public" static="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::SrcDirName</definition>
        <argsstring></argsstring>
        <name>SrcDirName</name>
        <qualifiedname>UMetaUnrealUtils::SrcDirName</qualifiedname>
        <initializer>= &quot;Source&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Принятое имя директорий с исходниками </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="16" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_meta_unreal_utils_1a5a0c00f0bc406813873acce5cb115037" prot="public" static="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::MainContentSpec</definition>
        <argsstring></argsstring>
        <name>MainContentSpec</name>
        <qualifiedname>UMetaUnrealUtils::MainContentSpec</qualifiedname>
        <initializer>= TEXT(&quot;Game&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Специальное имя для контента главного модуля </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="19" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_meta_unreal_utils_1ab526872286ffdd4a1b8021bab93e4617" prot="public" static="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::ContentDirName</definition>
        <argsstring></argsstring>
        <name>ContentDirName</name>
        <qualifiedname>UMetaUnrealUtils::ContentDirName</qualifiedname>
        <initializer>= TEXT(&quot;Content&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Принятое имя директорий для контента </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="22" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_meta_unreal_utils_1ae34e5a2dbaab0ab0c3e0c46dbad92ca1" prot="public" static="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::UEPluginExt</definition>
        <argsstring></argsstring>
        <name>UEPluginExt</name>
        <qualifiedname>UMetaUnrealUtils::UEPluginExt</qualifiedname>
        <initializer>= TEXT(&quot;.uplugin&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Приняторе расширение для файлов с описанием unreal-плагинов </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="25" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a744dd23f3ac9db34604fed5d740cfc99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>static void UMetaUnrealUtils::DestroyComponents</definition>
        <argsstring>(AActor *Actor)</argsstring>
        <name>DestroyComponents</name>
        <qualifiedname>UMetaUnrealUtils::DestroyComponents</qualifiedname>
        <param>
          <type>AActor *</type>
          <declname>Actor</declname>
        </param>
        <briefdescription>
<para>Уничтожает все компоненты указанного типа, прикрепленные к данному актеру. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Actor</parametername>
</parameternamelist>
<parameterdescription>
<para>Актер, компоненты которого нужно уничтожить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип компонентов для уничтожения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="34" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a4c497ba91888eb7b4860cd0896325630" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TAActor</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TAActor</ref> *</type>
        <definition>static TAActor * UMetaUnrealUtils::FindOrSpawnNew</definition>
        <argsstring>(TAActor *&amp;Instance, UWorld *World)</argsstring>
        <name>FindOrSpawnNew</name>
        <qualifiedname>UMetaUnrealUtils::FindOrSpawnNew</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TAActor</ref> *&amp;</type>
          <declname>Instance</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UWorld</ref> *</type>
          <declname>World</declname>
        </param>
        <briefdescription>
<para>Возвращает существующий экземпляр TAActor или создает новый, если такого не существует. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Ссылка на экземпляр TAActor, который нужно найти или создать. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>World</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект UWorld, в котором существует или будет создан актер.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Указатель на существующий или вновь созданный экземпляр TAActor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="54" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a764e9b0a027bc2dce15608b05c774bff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">class</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TAActor</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TAActor</ref> *</type>
        <definition>static TAActor * UMetaUnrealUtils::FindActor</definition>
        <argsstring>(const UObject *WorldContextObject)</argsstring>
        <name>FindActor</name>
        <qualifiedname>UMetaUnrealUtils::FindActor</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContextObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="70" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a4a18a8531da1c334b59a67a32132332f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsPlatformWindows</definition>
        <argsstring>()</argsstring>
        <name>IsPlatformWindows</name>
        <qualifiedname>UMetaUnrealUtils::IsPlatformWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Проверьте, является ли текущая платформа Windows.</para>
<para><simplesect kind="return"><para>Является ли текущая платформа Windows. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="82" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="8" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1aab37ab6b19e3c3abc5042c5e9598a947" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsEditor</definition>
        <argsstring>()</argsstring>
        <name>IsEditor</name>
        <qualifiedname>UMetaUnrealUtils::IsEditor</qualifiedname>
        <briefdescription>
<para>Проверяет, работает ли Unreal Engine в редакторе. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Возвращает true, если Unreal Engine запущен в редакторе, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="90" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a4ed89d6d7e57f8d872d22b533d496b71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsPlatformLinux</definition>
        <argsstring>()</argsstring>
        <name>IsPlatformLinux</name>
        <qualifiedname>UMetaUnrealUtils::IsPlatformLinux</qualifiedname>
        <briefdescription>
<para>Проверяет, является ли текущая платформа Linux. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Возвращает true, если текущая платформа - Linux, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="98" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1afb133984d12ab78eed7f331aa6ed08bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::CalculateSHA1Hash</definition>
        <argsstring>(const FString &amp;InputString)</argsstring>
        <name>CalculateSHA1Hash</name>
        <qualifiedname>UMetaUnrealUtils::CalculateSHA1Hash</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>InputString</declname>
        </param>
        <briefdescription>
<para>Вычисляет значение хэша SHA1 для данной входной строки. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InputString</parametername>
</parameternamelist>
<parameterdescription>
<para>Входная строка, для которой необходимо вычислить значение хэша SHA1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение хэша SHA1 входной строки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="108" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a1e077166118c30ae63750840cadb098b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::WalkAllPluginsDirs</definition>
        <argsstring>(const TFunction&lt; void(const FString &amp;PluginName, const FString &amp;PluginDir)&gt; &amp;DirProcessor)</argsstring>
        <name>WalkAllPluginsDirs</name>
        <qualifiedname>UMetaUnrealUtils::WalkAllPluginsDirs</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TFunction</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">PluginName</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">PluginDir</ref>)&gt; &amp;</type>
          <declname>DirProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Проходит по всем директориям плагинов в проекте и выполняет указанную функцию в каждой директории.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DirProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>Функция, которая будет выполнена в каждой директории плагина. Она принимает два параметра: PluginName и PluginDir. PluginName - это имя плагина, а PluginDir - путь к директории плагина.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если операция выполнена успешно, False в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="121" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a5ef05df914c8c3830c22b12ad500efdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="struct_u_meta_unreal_utils_1_1_f_plugin_dirs" kindref="compound">FPluginDirs</ref> &gt;</type>
        <definition>TMap&lt; FString, UMetaUnrealUtils::FPluginDirs &gt; UMetaUnrealUtils::GetAllPluginsContentDirs</definition>
        <argsstring>()</argsstring>
        <name>GetAllPluginsContentDirs</name>
        <qualifiedname>UMetaUnrealUtils::GetAllPluginsContentDirs</qualifiedname>
        <briefdescription>
<para>Извлекает директории содержимого для всех плагинов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод проходит по всем директориям плагинов и извлекает директории содержимого для каждого плагина. Он возвращает карту, где ключ - это имя плагина, а значение - соответствующая директория содержимого.</para>
<para><simplesect kind="return"><para>Карта, содержащая имена плагинов в качестве ключей и их директории содержимого в качестве значений. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="138" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="69" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a47cd36d22619d64ff362d18c5fba7b9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_u_meta_unreal_utils_1_1_f_plugin_dirs" kindref="compound">FPluginDirs</ref></type>
        <definition>UMetaUnrealUtils::FPluginDirs UMetaUnrealUtils::GetPluginDirs</definition>
        <argsstring>(const FString &amp;PluginName, const bool bUpdatePluginsDirs=false)</argsstring>
        <name>GetPluginDirs</name>
        <qualifiedname>UMetaUnrealUtils::GetPluginDirs</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PluginName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> bool</type>
          <declname>bUpdatePluginsDirs</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает структуру с базовым путём и путём к контенту плагина, если директории не существуют - будут пустые строки <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PluginName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя плагина </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bUpdatePluginsDirs</parametername>
</parameternamelist>
<parameterdescription>
<para>обновляет карту с плагинами, нужно если требуется поддержка реакции на подгрузку/выгрузку лпагинов </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Структура с базовым путём к плагину и путём к контенту плагина </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="146" column="28" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a9ff59889f101d412bb6be34963021315" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::GetModuleSrcDir</definition>
        <argsstring>(const FString &amp;PluginName, const FString &amp;ModuleName)</argsstring>
        <name>GetModuleSrcDir</name>
        <qualifiedname>UMetaUnrealUtils::GetModuleSrcDir</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PluginName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>ModuleName</declname>
        </param>
        <briefdescription>
<para>Извлекает исходную директорию для указанного модуля плагина. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PluginName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя плагина. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ModuleName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя модуля в плагине.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Полный путь к исходной директории для указанного модуля плагина. Возвращает пустую строку, если не удалось найти базовую директорию плагина или исходную директорию модуля. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="161" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="109" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a4078f5c33b7fc0352aa4e265768a5dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::GetPluginContentDir</definition>
        <argsstring>(const FString &amp;PluginName)</argsstring>
        <name>GetPluginContentDir</name>
        <qualifiedname>UMetaUnrealUtils::GetPluginContentDir</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>PluginName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Извлекает директорию содержимого указанного плагина.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PluginName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя плагина. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Абсолютный путь к директории содержимого плагина или пустую строку, если директория не существует. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="169" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="130" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a866f416d52413ed4d446a5874c32401d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::UnrealSpecContentToPath</definition>
        <argsstring>(const FString &amp;SpecContent)</argsstring>
        <name>UnrealSpecContentToPath</name>
        <qualifiedname>UMetaUnrealUtils::UnrealSpecContentToPath</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>SpecContent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Метод возвращает реальный путь к контенту основного модуля (если передано &quot;Game&quot;) или путь к контенту плагина, если передано любое другое имя <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SpecContent</parametername>
</parameternamelist>
<parameterdescription>
<para>Специальное имя &quot;Game&quot; для контента основного модуля или имя плагина </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Реальный путь к контенту </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="187" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1ac2e114f7928427f247fc4f8b5d00fe83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::UnrealAnyContentPathToRealPath</definition>
        <argsstring>(const FString &amp;UnrealPath)</argsstring>
        <name>UnrealAnyContentPathToRealPath</name>
        <qualifiedname>UMetaUnrealUtils::UnrealAnyContentPathToRealPath</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>UnrealPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Преобразует любой путь контента Unreal в реальный путь файловой системы.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>UnrealPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Путь содержимого Unreal для преобразования.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Реальный путь в файловой системе, соответствующий пути контента Unreal. Если преобразование не удалось, возвращается пустая строка. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="196" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="161" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1aa18a51d3523bc9a77cab6543e3fee66b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsCDO</definition>
        <argsstring>(const UObject *Object)</argsstring>
        <name>IsCDO</name>
        <qualifiedname>UMetaUnrealUtils::IsCDO</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>Object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Определяет, является ли данный объект объектом класса по умолчанию (CDO).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект для проверки.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Возвращает true, если объект является CDO, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="205" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a021e1869fa198fff0ec977c4a3e8a7c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt;</type>
        <definition>TArray&lt; FGuid &gt; UMetaUnrealUtils::StringsToGuids</definition>
        <argsstring>(const TArray&lt; FString &gt; &amp;GuidsStrings)</argsstring>
        <name>StringsToGuids</name>
        <qualifiedname>UMetaUnrealUtils::StringsToGuids</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;</type>
          <declname>GuidsStrings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Конвертирует массив строковых представлений GUID в массив фактических GUID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>GuidsStrings</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив строковых представлений GUID, которые нужно конвертировать. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив GUID, конвертированный из предоставленных строк. Если не удалось разобрать какой-либо GUID, возвращается пустой массив. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="213" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="195" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a730e7a56829500cefd2031e1dce7532b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaUnrealUtils::AddConsoleCommand</definition>
        <argsstring>(TArray&lt; IConsoleCommand * &gt; &amp;ConsoleCommands, const FString &amp;Command, const FString &amp;CommandDesc, void(*CommandMethod)(const TArray&lt; FString &gt; &amp;))</argsstring>
        <name>AddConsoleCommand</name>
        <qualifiedname>UMetaUnrealUtils::AddConsoleCommand</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">IConsoleCommand</ref> * &gt; &amp;</type>
          <declname>ConsoleCommands</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Command</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>CommandDesc</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref>(*)(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;)</type>
          <declname>CommandMethod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Добавить консольную команду к данному набору консольных команд.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ConsoleCommands</parametername>
</parameternamelist>
<parameterdescription>
<para>Набор консольных команд, в который нужно добавить новую команду. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Command</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя консольной команды. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CommandDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Описание консольной команды. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CommandMethod</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на функцию метода, который будет выполнен при вызове консольной команды. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="223" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="211" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1ad4d9088c32c30190abc9ec7fc803a49a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UWorld</ref> *</type>
        <definition>UWorld * UMetaUnrealUtils::GetCurrentWorld</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentWorld</name>
        <qualifiedname>UMetaUnrealUtils::GetCurrentWorld</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Получает текущий объект <computeroutput>UWorld</computeroutput>.</para>
<para>Этот метод возвращает текущий объект <computeroutput>UWorld</computeroutput>, который представляет текущий мир, в котором играется игра.</para>
<para><simplesect kind="return"><para>Указатель на текущий объект <computeroutput>UWorld</computeroutput>. Если текущий мир не может быть определен, возвращается <computeroutput>nullptr</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UWorld</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="237" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="224" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1ace44855f2ec1858c9a657270453c342d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsPIE</definition>
        <argsstring>()</argsstring>
        <name>IsPIE</name>
        <qualifiedname>UMetaUnrealUtils::IsPIE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает булево значение, указывающее, проходит ли текущая игра в режиме &quot;Play In Editor&quot; (PIE).</para>
<para><simplesect kind="return"><para>true, если игра проходит в режиме PIE, иначе false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="244" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="251" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a1b7519ae6cfacbe73ed58262838f7f06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UMetaUnrealUtils::IsValidNotDestroying</definition>
        <argsstring>(const UObject *Object)</argsstring>
        <name>IsValidNotDestroying</name>
        <qualifiedname>UMetaUnrealUtils::IsValidNotDestroying</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>Object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Проверить, является ли указанный объект действительным и не помечен ли он для уничтожения.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект для проверки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Истина, если объект действителен и не помечен для уничтожения, в противном случае ложь. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="252" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1aba4d935695a34f7b35741f504b3c3c8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaUnrealUtils::MarkDirtyInEditor</definition>
        <argsstring>(const UObject *Object)</argsstring>
        <name>MarkDirtyInEditor</name>
        <qualifiedname>UMetaUnrealUtils::MarkDirtyInEditor</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>Object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="254" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a320e3166c3dc0f4299b108921f4776be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaUnrealUtils::ToggleActivity</definition>
        <argsstring>(AActor *Actor, bool bVisible)</argsstring>
        <name>ToggleActivity</name>
        <qualifiedname>UMetaUnrealUtils::ToggleActivity</qualifiedname>
        <param>
          <type>AActor *</type>
          <declname>Actor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bVisible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="256" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="281" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a4e49b530c2baec7c3755c8cfa45dce23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AActor *</type>
        <definition>AActor * UMetaUnrealUtils::FindActorByName</definition>
        <argsstring>(const UObject *WorldContext, UClass *Class, const FString &amp;Name)</argsstring>
        <name>FindActorByName</name>
        <qualifiedname>UMetaUnrealUtils::FindActorByName</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UClass</ref> *</type>
          <declname>Class</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="258" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="288" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1af57e895aa9ebc66c72da53d03442ff42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UMetaUnrealUtils::ArrayPointsToString</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Points)</argsstring>
        <name>ArrayPointsToString</name>
        <qualifiedname>UMetaUnrealUtils::ArrayPointsToString</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="260" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="302" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a264793c90767dc099e78d8ce0eda8cad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UClass</ref> *</type>
        <definition>UClass * UMetaUnrealUtils::GetClassFromModule</definition>
        <argsstring>(const FString &amp;ModuleName, const FString &amp;ClassName)</argsstring>
        <name>GetClassFromModule</name>
        <qualifiedname>UMetaUnrealUtils::GetClassFromModule</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>ModuleName</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>ClassName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="262" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Private/MetaUnrealUtils.cpp" bodystart="317" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_u_meta_unreal_utils_1a1e1c4b68b89de46acb2014093db12148" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubsystemClass</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubsystemClass</ref> &gt;</type>
        <definition>static TObjectPtr&lt; TSubsystemClass &gt; UMetaUnrealUtils::GetSubsystemClass</definition>
        <argsstring>(const UWorld *World)</argsstring>
        <name>GetSubsystemClass</name>
        <qualifiedname>UMetaUnrealUtils::GetSubsystemClass</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UWorld</ref> *</type>
          <declname>World</declname>
        </param>
    <requiresclause><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">std::is_base_of_v</ref>&lt;<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">USubsystem</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubsystemClass</ref>&gt;    </requiresclause>
        <briefdescription>
<para>Возвращает объект подсистемы, указанного в шаблоне класса </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>World</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на объект мира. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TSubsystemClass объект подсистемы </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="272" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="272" bodyend="285"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>UMetaUnrealUtils</label>
        <link refid="class_u_meta_unreal_utils"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>UObject</label>
      </node>
      <node id="3">
        <label>UUnrealUtils</label>
        <link refid="class_u_unreal_utils"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>UMetaUnrealUtils</label>
        <link refid="class_u_meta_unreal_utils"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>UObject</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" line="10" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaBaseUtils/Source/MetaBaseUtils/Public/MetaUnrealUtils.h" bodystart="11" bodyend="286"/>
    <listofallmembers>
      <member refid="class_u_meta_unreal_utils_1a730e7a56829500cefd2031e1dce7532b" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>AddConsoleCommand</name></member>
      <member refid="class_u_meta_unreal_utils_1af57e895aa9ebc66c72da53d03442ff42" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>ArrayPointsToString</name></member>
      <member refid="class_u_meta_unreal_utils_1afb133984d12ab78eed7f331aa6ed08bd" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>CalculateSHA1Hash</name></member>
      <member refid="class_u_meta_unreal_utils_1ab526872286ffdd4a1b8021bab93e4617" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>ContentDirName</name></member>
      <member refid="class_u_meta_unreal_utils_1a744dd23f3ac9db34604fed5d740cfc99" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>DestroyComponents</name></member>
      <member refid="class_u_meta_unreal_utils_1a764e9b0a027bc2dce15608b05c774bff" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>FindActor</name></member>
      <member refid="class_u_meta_unreal_utils_1a4e49b530c2baec7c3755c8cfa45dce23" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>FindActorByName</name></member>
      <member refid="class_u_meta_unreal_utils_1a4c497ba91888eb7b4860cd0896325630" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>FindOrSpawnNew</name></member>
      <member refid="class_u_meta_unreal_utils_1a5ef05df914c8c3830c22b12ad500efdf" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetAllPluginsContentDirs</name></member>
      <member refid="class_u_meta_unreal_utils_1a264793c90767dc099e78d8ce0eda8cad" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetClassFromModule</name></member>
      <member refid="class_u_meta_unreal_utils_1ad4d9088c32c30190abc9ec7fc803a49a" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetCurrentWorld</name></member>
      <member refid="class_u_meta_unreal_utils_1a9ff59889f101d412bb6be34963021315" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetModuleSrcDir</name></member>
      <member refid="class_u_meta_unreal_utils_1a4078f5c33b7fc0352aa4e265768a5dee" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetPluginContentDir</name></member>
      <member refid="class_u_meta_unreal_utils_1a47cd36d22619d64ff362d18c5fba7b9b" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetPluginDirs</name></member>
      <member refid="class_u_meta_unreal_utils_1a1e1c4b68b89de46acb2014093db12148" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>GetSubsystemClass</name></member>
      <member refid="class_u_meta_unreal_utils_1aa18a51d3523bc9a77cab6543e3fee66b" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsCDO</name></member>
      <member refid="class_u_meta_unreal_utils_1aab37ab6b19e3c3abc5042c5e9598a947" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsEditor</name></member>
      <member refid="class_u_meta_unreal_utils_1ace44855f2ec1858c9a657270453c342d" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsPIE</name></member>
      <member refid="class_u_meta_unreal_utils_1a4ed89d6d7e57f8d872d22b533d496b71" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsPlatformLinux</name></member>
      <member refid="class_u_meta_unreal_utils_1a4a18a8531da1c334b59a67a32132332f" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsPlatformWindows</name></member>
      <member refid="class_u_meta_unreal_utils_1a1b7519ae6cfacbe73ed58262838f7f06" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>IsValidNotDestroying</name></member>
      <member refid="class_u_meta_unreal_utils_1a5a0c00f0bc406813873acce5cb115037" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>MainContentSpec</name></member>
      <member refid="class_u_meta_unreal_utils_1aba4d935695a34f7b35741f504b3c3c8b" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>MarkDirtyInEditor</name></member>
      <member refid="class_u_meta_unreal_utils_1afdb38e78e4b3242345e5da3f8d436c89" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>SrcDirName</name></member>
      <member refid="class_u_meta_unreal_utils_1a021e1869fa198fff0ec977c4a3e8a7c7" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>StringsToGuids</name></member>
      <member refid="class_u_meta_unreal_utils_1a320e3166c3dc0f4299b108921f4776be" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>ToggleActivity</name></member>
      <member refid="class_u_meta_unreal_utils_1ae34e5a2dbaab0ab0c3e0c46dbad92ca1" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>UEPluginExt</name></member>
      <member refid="class_u_meta_unreal_utils_1ac2e114f7928427f247fc4f8b5d00fe83" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>UnrealAnyContentPathToRealPath</name></member>
      <member refid="class_u_meta_unreal_utils_1a866f416d52413ed4d446a5874c32401d" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>UnrealSpecContentToPath</name></member>
      <member refid="class_u_meta_unreal_utils_1a1e077166118c30ae63750840cadb098b" prot="public" virt="non-virtual"><scope>UMetaUnrealUtils</scope><name>WalkAllPluginsDirs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
