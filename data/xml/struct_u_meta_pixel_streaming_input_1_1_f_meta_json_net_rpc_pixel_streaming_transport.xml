<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport" kind="struct" language="C++" prot="private" final="yes">
    <compoundname>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</compoundname>
    <basecompoundref refid="struct_i_json_net_rpc_transport" prot="public" virt="non-virtual">IJsonNetRpcTransport</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ab7fb0596d640ffaa4a35fb2c6ca8f198" prot="private" static="no" mutable="no">
        <type><ref refid="class_u_meta_pixel_streaming_input" kindref="compound">UMetaPixelStreamingInput</ref> &amp;</type>
        <definition>UMetaPixelStreamingInput&amp; UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::Component</definition>
        <argsstring></argsstring>
        <name>Component</name>
        <qualifiedname>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::Component</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="34" column="42" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ab67f5c6c6f12d121134c9c85c75c9d38" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::FMetaJsonNetRpcPixelStreamingTransport</definition>
        <argsstring>(UMetaPixelStreamingInput &amp;Component)</argsstring>
        <name>FMetaJsonNetRpcPixelStreamingTransport</name>
        <qualifiedname>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::FMetaJsonNetRpcPixelStreamingTransport</qualifiedname>
        <param>
          <type><ref refid="class_u_meta_pixel_streaming_input" kindref="compound">UMetaPixelStreamingInput</ref> &amp;</type>
          <declname>Component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="28" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1a080e9ba22cc5a984b25a2d5df113f9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::SendRpcObject</definition>
        <argsstring>(FJsonNetRpcObject Object) override</argsstring>
        <name>SendRpcObject</name>
        <qualifiedname>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::SendRpcObject</qualifiedname>
        <reimplements refid="struct_i_json_net_rpc_transport_1a373660932d063362f55b3a8ba8f5d8e0">SendRpcObject</reimplements>
        <param>
          <type>FJsonNetRpcObject</type>
          <declname>Object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Отправляет данный RPC-объект. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="30" column="30" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="25" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ade48c008995fbf7c8fe9cc9471c5f26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">APlayerState</ref> *</type>
        <definition>APlayerState * UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::GetTransportPlayerState</definition>
        <argsstring>() override</argsstring>
        <name>GetTransportPlayerState</name>
        <qualifiedname>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport::GetTransportPlayerState</qualifiedname>
        <reimplements refid="struct_i_json_net_rpc_transport_1a00f46b9abdf2f485b12a3b93ffd4860a">GetTransportPlayerState</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Возвращает соответствующего данному транспорту состояние игрока.</para>
<para><simplesect kind="note"><para>Данному транспорту может не быть сопоставлено состояние игрока. Соответственно, может быть возвращен нулевой указатель. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="31" column="38" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/PixelStreaming/MetaPixelStreamingInput.cpp" bodystart="47" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IJsonNetRpcTransport</label>
        <link refid="struct_i_json_net_rpc_transport"/>
      </node>
      <node id="1">
        <label>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</label>
        <link refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IJsonNetRpcTransport</label>
        <link refid="struct_i_json_net_rpc_transport"/>
      </node>
      <node id="4">
        <label>UActorComponent</label>
      </node>
      <node id="3">
        <label>UMetaPixelStreamingInput</label>
        <link refid="class_u_meta_pixel_streaming_input"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</label>
        <link refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>Component</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" line="26" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/PixelStreaming/MetaPixelStreamingInput.h" bodystart="27" bodyend="35"/>
    <listofallmembers>
      <member refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ab7fb0596d640ffaa4a35fb2c6ca8f198" prot="private" virt="non-virtual"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>Component</name></member>
      <member refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ab67f5c6c6f12d121134c9c85c75c9d38" prot="public" virt="non-virtual"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>FMetaJsonNetRpcPixelStreamingTransport</name></member>
      <member refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1ade48c008995fbf7c8fe9cc9471c5f26b" prot="public" virt="virtual"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>GetTransportPlayerState</name></member>
      <member refid="struct_i_json_net_rpc_transport_1a756de29a2bf70f5783b8e64afa058a56" prot="public" virt="non-virtual" ambiguityscope="IJsonNetRpcTransport::"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>GetTransportPlayerState</name></member>
      <member refid="struct_u_meta_pixel_streaming_input_1_1_f_meta_json_net_rpc_pixel_streaming_transport_1a080e9ba22cc5a984b25a2d5df113f9a0" prot="public" virt="virtual"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>SendRpcObject</name></member>
      <member refid="struct_i_json_net_rpc_transport_1aac2faee607c09e2a0dec84fbb7d0586f" prot="public" virt="virtual"><scope>UMetaPixelStreamingInput::FMetaJsonNetRpcPixelStreamingTransport</scope><name>~IJsonNetRpcTransport</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
