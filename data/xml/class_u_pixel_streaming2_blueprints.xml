<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_pixel_streaming2_blueprints" kind="class" language="C++" prot="public">
    <compoundname>UPixelStreaming2Blueprints</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UBlueprintFunctionLibrary</basecompoundref>
    <includes refid="_pixel_streaming2_blueprints_8h" local="no">PixelStreaming2Blueprints.h</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1aabcc3d8442cea68c8e1f2b4a4d7e7b6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::SendFileAsByteArray</definition>
        <argsstring>(TArray&lt; uint8 &gt; ByteArray, FString MimeType, FString FileExtension)</argsstring>
        <name>SendFileAsByteArray</name>
        <qualifiedname>UPixelStreaming2Blueprints::SendFileAsByteArray</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">uint8</ref> &gt;</type>
          <declname>ByteArray</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>MimeType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FileExtension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a specified byte array over the WebRTC peer connection data channel. The extension and mime type are used for file reconstruction on the front end</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ByteArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw data that will be sent over the data channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MimeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The mime type of the file. Used for reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FileExtension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="26" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a7cd3de9f263bd91a9ba79cf590743a58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerSendFileAsByteArray</definition>
        <argsstring>(FString StreamerId, TArray&lt; uint8 &gt; ByteArray, FString MimeType, FString FileExtension)</argsstring>
        <name>StreamerSendFileAsByteArray</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerSendFileAsByteArray</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">uint8</ref> &gt;</type>
          <declname>ByteArray</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>MimeType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FileExtension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a specified byte array over the WebRTC peer connection data channel. The extension and mime type are used for file reconstruction on the front end</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The streamer use when sending the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ByteArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw data that will be sent over the data channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MimeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The mime type of the file. Used for reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FileExtension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="37" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a815163950a433beac583bf62b52cedf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::SendFile</definition>
        <argsstring>(FString Filepath, FString MimeType, FString FileExtension)</argsstring>
        <name>SendFile</name>
        <qualifiedname>UPixelStreaming2Blueprints::SendFile</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>Filepath</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>MimeType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FileExtension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a specified file over the WebRTC peer connection data channel. The extension and mime type are used for file reconstruction on the front end</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file that will be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MimeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The mime type of the file. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FileExtension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="47" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1aea3540b0d66229986c5a4ef23d1c16f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerSendFile</definition>
        <argsstring>(FString StreamerId, FString Filepath, FString MimeType, FString FileExtension)</argsstring>
        <name>StreamerSendFile</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerSendFile</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>Filepath</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>MimeType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>FileExtension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a specified file over the WebRTC peer connection data channel. The extension and mime type are used for file reconstruction on the front end</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The streamer use when sending the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file that will be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MimeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The mime type of the file. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FileExtension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension. Used for file reconstruction on the front end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="58" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="50" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a69a870afd19d2d79850bac51c97ac668" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::ForceKeyFrame</definition>
        <argsstring>()</argsstring>
        <name>ForceKeyFrame</name>
        <qualifiedname>UPixelStreaming2Blueprints::ForceKeyFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force a key frame to be sent to the default streamer (if there is one). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="64" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1afce8ec7a449d184c1f93f6b65f144e36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerForceKeyFrame</definition>
        <argsstring>(FString StreamerId)</argsstring>
        <name>StreamerForceKeyFrame</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerForceKeyFrame</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force a key frame to be sent to the specified streamer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="70" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1ae72d0eaf258693f15a09f1dfca1b3a1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::FreezeFrame</definition>
        <argsstring>(UTexture2D *Texture)</argsstring>
        <name>FreezeFrame</name>
        <qualifiedname>UPixelStreaming2Blueprints::FreezeFrame</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture2D</ref> *</type>
          <declname>Texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Freeze the video stream of the default streamer (if there is one). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The freeze frame to display. If null then show the last frame that was streamed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="77" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a467fdbaa7ece28d9b0dedd13c36b93e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::UnfreezeFrame</definition>
        <argsstring>()</argsstring>
        <name>UnfreezeFrame</name>
        <qualifiedname>UPixelStreaming2Blueprints::UnfreezeFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unfreeze the video stream of the default streamer (if there is one). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="83" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a299e825b8a3dd711b3ffef66b531cc4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerFreezeStream</definition>
        <argsstring>(FString StreamerId, UTexture2D *Texture)</argsstring>
        <name>StreamerFreezeStream</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerFreezeStream</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture2D</ref> *</type>
          <declname>Texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Freeze the video stream of the specified video stream. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the streamer to freeze. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The freeze frame to display. If null then show the last frame that was streamed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="91" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1aa7817b62f3cd5bc8351576a765797603" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerUnfreezeStream</definition>
        <argsstring>(FString StreamerId)</argsstring>
        <name>StreamerUnfreezeStream</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerUnfreezeStream</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unfreeze the video stream of the specified streamer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the streamer to unfreeze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="98" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a18f4fc6d34f6be4d6975b4353d08801c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::KickPlayer</definition>
        <argsstring>(FString PlayerId)</argsstring>
        <name>KickPlayer</name>
        <qualifiedname>UPixelStreaming2Blueprints::KickPlayer</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>PlayerId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Kick a player that is connected to the default streamer (if there is a default streamer). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PlayerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the player to kick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="105" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a936aa0dac2e190155bead3b65bd0b9fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UPixelStreaming2Blueprints::StreamerKickPlayer</definition>
        <argsstring>(FString StreamerId, FString PlayerId)</argsstring>
        <name>StreamerKickPlayer</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerKickPlayer</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>PlayerId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Kick a player connected to the specified streamer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The streamer which the player belongs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PlayerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the player to kick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="113" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a932314d91164f109a334264fac5b054b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TArray&lt; FString &gt; UPixelStreaming2Blueprints::GetConnectedPlayers</definition>
        <argsstring>()</argsstring>
        <name>GetConnectedPlayers</name>
        <qualifiedname>UPixelStreaming2Blueprints::GetConnectedPlayers</qualifiedname>
        <briefdescription>
<para>Get the connected players. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TArray&lt;FString&gt; The connected players </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="121" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a664375a97c3f50e4fc83840ed766b116" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TArray&lt; FString &gt; UPixelStreaming2Blueprints::StreamerGetConnectedPlayers</definition>
        <argsstring>(FString StreamerId)</argsstring>
        <name>StreamerGetConnectedPlayers</name>
        <qualifiedname>UPixelStreaming2Blueprints::StreamerGetConnectedPlayers</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
          <declname>StreamerId</declname>
        </param>
        <briefdescription>
<para>Get the connected players. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>StreamerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The streamer whose list of players you wish to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TArray&lt;FString&gt; The connected players </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="130" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="124" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a087776c60e1c4e1415dc248f0b533db4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UPixelStreaming2Blueprints::GetDefaultStreamerID</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultStreamerID</name>
        <qualifiedname>UPixelStreaming2Blueprints::GetDefaultStreamerID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default Streamer ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="136" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="137" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_u_pixel_streaming2_blueprints_1a7e57780c6365c7a64b33f395e38225d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_u_pixel_streaming2_delegates" kindref="compound">UPixelStreaming2Delegates</ref> *</type>
        <definition>UPixelStreaming2Delegates * UPixelStreaming2Blueprints::GetDelegates</definition>
        <argsstring>()</argsstring>
        <name>GetDelegates</name>
        <qualifiedname>UPixelStreaming2Blueprints::GetDelegates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the singleton. This allows application-specific blueprints to bind to delegates of interest. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="144" column="34" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UPixelStreaming2Blueprints</label>
        <link refid="class_u_pixel_streaming2_blueprints"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UPixelStreaming2Blueprints</label>
        <link refid="class_u_pixel_streaming2_blueprints"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" line="14" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/Engine/PixelStreaming2/Source/PixelStreaming2/Private/Blueprints/PixelStreaming2Blueprints.h" bodystart="15" bodyend="145"/>
    <listofallmembers>
      <member refid="class_u_pixel_streaming2_blueprints_1a69a870afd19d2d79850bac51c97ac668" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>ForceKeyFrame</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1ae72d0eaf258693f15a09f1dfca1b3a1e" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>FreezeFrame</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a932314d91164f109a334264fac5b054b" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>GetConnectedPlayers</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a087776c60e1c4e1415dc248f0b533db4" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>GetDefaultStreamerID</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a7e57780c6365c7a64b33f395e38225d3" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>GetDelegates</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a18f4fc6d34f6be4d6975b4353d08801c" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>KickPlayer</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a815163950a433beac583bf62b52cedf9" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>SendFile</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1aabcc3d8442cea68c8e1f2b4a4d7e7b6b" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>SendFileAsByteArray</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1afce8ec7a449d184c1f93f6b65f144e36" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerForceKeyFrame</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a299e825b8a3dd711b3ffef66b531cc4f" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerFreezeStream</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a664375a97c3f50e4fc83840ed766b116" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerGetConnectedPlayers</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a936aa0dac2e190155bead3b65bd0b9fd" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerKickPlayer</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1aea3540b0d66229986c5a4ef23d1c16f0" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerSendFile</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a7cd3de9f263bd91a9ba79cf590743a58" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerSendFileAsByteArray</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1aa7817b62f3cd5bc8351576a765797603" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>StreamerUnfreezeStream</name></member>
      <member refid="class_u_pixel_streaming2_blueprints_1a467fdbaa7ece28d9b0dedd13c36b93e2" prot="public" virt="non-virtual"><scope>UPixelStreaming2Blueprints</scope><name>UnfreezeFrame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
