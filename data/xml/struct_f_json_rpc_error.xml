<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="struct_f_json_rpc_error" kind="struct" language="C++" prot="public">
    <compoundname>FJsonRpcError</compoundname>
    <basecompoundref prot="public" virt="non-virtual">FJsonObjectWrapper</basecompoundref>
    <includes refid="_json_rpc_error_8h" local="no">JsonRpcError.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_json_rpc_error_1a9e8a74c346c6f9cdf0a817798bfe6473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcError::FJsonRpcError</definition>
        <argsstring>()=default</argsstring>
        <name>FJsonRpcError</name>
        <qualifiedname>FJsonRpcError::FJsonRpcError</qualifiedname>
        <briefdescription>
<para>Конструктор по умолчанию для <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a4397b916be1dac8bd951ea98d4e225e9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcError::FJsonRpcError</definition>
        <argsstring>(const FJsonObject &amp;ErrorJsonObject)</argsstring>
        <name>FJsonRpcError</name>
        <qualifiedname>FJsonRpcError::FJsonRpcError</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FJsonObject</ref> &amp;</type>
          <declname>ErrorJsonObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Конструирует объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> из заданного FJsonObject.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ErrorJsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>FJsonObject, содержащий информацию об ошибке. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="59" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a6e6ec1e042094d131600e2368be06851" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcError::FJsonRpcError</definition>
        <argsstring>(int32 Code, const FString &amp;Message)</argsstring>
        <name>FJsonRpcError</name>
        <qualifiedname>FJsonRpcError::FJsonRpcError</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>Code</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
<para>Конструирует новый объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> с заданным кодом и сообщением. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Code</parametername>
</parameternamelist>
<parameterdescription>
<para>Код ошибки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Message</parametername>
</parameternamelist>
<parameterdescription>
<para>Сообщение об ошибке. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="67" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1af56eaf551e9c547c85b0f8504b963a04" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcError::FJsonRpcError</definition>
        <argsstring>(EJsonRpcErrorCode Code, const FString &amp;Message)</argsstring>
        <name>FJsonRpcError</name>
        <qualifiedname>FJsonRpcError::FJsonRpcError</qualifiedname>
        <param>
          <type><ref refid="_json_rpc_error_8h_1a6becc926444e3e0cac2415f82b668ec2" kindref="member">EJsonRpcErrorCode</ref></type>
          <declname>Code</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Создает новый экземпляр <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> с заданным кодом ошибки и сообщением.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Code</parametername>
</parameternamelist>
<parameterdescription>
<para>Код ошибки для установки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Message</parametername>
</parameternamelist>
<parameterdescription>
<para>Сообщение об ошибке для установки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="75" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a98734edc6aafb33fb6b7ff9f3bcbafcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 FJsonRpcError::GetCode</definition>
        <argsstring>() const</argsstring>
        <name>GetCode</name>
        <qualifiedname>FJsonRpcError::GetCode</qualifiedname>
        <briefdescription>
<para>Получает код ошибки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод извлекает код ошибки для ошибки JSON-RPC.</para>
<para><simplesect kind="return"><para>Код ошибки в виде целого числа. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="86" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a2e1fccfce2c3e2713015ea0fceac29d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcError::SetCode</definition>
        <argsstring>(int32 ErrorCode) const</argsstring>
        <name>SetCode</name>
        <qualifiedname>FJsonRpcError::SetCode</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>ErrorCode</declname>
        </param>
        <briefdescription>
<para>Устанавливает код ошибки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод устанавливает код ошибки для объекта ошибки JSON-RPC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ErrorCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Код ошибки для установки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="95" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a7c511f61933bd9caccab83bb3e3099a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString FJsonRpcError::GetMessage</definition>
        <argsstring>() const</argsstring>
        <name>GetMessage</name>
        <qualifiedname>FJsonRpcError::GetMessage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Получает сообщение об ошибке, связанное с этой ошибкой JSON-RPC.</para>
<para><simplesect kind="return"><para>Сообщение об ошибке. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="103" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a7e3f559ef57bc5ed1241672e0ea04a4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void FJsonRpcError::SetMessage</definition>
        <argsstring>(const FString &amp;ErrorMessage) const</argsstring>
        <name>SetMessage</name>
        <qualifiedname>FJsonRpcError::SetMessage</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>ErrorMessage</declname>
        </param>
        <briefdescription>
<para>Устанавливает сообщение об ошибке для ошибки JSON-RPC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ErrorMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>Сообщение об ошибке для установки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="110" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1afdd6f18705e9b86760228851ea3aa3c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FJsonRpcError::operator==</definition>
        <argsstring>(const FJsonRpcError &amp;Other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>FJsonRpcError::operator==</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> &amp;</type>
          <declname>Other</declname>
        </param>
        <briefdescription>
<para>Перегруженный оператор равенства для сравнения двух объектов <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Other</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> для сравнения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, если объекты <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> имеют одинаковый код и сообщение, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="120" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a0f3d40b8bed370769b9ee5134eed93b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FJsonRpcError::operator!=</definition>
        <argsstring>(const FJsonRpcError &amp;Other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>FJsonRpcError::operator!=</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> &amp;</type>
          <declname>Other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Проверяет, не равен ли текущий объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> другому объекту <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Other</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> для сравнения.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, если объекты <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> не равны, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="130" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_json_rpc_error_1a8bd7c8eb4dcd71fdb92ba54091643f35" prot="public" static="no" const="yes" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>FJsonRpcError::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>FJsonRpcError::operator bool</qualifiedname>
        <briefdescription>
<para>Преобразует объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> в значение типа bool. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод переопределяет оператор bool() и обеспечивает неявное преобразование типа bool для объектов <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>. Возвращает true, если объект <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> не равен объекту <ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref>, созданному по умолчанию, и false в противном случае.</para>
<para><simplesect kind="return"><para>Логическое значение, указывающее на существование ошибки.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_f_json_rpc_error" kindref="compound">FJsonRpcError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="143" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Private/JsonRpcError.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Эта структура представляет ошибку JSON-RPC. Она наследуется от FJsonObjectWrapper.</para>
<para><simplesect kind="see"><para>FJsonObjectWrapper </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>FJsonObjectWrapper</label>
      </node>
      <node id="1">
        <label>FJsonRpcError</label>
        <link refid="struct_f_json_rpc_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>FJsonObjectWrapper</label>
      </node>
      <node id="1">
        <label>FJsonRpcError</label>
        <link refid="struct_f_json_rpc_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" line="44" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/JsonRpc/Source/JsonRpc/Public/JsonRpcError.h" bodystart="45" bodyend="144"/>
    <listofallmembers>
      <member refid="struct_f_json_rpc_error_1a9e8a74c346c6f9cdf0a817798bfe6473" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>FJsonRpcError</name></member>
      <member refid="struct_f_json_rpc_error_1a4397b916be1dac8bd951ea98d4e225e9" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>FJsonRpcError</name></member>
      <member refid="struct_f_json_rpc_error_1a6e6ec1e042094d131600e2368be06851" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>FJsonRpcError</name></member>
      <member refid="struct_f_json_rpc_error_1af56eaf551e9c547c85b0f8504b963a04" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>FJsonRpcError</name></member>
      <member refid="struct_f_json_rpc_error_1a98734edc6aafb33fb6b7ff9f3bcbafcf" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>GetCode</name></member>
      <member refid="struct_f_json_rpc_error_1a7c511f61933bd9caccab83bb3e3099a4" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>GetMessage</name></member>
      <member refid="struct_f_json_rpc_error_1a8bd7c8eb4dcd71fdb92ba54091643f35" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>operator bool</name></member>
      <member refid="struct_f_json_rpc_error_1a0f3d40b8bed370769b9ee5134eed93b7" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>operator!=</name></member>
      <member refid="struct_f_json_rpc_error_1afdd6f18705e9b86760228851ea3aa3c9" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>operator==</name></member>
      <member refid="struct_f_json_rpc_error_1a2e1fccfce2c3e2713015ea0fceac29d8" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>SetCode</name></member>
      <member refid="struct_f_json_rpc_error_1a7e3f559ef57bc5ed1241672e0ea04a4d" prot="public" virt="non-virtual"><scope>FJsonRpcError</scope><name>SetMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
