<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_base_utils_expose" kind="class" language="C++" prot="public">
    <compoundname>UBaseUtilsExpose</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UObject</basecompoundref>
    <includes refid="_base_utils_expose_8h" local="no">BaseUtilsExpose.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_u_base_utils_expose_1a781cab25dfb1a642288b50b1ebaa350b" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture</ref> * &gt; &amp;</type>
        <definition>TArray&lt;UTexture*&gt;&amp; UBaseUtilsExpose::OutTextures</definition>
        <argsstring></argsstring>
        <name>OutTextures</name>
        <qualifiedname>UBaseUtilsExpose::OutTextures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="72" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_base_utils_expose_1a7b70a892002a160b71651fdd7fa285b2" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture</ref> * &gt; bool</type>
        <definition>TArray&lt;UTexture*&gt; bool UBaseUtilsExpose::bAllQualityLevels</definition>
        <argsstring></argsstring>
        <name>bAllQualityLevels</name>
        <qualifiedname>UBaseUtilsExpose::bAllQualityLevels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="72" column="37" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_base_utils_expose_1a3ade8dbf76c8e4ef1522063d9ae7d11f" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UTexture</ref> * &gt; bool bool</type>
        <definition>TArray&lt;UTexture*&gt; bool bool UBaseUtilsExpose::bAllFeatureLevels</definition>
        <argsstring></argsstring>
        <name>bAllFeatureLevels</name>
        <qualifiedname>UBaseUtilsExpose::bAllFeatureLevels</qualifiedname>
        <initializer>{
                <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">return</ref> <ref refid="class_u_meta_texture_utils_1a351d1cb9e763d8115398bae46c0ce6d7" kindref="member">UMetaTextureUtils::GetMaterialTexture</ref>(Material, <ref refid="class_u_base_utils_expose_1a781cab25dfb1a642288b50b1ebaa350b" kindref="member">OutTextures</ref>, <ref refid="class_u_base_utils_expose_1a7b70a892002a160b71651fdd7fa285b2" kindref="member">bAllQualityLevels</ref>, bAllFeatureLevels)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="72" column="60" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_base_utils_expose_1a8bdd5790a2fe9415e18a4a6a4d6fd9c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UBaseUtilsExpose::IsPlatformLinux</definition>
        <argsstring>()</argsstring>
        <name>IsPlatformLinux</name>
        <qualifiedname>UBaseUtilsExpose::IsPlatformLinux</qualifiedname>
        <briefdescription>
<para>Проверяет, является ли текущая платформа Linux. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Возвращает true, если текущая платформа - Linux, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="26" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Utilities/BaseUtils/BaseUtilsExpose.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_u_base_utils_expose_1afefd827d4eca915849cfcef6ebfa4bb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UBaseUtilsExpose::CalculateSha1Hash</definition>
        <argsstring>(const FString &amp;InputString)</argsstring>
        <name>CalculateSha1Hash</name>
        <qualifiedname>UBaseUtilsExpose::CalculateSha1Hash</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>InputString</declname>
        </param>
        <briefdescription>
<para>Вычисляет значение хэша SHA1 для данной входной строки. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InputString</parametername>
</parameternamelist>
<parameterdescription>
<para>Входная строка, для которой необходимо вычислить значение хэша SHA1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение хэша SHA1 входной строки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="36" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Utilities/BaseUtils/BaseUtilsExpose.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_u_base_utils_expose_1a4eddab58d971b9b6c0219aba90e4a075" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FLinearColor</ref></type>
        <definition>FLinearColor UBaseUtilsExpose::HexToRgb</definition>
        <argsstring>(const FString &amp;HexCode)</argsstring>
        <name>HexToRgb</name>
        <qualifiedname>UBaseUtilsExpose::HexToRgb</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>HexCode</declname>
        </param>
        <briefdescription>
<para>Переводит шестнадцатеричный цветовой код в значения RGB. </para>
        </briefdescription>
        <detaileddescription>
<para>Входной шестнадцатеричный цветовой код должен быть в формате &quot;#RRGGBB&quot;, где RR, GG и BB - это двузначные шестнадцатеричные значения, представляющие красный, зеленый и синий каналы соответственно.</para>
<para>Если шестнадцатеричный цветовой код недействителен или не соответствует правильному формату, будет зарегистрировано сообщение об ошибке и в качестве цвета по умолчанию будет возвращен FLinearColor::Black.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>HexCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Шестнадцатеричный цветовой код для преобразования.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение цвета RGB в виде FLinearColor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="52" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Utilities/BaseUtils/BaseUtilsExpose.cpp" bodystart="17" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_u_base_utils_expose_1add7ef36cd04405d10b766dde1a3994a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>static FVector UBaseUtilsExpose::GetBoxCenter</definition>
        <argsstring>(const FBox &amp;Box)</argsstring>
        <name>GetBoxCenter</name>
        <qualifiedname>UBaseUtilsExpose::GetBoxCenter</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FBox</ref> &amp;</type>
          <declname>Box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Получение центра бокса (для использования в BP, для отладки тайлсетов) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Box</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Центр бокса </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="83" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_u_base_utils_expose_1aa0527e38e478bc7d6ac0899651411d36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>static FVector UBaseUtilsExpose::GetBoxExtent</definition>
        <argsstring>(const FBox &amp;Box)</argsstring>
        <name>GetBoxExtent</name>
        <qualifiedname>UBaseUtilsExpose::GetBoxExtent</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FBox</ref> &amp;</type>
          <declname>Box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Получение экстента бокса (для использования в BP, для отладки тайлсетов) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Box</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Экстент бокса </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="94" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="94" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_u_base_utils_expose_1ab01b51defab49ec211b58cf588cf8bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UBaseUtilsExpose::UFUNCTION</definition>
        <argsstring>(BlueprintCallable, meta=(DisplayName=&quot;Get Textures array from Material&quot;, Keywords=&quot;Materials texture&quot;), Category=&quot;MetaBaseUtils|Texture&quot;) static void GetMaterialTextureUtil(UMaterialInterface *Material</argsstring>
        <name>UFUNCTION</name>
        <qualifiedname>UBaseUtilsExpose::UFUNCTION</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintCallable</ref></type>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">meta</ref></type>
          <defval>(DisplayName=&quot;Get Textures <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">array</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">from</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Material&quot;</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Keywords</ref>=&quot;Materials <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">texture&quot;</ref>)</defval>
        </param>
        <param>
          <type>Category</type>
          <defval>&quot;MetaBaseUtils|<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Texture&quot;</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Извлекает все текстуры, используемые в материале, и сохраняет их в выходном массиве.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Material</parametername>
</parameternamelist>
<parameterdescription>
<para>Интерфейс материала, из которого следует извлечь текстуры. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutTextures</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив, в котором будут храниться извлеченные текстуры. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bAllQualityLevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Указывает, следует ли извлекать текстуры для всех уровней качества. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bAllFeatureLevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Указывает, следует ли извлекать текстуры для всех уровней особенностей.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Эта функция извлекает текстуры, используемые материалом, на основе указанных уровней качества и особенностей. Если bAllQualityLevels истинно, она извлекает текстуры для всех уровней качества. Если bAllFeatureLevels истинно, она извлекает текстуры для всех уровней особенностей.</para>
</simplesect>
<simplesect kind="see"><para>UMaterialInterface::GetUsedTextures() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="69" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>UBaseUtilsExpose</label>
        <link refid="class_u_base_utils_expose"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>UObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>UBaseUtilsExpose</label>
        <link refid="class_u_base_utils_expose"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>UObject</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" line="15" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Utilities/BaseUtils/BaseUtilsExpose.h" bodystart="16" bodyend="98"/>
    <listofallmembers>
      <member refid="class_u_base_utils_expose_1a3ade8dbf76c8e4ef1522063d9ae7d11f" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>bAllFeatureLevels</name></member>
      <member refid="class_u_base_utils_expose_1a7b70a892002a160b71651fdd7fa285b2" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>bAllQualityLevels</name></member>
      <member refid="class_u_base_utils_expose_1afefd827d4eca915849cfcef6ebfa4bb8" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>CalculateSha1Hash</name></member>
      <member refid="class_u_base_utils_expose_1add7ef36cd04405d10b766dde1a3994a4" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>GetBoxCenter</name></member>
      <member refid="class_u_base_utils_expose_1aa0527e38e478bc7d6ac0899651411d36" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>GetBoxExtent</name></member>
      <member refid="class_u_base_utils_expose_1a4eddab58d971b9b6c0219aba90e4a075" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>HexToRgb</name></member>
      <member refid="class_u_base_utils_expose_1a8bdd5790a2fe9415e18a4a6a4d6fd9c5" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>IsPlatformLinux</name></member>
      <member refid="class_u_base_utils_expose_1a781cab25dfb1a642288b50b1ebaa350b" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>OutTextures</name></member>
      <member refid="class_u_base_utils_expose_1ab01b51defab49ec211b58cf588cf8bab" prot="public" virt="non-virtual"><scope>UBaseUtilsExpose</scope><name>UFUNCTION</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
