<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_variants_table_controller" kind="class" language="C++" prot="public">
    <compoundname>UVariantsTableController</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UObject</basecompoundref>
    <includes refid="_variants_table_controller_8h" local="no">VariantsTableController.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_u_variants_table_controller_1a88e07b52cec0888d080d55032ddd018b" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UDataTable</ref> &gt;</type>
        <definition>TObjectPtr&lt;UDataTable&gt; UVariantsTableController::DataTable</definition>
        <argsstring></argsstring>
        <name>DataTable</name>
        <qualifiedname>UVariantsTableController::DataTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="27" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_variants_table_controller_1ae8a314803977e75184415ff314f7a6f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString UVariantsTableController::GetVariantTableRef</definition>
        <argsstring>()</argsstring>
        <name>GetVariantTableRef</name>
        <qualifiedname>UVariantsTableController::GetVariantTableRef</qualifiedname>
        <briefdescription>
<para>Получить ссылку на таблицу вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает ссылку на таблицу вариантов. Таблица вариантов хранится в активе BuildingVariantSettings и получается с помощью метода GetDefault. Затем ссылка на таблицу возвращается как FString.</para>
<para><simplesect kind="return"><para>Ссылка на таблицу вариантов в виде FString. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="37" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1a91ba62d942712e136f593efa07864634" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::StaticRecreateNotExistsVariants</definition>
        <argsstring>()</argsstring>
        <name>StaticRecreateNotExistsVariants</name>
        <qualifiedname>UVariantsTableController::StaticRecreateNotExistsVariants</qualifiedname>
        <briefdescription>
<para>Воссоздать варианты, которых не существует в таблице вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот статический метод воссоздает варианты в таблице вариантов, которых не существует. Он создает новый объект класса <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref> и вызывает метод RecreateNotExistsVariants на этом объекте.</para>
<para><simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1aec6a40690e52047dd97cd0ff615c3437" kindref="member">UVariantsTableController::RecreateNotExistsVariants</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="146" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="132" bodyend="136"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_u_variants_table_controller_1a00216a3b527ae940b2a6f145ca83dc6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UVariantsTableController::UVariantsTableController</definition>
        <argsstring>()</argsstring>
        <name>UVariantsTableController</name>
        <qualifiedname>UVariantsTableController::UVariantsTableController</qualifiedname>
        <briefdescription>
<para>Конструктор по умолчанию для класса <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот конструктор инициализирует объект <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref>. Он загружает DataTable, вызывая метод GetVariantTableRef для получения ссылки, а затем загружает объект DataTable с использованием LoadObject. Если объект DataTable недействителен, записывается сообщение об ошибке.</para>
<para><simplesect kind="return"><para>Ничего. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="47" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1ad5bd0bd205403adc116221c68c9318cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::LoadDataTable</definition>
        <argsstring>()</argsstring>
        <name>LoadDataTable</name>
        <qualifiedname>UVariantsTableController::LoadDataTable</qualifiedname>
        <briefdescription>
<para>Загружает таблицу данных с вариантами. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод загружает таблицу данных с вариантами и устанавливает свойство DataTable на загруженную таблицу. Таблица данных загружается с использованием метода GetVariantTableRef для получения строки ссылки. Если загруженная таблица не действительна, регистрируется сообщение об ошибке и метод возвращает управление.</para>
<para><simplesect kind="note"><para>Этот метод предполагает, что свойство DataTable действительно и уже было инициализировано.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1ae8a314803977e75184415ff314f7a6f3" kindref="member">GetVariantTableRef</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="60" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="14" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1a109f8f70f508a399caa992385f7566c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::PostInitProperties</definition>
        <argsstring>() override</argsstring>
        <name>PostInitProperties</name>
        <qualifiedname>UVariantsTableController::PostInitProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="62" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1aa372193d0c9681954aff7fbe3ad89020" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::Add</definition>
        <argsstring>(ABuildingVariant *Variant) const</argsstring>
        <name>Add</name>
        <qualifiedname>UVariantsTableController::Add</qualifiedname>
        <param>
          <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Добавить вариант здания в таблицу вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод добавляет вариант здания в таблицу вариантов. Вариант определяется параметром Variant, который является указателем на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>. Он получает имя строки для варианта с помощью функции GetRowName и создает структуру VariantRow для хранения соответствующих данных для варианта. В структуре VariantRow устанавливаются имя строки, объект варианта, фактические варианты и текущий индекс. Затем строка добавляется в DataTable с помощью функции AddRow. После добавления строки он вызывает функцию MarkDataTableDirty для обработки любых необходимых исправлений или обновлений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, представляющий добавляемый вариант здания.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1a73116318266d92dc6ff3c65ad84e6a2f" kindref="member">GetRowName</ref>, <ref refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" kindref="member">MarkDataTableDirty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="78" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="36" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1a336e925c53179623eff823643325ca85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::Remove</definition>
        <argsstring>(const ABuildingVariant *Variant) const</argsstring>
        <name>Remove</name>
        <qualifiedname>UVariantsTableController::Remove</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Удалить вариант здания из таблицы вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет вариант здания из таблицы вариантов. Вариант для удаления определяется параметром Variant, который является указателем на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>. Он получает имя строки для варианта с помощью функции GetRowName. Функция RemoveRow вызывается для DataTable с именем строки в качестве аргумента, удаляя строку из таблицы. После удаления строки он вызывает функцию MarkDataTableDirty для обработки любых необходимых исправлений или обновлений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, представляющий удаляемый вариант здания.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1a73116318266d92dc6ff3c65ad84e6a2f" kindref="member">GetRowName</ref>, <ref refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" kindref="member">MarkDataTableDirty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="93" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="53" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1abdb35974c3cebbb3b2ba4e714ea04416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::ChangeBuildingsSet</definition>
        <argsstring>(const ABuildingVariant *Variant) const</argsstring>
        <name>ChangeBuildingsSet</name>
        <qualifiedname>UVariantsTableController::ChangeBuildingsSet</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Изменить набор зданий для данного варианта. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод изменяет набор зданий для данного варианта. Вариант определяется параметром Variant, который является указателем на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>. Он ищет строку в DataTable, которая соответствует варианту, с помощью функции GetRowName. Свойство Variants найденной строки обновляется фактическими вариантами, полученными с помощью функции GetActualVariants. Наконец, вызывается функция MarkDataTableDirty, чтобы обработать любые необходимые исправления или обновления.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на экземпляр <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, представляющий вариант, для которого требуется изменить набор зданий.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1a73116318266d92dc6ff3c65ad84e6a2f" kindref="member">GetRowName</ref>, <ref refid="class_u_variants_table_controller_1a70a7f804d38e01188fc0b9875dc201a4" kindref="member">GetActualVariants</ref>, <ref refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" kindref="member">MarkDataTableDirty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="108" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1aca0495498fd46222196dbcebac7211d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::ChangeCurrentIndex</definition>
        <argsstring>(const ABuildingVariant *Variant) const</argsstring>
        <name>ChangeCurrentIndex</name>
        <qualifiedname>UVariantsTableController::ChangeCurrentIndex</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Изменяет текущий индекс в таблице вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод используется для изменения текущего индекса в таблице вариантов на основе предоставленного варианта. Он принимает константный указатель на объект <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> в качестве входного параметра, который используется для поиска соответствующей строки в таблице вариантов. Затем текущий индекс этой строки обновляется текущим индексом варианта, полученным из объекта <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>. Наконец, вызывается метод <ref refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" kindref="member">MarkDataTableDirty()</ref> для обработки любых необходимых обновлений после изменения таблицы.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>Константный указатель на объект <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, представляющий текущий вариант. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="119" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="87" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1aec6a40690e52047dd97cd0ff615c3437" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::RecreateNotExistsVariants</definition>
        <argsstring>() const</argsstring>
        <name>RecreateNotExistsVariants</name>
        <qualifiedname>UVariantsTableController::RecreateNotExistsVariants</qualifiedname>
        <briefdescription>
<para>Восстанавливает варианты, которых не существует в таблице вариантов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод получает имена строк из DataTable и находит любые GUID вариантов, которых не существует в таблице. Для каждого варианта, которого не существует, метод получает соответствующую строку, извлекает GUID зданий варианта, удаляет строку из DataTable, а затем объединяет Здания по их ID с помощью метода StaticCombineBuildingsByIds из класса <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>. После воссоздания всех отсутствующих вариантов, он вызывает метод MarkDataTableDirty, если какие-либо варианты были воссозданы.</para>
<para><simplesect kind="note"><para>Этот метод предполагает, что переменная DataTable правильно инициализирована.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1a88e07b52cec0888d080d55032ddd018b" kindref="member">DataTable</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1aa30ccdc483b86e811500b679a16ed753" kindref="member">GetNotExistsVariantsGuids</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_f_variant_row" kindref="compound">FVariantRow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BuildingsCombinedGuids</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_a_building_variant_1a2edc3a8a3f9cbca70d8fe9ab92b041d6" kindref="member">ABuildingVariant::StaticCombineBuildingsByIds</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" kindref="member">MarkDataTableDirty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="137" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="105" bodyend="130"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_u_variants_table_controller_1a73116318266d92dc6ff3c65ad84e6a2f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FName</ref></type>
        <definition>FName UVariantsTableController::GetRowName</definition>
        <argsstring>(const ABuildingVariant *Variant)</argsstring>
        <name>GetRowName</name>
        <qualifiedname>UVariantsTableController::GetRowName</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Получить имя строки на основе предоставленного варианта здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает указатель на объект <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> и возвращает имя строки в виде FName на основе GUID варианта.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>указатель на объект <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, для которого нужно получить имя строки.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Имя строки в виде FName на основе GUID предоставленного варианта здания. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="158" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1a70a7f804d38e01188fc0b9875dc201a4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_variant_element" kindref="compound">FVariantElement</ref> &gt;</type>
        <definition>TArray&lt; FVariantElement &gt; UVariantsTableController::GetActualVariants</definition>
        <argsstring>(const ABuildingVariant *Variant)</argsstring>
        <name>GetActualVariants</name>
        <qualifiedname>UVariantsTableController::GetActualVariants</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>Variant</declname>
        </param>
        <briefdescription>
<para>Получить фактические варианты здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает указатель на вариант здания и возвращает массив структур <ref refid="struct_f_variant_element" kindref="compound">FVariantElement</ref>. Каждая структура <ref refid="struct_f_variant_element" kindref="compound">FVariantElement</ref> представляет вариант здания с соответствующей информацией, такой как путь Unreal к JSON здания, ссылка на здание, сетки здания и GUID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Variant</parametername>
</parameternamelist>
<parameterdescription>
<para>указатель на <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, для которого необходимо получить фактические варианты.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив структур <ref refid="struct_f_variant_element" kindref="compound">FVariantElement</ref>, представляющих фактические варианты предоставленного варианта здания. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="169" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="156" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1aa30ccdc483b86e811500b679a16ed753" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FName</ref> &gt;</type>
        <definition>TArray&lt; FName &gt; UVariantsTableController::GetNotExistsVariantsGuids</definition>
        <argsstring>(const TArray&lt; FName &gt; &amp;Guids)</argsstring>
        <name>GetNotExistsVariantsGuids</name>
        <qualifiedname>UVariantsTableController::GetNotExistsVariantsGuids</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FName</ref> &gt; &amp;</type>
          <declname>Guids</declname>
        </param>
        <briefdescription>
<para>Получить массив GUID вариантов, которые не существуют в текущем мире. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает массив GUID в виде FName и проверяет существующие варианты зданий в текущем мире, чтобы найти GUID, которые не существуют. Сначала он преобразует входные GUID в FGuid, затем получает все существующие варианты зданий в мире и сравнивает их с входными GUID, чтобы найти те, которые не существуют.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guids</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив GUID в виде FName для проверки на существование в текущем мире. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив GUID в виде FName, которые не существуют в текущем мире. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="179" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="174" bodyend="205"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void UVariantsTableController::MarkDataTableDirty</definition>
        <argsstring>() const</argsstring>
        <name>MarkDataTableDirty</name>
        <qualifiedname>UVariantsTableController::MarkDataTableDirty</qualifiedname>
        <briefdescription>
<para>Пометка таблицы как изменённой Помечает таблицу как изменённую, после выхода из <ref refid="namespace_u_e" kindref="compound">UE</ref> он предлагает её сохранить </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="184" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_u_variants_table_controller_1a198a5401c6ef5c6af2fc2fdc58ae3ee2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UVariantsTableController::IsAllowTableOperations</definition>
        <argsstring>() const</argsstring>
        <name>IsAllowTableOperations</name>
        <qualifiedname>UVariantsTableController::IsAllowTableOperations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="186" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.cpp" bodystart="65" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Класс <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref> предоставляет функциональность для управления таблицей вариантов зданий. </para>
    </briefdescription>
    <detaileddescription>
<para>Класс <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref> является подклассом UObject, который позволяет добавлять, удалять и изменять варианты зданий в таблице. Таблица хранится в свойстве DataTable и доступна с помощью различных методов, предоставляемых классом. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UObject</label>
      </node>
      <node id="1">
        <label>UVariantsTableController</label>
        <link refid="class_u_variants_table_controller"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>UObject</label>
      </node>
      <node id="1">
        <label>UVariantsTableController</label>
        <link refid="class_u_variants_table_controller"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" line="22" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/VariantsTable/VariantsTableController.h" bodystart="23" bodyend="187"/>
    <listofallmembers>
      <member refid="class_u_variants_table_controller_1aa372193d0c9681954aff7fbe3ad89020" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>Add</name></member>
      <member refid="class_u_variants_table_controller_1abdb35974c3cebbb3b2ba4e714ea04416" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>ChangeBuildingsSet</name></member>
      <member refid="class_u_variants_table_controller_1aca0495498fd46222196dbcebac7211d2" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>ChangeCurrentIndex</name></member>
      <member refid="class_u_variants_table_controller_1a88e07b52cec0888d080d55032ddd018b" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>DataTable</name></member>
      <member refid="class_u_variants_table_controller_1a70a7f804d38e01188fc0b9875dc201a4" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>GetActualVariants</name></member>
      <member refid="class_u_variants_table_controller_1aa30ccdc483b86e811500b679a16ed753" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>GetNotExistsVariantsGuids</name></member>
      <member refid="class_u_variants_table_controller_1a73116318266d92dc6ff3c65ad84e6a2f" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>GetRowName</name></member>
      <member refid="class_u_variants_table_controller_1ae8a314803977e75184415ff314f7a6f3" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>GetVariantTableRef</name></member>
      <member refid="class_u_variants_table_controller_1a198a5401c6ef5c6af2fc2fdc58ae3ee2" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>IsAllowTableOperations</name></member>
      <member refid="class_u_variants_table_controller_1ad5bd0bd205403adc116221c68c9318cb" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>LoadDataTable</name></member>
      <member refid="class_u_variants_table_controller_1a173086d0fd82599ed614e111b169da87" prot="private" virt="non-virtual"><scope>UVariantsTableController</scope><name>MarkDataTableDirty</name></member>
      <member refid="class_u_variants_table_controller_1a109f8f70f508a399caa992385f7566c2" prot="public" virt="virtual"><scope>UVariantsTableController</scope><name>PostInitProperties</name></member>
      <member refid="class_u_variants_table_controller_1aec6a40690e52047dd97cd0ff615c3437" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>RecreateNotExistsVariants</name></member>
      <member refid="class_u_variants_table_controller_1a336e925c53179623eff823643325ca85" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>Remove</name></member>
      <member refid="class_u_variants_table_controller_1a91ba62d942712e136f593efa07864634" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>StaticRecreateNotExistsVariants</name></member>
      <member refid="class_u_variants_table_controller_1a00216a3b527ae940b2a6f145ca83dc6e" prot="public" virt="non-virtual"><scope>UVariantsTableController</scope><name>UVariantsTableController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
