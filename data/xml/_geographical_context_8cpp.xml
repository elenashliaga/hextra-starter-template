<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="_geographical_context_8cpp" kind="file" language="C++">
    <compoundname>GeographicalContext.cpp</compoundname>
    <includes refid="_geographical_context_8h" local="yes">GeographicalContext.h</includes>
    <includes refid="_meta_logging_8h" local="yes">MetaLogging.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeographicalMath/Source/GeographicalMath/Private/GeographicalContext.cpp</label>
        <link refid="_geographical_context_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>GeographicalContext.h</label>
        <link refid="_geographical_context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>GeographicalEllipsoid.h</label>
        <link refid="_geographical_ellipsoid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>GeographicalLocation.h</label>
        <link refid="_geographical_location_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>GeographicalMathLibrary.h</label>
        <link refid="_geographical_math_library_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>MetaLogging.h</label>
        <link refid="_meta_logging_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CoreMinimal.h</label>
      </node>
      <node id="12">
        <label>GeographicalContext.generated.h</label>
      </node>
      <node id="7">
        <label>GeographicalEllipsoid.generated.h</label>
      </node>
      <node id="11">
        <label>GeographicalLocation.generated.h</label>
      </node>
      <node id="9">
        <label>GeographicalMathLibrary.generated.h</label>
      </node>
      <node id="8">
        <label>Kismet/BlueprintFunctionLibrary.h</label>
      </node>
      <node id="14">
        <label>Modules/ModuleManager.h</label>
      </node>
      <node id="4">
        <label>UObject/Object.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_geographical_context_8cpp_1a7ebb2bb92af71aa7374abfc58e81fb19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_LOG_CATEGORY</definition>
        <argsstring>(LogGeographicalContext)</argsstring>
        <name>DEFINE_LOG_CATEGORY</name>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">LogGeographicalContext</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeographicalMath/Source/GeographicalMath/Private/GeographicalContext.cpp" line="4" column="1" declfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeographicalMath/Source/GeographicalMath/Private/GeographicalContext.cpp" declline="4" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_geographical_context_8h" kindref="compound">GeographicalContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_logging_8h" kindref="compound">MetaLogging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="_geographical_context_8cpp_1a7ebb2bb92af71aa7374abfc58e81fb19" kindref="member">DEFINE_LOG_CATEGORY</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">LogGeographicalContext</ref>);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UGeographicalContext::Initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_geographical_ellipsoid" kindref="compound">FGeographicalEllipsoid</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">InEllipsoid</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UObject*<sp/>WorldContext)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInitialized())</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_meta_logging_8h_1a2faf26ecd1948b07e92daa83d398677e" kindref="member">META_LOG</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">LogGeographicalContext</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Warning</ref>,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Ignored<sp/>double<sp/>initialization<sp/>attempt<sp/>for<sp/>Geographical<sp/>Context.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref><sp/>=<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">InEllipsoid</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref><sp/>=<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">GEngine</ref>-&gt;GetWorldFromContextObject(<ref refid="class_u_geographical_context_1a1e49801023a6b67f30d83452898fb8a3" kindref="member">WorldContext</ref>,<sp/>EGetWorldErrorMode::LogAndReturnNull);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_meta_logging_8h_1a2faf26ecd1948b07e92daa83d398677e" kindref="member">META_LOG</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">LogGeographicalContext</ref>,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Initialized<sp/>Geographical<sp/>Context<sp/>with<sp/>Ellipsoid<sp/>=<sp/>(Center<sp/>=<sp/>(%s)<sp/>Radii<sp/>=<sp/>(%s))&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>.<ref refid="struct_f_geographical_ellipsoid_1afce61e56ee91483006839844c0720bc1" kindref="member">Center</ref>.ToString(),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>.<ref refid="struct_f_geographical_ellipsoid_1ab1f570622ef69b1ca4d53f52c98826dd" kindref="member">Radii</ref>.ToString());</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UGeographicalContext::IsInitialized()<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">noexcept</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>.<ref refid="struct_f_geographical_ellipsoid_1ab1f570622ef69b1ca4d53f52c98826dd" kindref="member">Radii</ref>.IsZero()<sp/>&amp;&amp;<sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref>.IsValid();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UGeographicalContext::Reset()<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">noexcept</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_geographical_ellipsoid" kindref="compound">FGeographicalEllipsoid</ref>&amp;<sp/><ref refid="class_u_geographical_context_1a4457fc18cec74be255d49c813f8d730e" kindref="member">UGeographicalContext::GetEllipsoid</ref>()<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">noexcept</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/><ref refid="class_u_geographical_context_1a0e6d0e658afb8ef65e065077aac9ea00" kindref="member">UGeographicalContext::CalculateSurfaceNormal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1ae93ed068a9371808af7ef9c2832f1e28" kindref="member">UGeographicalMathLibrary::CalculateSurfaceNormal</ref>(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FQuat</ref><sp/><ref refid="class_u_geographical_context_1ac9b695a48c2803dff2cd693f106e6e3c" kindref="member">UGeographicalContext::CalculateSurfaceNormalRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1a38c2586a05dabd954e096b7b9194f0e0" kindref="member">UGeographicalMathLibrary::CalculateSurfaceNormalRotation</ref>(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FHitResult</ref><sp/><ref refid="class_u_geographical_context_1a567de154765758cc030bc8681664fd8e" kindref="member">UGeographicalContext::LineTraceAlongNormalAxis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref><sp/>CollisionChannel)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1af754ded35037e622447b545ddd96004b" kindref="member">UGeographicalMathLibrary::LineTraceAlongNormalAxis</ref>(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref>.Get(),<sp/><ref refid="class_u_geographical_context_1af3a9dbadb16923fac9967bbe9344cb3e" kindref="member">CollisionChannel</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/>UGeographicalContext::FindCoaxialSurfaceLocation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIgnoreCollisions,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref><sp/>CollisionChannel)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UGeographicalMathLibrary::FindCoaxialSurfaceLocation(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref>.Get(),<sp/><ref refid="class_u_geographical_context_1ae9e13c7e4b3b27e98b683b8227780a0d" kindref="member">bIgnoreCollisions</ref>,<sp/><ref refid="class_u_geographical_context_1af3a9dbadb16923fac9967bbe9344cb3e" kindref="member">CollisionChannel</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="struct_f_ray_ellipsoid_intersections" kindref="compound">FRayEllipsoidIntersections</ref><sp/><ref refid="class_u_geographical_context_1a114c91b5a7daf166ac6c9d67af77ed6b" kindref="member">UGeographicalContext::CalculateRayEllipsoidIntersections</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FRay</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Ray</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bAllowReverseDirection</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1aa40557167141a40ccf4da0e82213ad09" kindref="member">UGeographicalMathLibrary::CalculateRayEllipsoidIntersections</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Ray</ref>,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bAllowReverseDirection</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_context_1a065198470537f742bfcf923ec318bcc9" kindref="member">UGeographicalContext::K2_CalculateRayEllipsoidIntersections</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FRay</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Ray</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Near,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bNearSet</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Far,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bFarSet</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1a2d5e2810d837176b965c9d4b281b44b5" kindref="member">UGeographicalMathLibrary::K2_CalculateRayEllipsoidIntersections</ref>(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Ray</ref>,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/>Near,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bNearSet</ref>,<sp/>Far,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">bFarSet</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UGeographicalContext::CalculateHeightAboveSurface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIgnoreCollisions,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref><sp/>CollisionChannel)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UGeographicalMathLibrary::CalculateHeightAboveSurface(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/><ref refid="class_u_geographical_context_1a8318a49c36085b8c5cee6223dd829b5f" kindref="member">World</ref>.Get(),<sp/><ref refid="class_u_geographical_context_1ae9e13c7e4b3b27e98b683b8227780a0d" kindref="member">bIgnoreCollisions</ref>,<sp/><ref refid="class_u_geographical_context_1af3a9dbadb16923fac9967bbe9344cb3e" kindref="member">CollisionChannel</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/><ref refid="class_u_geographical_context_1a9f4b6d1faa299e7c1819aaa70c618d52" kindref="member">UGeographicalContext::AddConcentricOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DenormalizedOffset</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1a3319099c9f15133a4c7b25ff4c66e377" kindref="member">UGeographicalMathLibrary::AddConcentricOffset</ref>(Target,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">DenormalizedOffset</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref><sp/><ref refid="class_u_geographical_context_1aecd1a3b14928cb60d7a61372b2a59bba" kindref="member">UGeographicalContext::CalculateNorthDirection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref>&amp;<sp/>Origin)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_geographical_math_library_1a192c98ac5c29b3403ed85dbc2e0ed398" kindref="member">UGeographicalMathLibrary::CalculateNorthDirection</ref>(Origin,<sp/><ref refid="class_u_geographical_context_1ac91b48e599129021b46d4dc39bbd8ac3" kindref="member">Ellipsoid</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/GeographicalMath/Source/GeographicalMath/Private/GeographicalContext.cpp"/>
  </compounddef>
</doxygen>
