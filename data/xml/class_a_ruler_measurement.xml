<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_ruler_measurement" kind="class" language="C++" prot="public">
    <compoundname>ARulerMeasurement</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AActor</basecompoundref>
    <includes refid="_ruler_measurement_8h" local="no">RulerMeasurement.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_a_ruler_measurement_1a7fdf224d993d61ea6ab256e9e177001b" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; AActor &gt;</type>
        <definition>TObjectPtr&lt;AActor&gt; ARulerMeasurement::RulerPlacementLocationMarker</definition>
        <argsstring></argsstring>
        <name>RulerPlacementLocationMarker</name>
        <qualifiedname>ARulerMeasurement::RulerPlacementLocationMarker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="62" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a98c7b820f65a9a13240f2e6f2fee32e8" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; AActor &gt;</type>
        <definition>TSubclassOf&lt;AActor&gt; ARulerMeasurement::RulerPlacementLocationMarkerClass</definition>
        <argsstring></argsstring>
        <name>RulerPlacementLocationMarkerClass</name>
        <qualifiedname>ARulerMeasurement::RulerPlacementLocationMarkerClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="65" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a2dfcb1bb5ac57ccc7576c7926a6f83cc" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double ARulerMeasurement::DistanceToleranceForAreaPolygon</definition>
        <argsstring></argsstring>
        <name>DistanceToleranceForAreaPolygon</name>
        <qualifiedname>ARulerMeasurement::DistanceToleranceForAreaPolygon</qualifiedname>
        <initializer>= 1.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="68" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a862a2916b0e21101c53d7df4931a1a11" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double ARulerMeasurement::MinActorPlacementAngleDeviation</definition>
        <argsstring></argsstring>
        <name>MinActorPlacementAngleDeviation</name>
        <qualifiedname>ARulerMeasurement::MinActorPlacementAngleDeviation</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">PI</ref> / 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="71" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a9e9ae0da4a47651d0fd79d57315c8b21" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; AActor &gt;</type>
        <definition>TSubclassOf&lt;AActor&gt; ARulerMeasurement::RulerClass</definition>
        <argsstring></argsstring>
        <name>RulerClass</name>
        <qualifiedname>ARulerMeasurement::RulerClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="74" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a73005ca68989f1ee72c9b0df2d70981b" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref> &gt;</type>
        <definition>TSubclassOf&lt;ARulerController&gt; ARulerMeasurement::RulerControllerClass</definition>
        <argsstring></argsstring>
        <name>RulerControllerClass</name>
        <qualifiedname>ARulerMeasurement::RulerControllerClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="77" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a2a6f6f3a0a4994cf67c50e03130161cf" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_ruler_point" kindref="compound">URulerPoint</ref> * &gt;</type>
        <definition>TArray&lt;URulerPoint*&gt; ARulerMeasurement::RulerPointWidgets</definition>
        <argsstring></argsstring>
        <name>RulerPointWidgets</name>
        <qualifiedname>ARulerMeasurement::RulerPointWidgets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="80" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a64b939f65d5d197bf065030bb1fc65e2" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_lines" kindref="compound">URulerLines</ref> &gt;</type>
        <definition>TSubclassOf&lt;URulerLines&gt; ARulerMeasurement::RulerLinesWidgetClass</definition>
        <argsstring></argsstring>
        <name>RulerLinesWidgetClass</name>
        <qualifiedname>ARulerMeasurement::RulerLinesWidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="83" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1adc0e29c824845d70e7a778ccdb805821" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSet</ref>&lt; <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref> * &gt;</type>
        <definition>TSet&lt;ARulerController*&gt; ARulerMeasurement::RulerControllers</definition>
        <argsstring></argsstring>
        <name>RulerControllers</name>
        <qualifiedname>ARulerMeasurement::RulerControllers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="86" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a046f38ec4249ab09e9c83234a24002dc" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_spline_widget" kindref="compound">URulerSplineWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt;URulerSplineWidget&gt; ARulerMeasurement::SplineWidgetClass</definition>
        <argsstring></argsstring>
        <name>SplineWidgetClass</name>
        <qualifiedname>ARulerMeasurement::SplineWidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="89" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a08d647406b435e88f329a2d1625f1b38" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_popup_widget" kindref="compound">URulerPopupWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt;URulerPopupWidget&gt; ARulerMeasurement::PopupWidgetClass</definition>
        <argsstring></argsstring>
        <name>PopupWidgetClass</name>
        <qualifiedname>ARulerMeasurement::PopupWidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="92" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1adb051c5112f29553656bddd91b4143fc" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_ruler_lines" kindref="compound">URulerLines</ref> &gt;</type>
        <definition>TObjectPtr&lt;URulerLines&gt; ARulerMeasurement::RulerLinesWidget</definition>
        <argsstring></argsstring>
        <name>RulerLinesWidget</name>
        <qualifiedname>ARulerMeasurement::RulerLinesWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="95" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a84074ad2ae765e0de99a653224b2053c" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_ruler_spline_widget" kindref="compound">URulerSplineWidget</ref> &gt;</type>
        <definition>TObjectPtr&lt;URulerSplineWidget&gt; ARulerMeasurement::SplineWidget</definition>
        <argsstring></argsstring>
        <name>SplineWidget</name>
        <qualifiedname>ARulerMeasurement::SplineWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="98" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a2bc24e65edc7d7730d77d926116c7627" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_ruler_popup_widget" kindref="compound">URulerPopupWidget</ref> &gt;</type>
        <definition>TObjectPtr&lt;URulerPopupWidget&gt; ARulerMeasurement::PopupWidget</definition>
        <argsstring></argsstring>
        <name>PopupWidget</name>
        <qualifiedname>ARulerMeasurement::PopupWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="101" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1aa978dab2667d7ae642a294ae5b076063" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FLinearColor</ref></type>
        <definition>FLinearColor ARulerMeasurement::RulerStandardColor</definition>
        <argsstring></argsstring>
        <name>RulerStandardColor</name>
        <qualifiedname>ARulerMeasurement::RulerStandardColor</qualifiedname>
        <initializer>= FColor::FromHex(&quot;FFC149FF&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="104" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a6f4961965d9dea882aec1789b92f803d" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FLinearColor</ref></type>
        <definition>FLinearColor ARulerMeasurement::RulerHighlightColor</definition>
        <argsstring></argsstring>
        <name>RulerHighlightColor</name>
        <qualifiedname>ARulerMeasurement::RulerHighlightColor</qualifiedname>
        <initializer>= FColor::FromHex(&quot;FF2600FF&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="107" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a6544fe804544a13b24655f050a103b67" prot="protected" static="no" mutable="no">
        <type><ref refid="_ruler_measurement_8h_1a54a3f8a15bd895dd7e7e7da5563d6d35" kindref="member">ERulerMode</ref></type>
        <definition>ERulerMode ARulerMeasurement::RulerMode</definition>
        <argsstring></argsstring>
        <name>RulerMode</name>
        <qualifiedname>ARulerMeasurement::RulerMode</qualifiedname>
        <initializer>= <ref refid="_ruler_measurement_8h_1a54a3f8a15bd895dd7e7e7da5563d6d35a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">ERulerMode::None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="110" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1aac41369986de20047871705353151cee" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>FVector ARulerMeasurement::PreviousPoint</definition>
        <argsstring></argsstring>
        <name>PreviousPoint</name>
        <qualifiedname>ARulerMeasurement::PreviousPoint</qualifiedname>
        <initializer>= FVector::ZeroVector</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="113" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a51e6190b7893719fc873f8a87b16f070" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_point" kindref="compound">URulerPoint</ref> &gt;</type>
        <definition>TSubclassOf&lt;URulerPoint&gt; ARulerMeasurement::RulerPointWidgetClass</definition>
        <argsstring></argsstring>
        <name>RulerPointWidgetClass</name>
        <qualifiedname>ARulerMeasurement::RulerPointWidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="116" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a4c46387fdec2a44f5b5b50d550211cbe" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_point_button" kindref="compound">URulerPointButton</ref> &gt;</type>
        <definition>TSubclassOf&lt;URulerPointButton&gt; ARulerMeasurement::RulerPointButtonWidgetClass</definition>
        <argsstring></argsstring>
        <name>RulerPointButtonWidgetClass</name>
        <qualifiedname>ARulerMeasurement::RulerPointButtonWidgetClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="119" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a34de015cc74f72b409f96e71e07ff27b" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::PointViewportTolerance</definition>
        <argsstring></argsstring>
        <name>PointViewportTolerance</name>
        <qualifiedname>ARulerMeasurement::PointViewportTolerance</qualifiedname>
        <initializer>= 10.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="122" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="122" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_ruler_measurement_1aeb381c41fe5c9831222f2adf97a1584c" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FOnRulerModeChanged</ref></type>
        <definition>FOnRulerModeChanged ARulerMeasurement::OnRulerModeChanged</definition>
        <argsstring></argsstring>
        <name>OnRulerModeChanged</name>
        <qualifiedname>ARulerMeasurement::OnRulerModeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="134" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a6ed2ff1802f9ea8dd31a97b46bfd9ac3" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FRulerLengthUpdated</ref></type>
        <definition>FRulerLengthUpdated ARulerMeasurement::RulerLengthUpdated</definition>
        <argsstring></argsstring>
        <name>RulerLengthUpdated</name>
        <qualifiedname>ARulerMeasurement::RulerLengthUpdated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="136" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a9f708abd402a620d562ecbd040aeca1e" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FRulerSaved</ref></type>
        <definition>FRulerSaved ARulerMeasurement::RulerSaved</definition>
        <argsstring></argsstring>
        <name>RulerSaved</name>
        <qualifiedname>ARulerMeasurement::RulerSaved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="138" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a63698391b6680c3f64f6e58b9a9be578" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FCartographicDragEnabled</ref></type>
        <definition>FCartographicDragEnabled ARulerMeasurement::CartographicDragEnabled</definition>
        <argsstring></argsstring>
        <name>CartographicDragEnabled</name>
        <qualifiedname>ARulerMeasurement::CartographicDragEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="140" column="34" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="140" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_ruler_measurement_1a278e47562b9931d44cbbeebc77b75029" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_prompt_ruler_popup_widget" kindref="compound">UPromptRulerPopupWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt;UPromptRulerPopupWidget&gt; ARulerMeasurement::PromptRulerPopupClass</definition>
        <argsstring></argsstring>
        <name>PromptRulerPopupClass</name>
        <qualifiedname>ARulerMeasurement::PromptRulerPopupClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="678" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1ad91195fa359adc148f6a88095e73cba2" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TWeakObjectPtr</ref>&lt; APlayerController &gt;</type>
        <definition>TWeakObjectPtr&lt;APlayerController&gt; ARulerMeasurement::CurrentController</definition>
        <argsstring></argsstring>
        <name>CurrentController</name>
        <qualifiedname>ARulerMeasurement::CurrentController</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="681" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1af166a736c9b3629526b34c60be2cf001" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double ARulerMeasurement::TotalDistance</definition>
        <argsstring></argsstring>
        <name>TotalDistance</name>
        <qualifiedname>ARulerMeasurement::TotalDistance</qualifiedname>
        <initializer>= 0.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="683" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a283de2c8df235ad2fe9f7df5c1d467a7" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double ARulerMeasurement::SplineDistance</definition>
        <argsstring></argsstring>
        <name>SplineDistance</name>
        <qualifiedname>ARulerMeasurement::SplineDistance</qualifiedname>
        <initializer>= 0.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="684" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a3bf5885e1af73500b599cf9f29e991c5" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::StepForSegments</definition>
        <argsstring></argsstring>
        <name>StepForSegments</name>
        <qualifiedname>ARulerMeasurement::StepForSegments</qualifiedname>
        <initializer>= 10000000.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="685" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a38696a34f683aa8df2e5c2915538d285" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::StepForSpline</definition>
        <argsstring></argsstring>
        <name>StepForSpline</name>
        <qualifiedname>ARulerMeasurement::StepForSpline</qualifiedname>
        <initializer>= 15.<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="686" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1aa077d2a4d189170258168e246fb0239b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ARulerMeasurement::bShowArea</definition>
        <argsstring></argsstring>
        <name>bShowArea</name>
        <qualifiedname>ARulerMeasurement::bShowArea</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="687" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a0b575c751b5ee963065f73628f7e393a" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int</ref></type>
        <definition>int ARulerMeasurement::ZOrderRulerPoint</definition>
        <argsstring></argsstring>
        <name>ZOrderRulerPoint</name>
        <qualifiedname>ARulerMeasurement::ZOrderRulerPoint</qualifiedname>
        <initializer>= 400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="688" column="13" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a14eb0457ec1b25807b4942d6376ccbe2" prot="private" static="no" mutable="no">
        <type><ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref></type>
        <definition>FRulerInfo ARulerMeasurement::RulerInfo</definition>
        <argsstring></argsstring>
        <name>RulerInfo</name>
        <qualifiedname>ARulerMeasurement::RulerInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="690" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_ruler_measurement_1a134ff1ce8d1a3d6a86ab8906c712023e" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt;FVector&gt; ARulerMeasurement::RulerPoints</definition>
        <argsstring></argsstring>
        <name>RulerPoints</name>
        <qualifiedname>ARulerMeasurement::RulerPoints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="691" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="691" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_ruler_measurement_1a0c7b27cbc46d4c8c3dc3332ed7635f19" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::IsControllerAvailable</definition>
        <argsstring>() const</argsstring>
        <name>IsControllerAvailable</name>
        <qualifiedname>ARulerMeasurement::IsControllerAvailable</qualifiedname>
        <briefdescription>
<para>Проверяет доступен ли контроллер для текущего идентификатора. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Доступность контроллера. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="41" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1abfb6b4cec6685308cd46041739d5af33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::CreateRulerController</definition>
        <argsstring>(const FRulerInfo &amp;Info, bool ShowRulerArea)</argsstring>
        <name>CreateRulerController</name>
        <qualifiedname>ARulerMeasurement::CreateRulerController</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref> &amp;</type>
          <declname>Info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ShowRulerArea</declname>
        </param>
        <briefdescription>
<para>Создает контроллер линейки по заданной информации. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Info</parametername>
</parameternamelist>
<parameterdescription>
<para>Информация о линейке для создания. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="47" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="37" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a7e516927b48d229d2f849948c9103bdc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::UpdateRuler</definition>
        <argsstring>()</argsstring>
        <name>UpdateRuler</name>
        <qualifiedname>ARulerMeasurement::UpdateRuler</qualifiedname>
        <briefdescription>
<para>Обновляет визуализацию по имеющимся данным. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="53" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="73" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1ac61864045087a54e0155cca57d30dbc4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::RemoveInvalidControllers</definition>
        <argsstring>()</argsstring>
        <name>RemoveInvalidControllers</name>
        <qualifiedname>ARulerMeasurement::RemoveInvalidControllers</qualifiedname>
        <briefdescription>
<para>Убирает все невалидные контроллеры. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="58" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_ruler_measurement_1aad5eef7428424672bbe1ca3dd481281e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ARulerMeasurement::ARulerMeasurement</definition>
        <argsstring>()</argsstring>
        <name>ARulerMeasurement</name>
        <qualifiedname>ARulerMeasurement::ARulerMeasurement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="125" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a45e9bc6dfcb1f24ee00e66797cfbc0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::Tick</definition>
        <argsstring>(float DeltaSeconds) override</argsstring>
        <name>Tick</name>
        <qualifiedname>ARulerMeasurement::Tick</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>DeltaSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="127" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="127" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1acfa6b801544361a3faab21b9d0c25540" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::BeginDestroy</definition>
        <argsstring>() override</argsstring>
        <name>BeginDestroy</name>
        <qualifiedname>ARulerMeasurement::BeginDestroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="129" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a75b023280c0a1c52ce54d32ae76159d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::OnConstruction</definition>
        <argsstring>(const FTransform &amp;Transform) override</argsstring>
        <name>OnConstruction</name>
        <qualifiedname>ARulerMeasurement::OnConstruction</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTransform</ref> &amp;</type>
          <declname>Transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="131" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="141" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a28705d94a24f59446cd8d044c07d8c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::ClearTempRuler</definition>
        <argsstring>()</argsstring>
        <name>ClearTempRuler</name>
        <qualifiedname>ARulerMeasurement::ClearTempRuler</qualifiedname>
        <briefdescription>
<para>Очищает временную линейку. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="163" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="169" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a451415450e357600d85959082c5254a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SetRulerInfo</definition>
        <argsstring>(FRulerInfo NewRulerInfo)</argsstring>
        <name>SetRulerInfo</name>
        <qualifiedname>ARulerMeasurement::SetRulerInfo</qualifiedname>
        <param>
          <type><ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref></type>
          <declname>NewRulerInfo</declname>
        </param>
        <briefdescription>
<para>Устанавливает информацию для линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод обновляет текущую информацию о линейке на основе предоставленного объекта <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewRulerInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект, содержащий новые данные о линейке. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="173" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a9b9bd85d7d0409744e1c6badea0f8388" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ruler_measurement_8h_1a54a3f8a15bd895dd7e7e7da5563d6d35" kindref="member">ERulerMode</ref></type>
        <definition>ERulerMode ARulerMeasurement::GetRulerMode</definition>
        <argsstring>() const</argsstring>
        <name>GetRulerMode</name>
        <qualifiedname>ARulerMeasurement::GetRulerMode</qualifiedname>
        <briefdescription>
<para>Возвращает текущий режим линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предоставляет информацию о текущем режиме работы линейки.</para>
<para><simplesect kind="return"><para>Текущий режим линейки в виде значения перечисления ERulerMode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="182" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1af2d6e1a0eaf52ad227fed3f85253c7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SetRulerMode</definition>
        <argsstring>(ERulerMode NewMode)</argsstring>
        <name>SetRulerMode</name>
        <qualifiedname>ARulerMeasurement::SetRulerMode</qualifiedname>
        <param>
          <type><ref refid="_ruler_measurement_8h_1a54a3f8a15bd895dd7e7e7da5563d6d35" kindref="member">ERulerMode</ref></type>
          <declname>NewMode</declname>
        </param>
        <briefdescription>
<para>Устанавливает режим измерения для линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод изменяет текущий режим измерения линейки на новый и оповещает об этом через соответствующее событие.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Новый режим измерения для линейки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="192" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="196" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a41bc07f20a840cfdfc78bc3222f08f42" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>AActor *</type>
        <definition>AActor * ARulerMeasurement::GetRulerPlacementLocationMarker</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetRulerPlacementLocationMarker</name>
        <qualifiedname>ARulerMeasurement::GetRulerPlacementLocationMarker</qualifiedname>
        <briefdescription>
<para>Получает маркер для размещения линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает объект маркера, определяющий местоположение для размещения линейки.</para>
<para><simplesect kind="return"><para>Объект AActor, представляющий маркер местоположения для линейки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="202" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a8130148765d8f0aed71f0c9f426b91c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>APlayerController *</type>
        <definition>APlayerController * ARulerMeasurement::GetPlayerController</definition>
        <argsstring>() const</argsstring>
        <name>GetPlayerController</name>
        <qualifiedname>ARulerMeasurement::GetPlayerController</qualifiedname>
        <briefdescription>
<para>Возвращает контроллер игрока, связанный с текущим измерением линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод получает объект APlayerController, связанный с миром, в котором выполняется измерение.</para>
<para><simplesect kind="return"><para>Указатель на объект APlayerController, представляющий контроллер игрока. Если контроллер не найден, возвращает nullptr. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="212" column="27" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a0e074ac464f44eee49b2c359a9f3bf30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::CreateRuler</definition>
        <argsstring>(const FString &amp;Guid, bool bCreateRandomGuid, bool bShowRulerArea=false)</argsstring>
        <name>CreateRuler</name>
        <qualifiedname>ARulerMeasurement::CreateRuler</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Guid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCreateRandomGuid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bShowRulerArea</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
<para>Создает линейку с заданными параметрами. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор линейки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bCreateRandomGuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Указывает, должен ли быть сгенерирован случайный уникальный идентификатор. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bShowRulerArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Определяет, должно ли отображаться область линейки. По умолчанию значение false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="222" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="215" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1ab3a161f6c35c8da10a13407c9f33aeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::CreateRulerPoint</definition>
        <argsstring>()</argsstring>
        <name>CreateRulerPoint</name>
        <qualifiedname>ARulerMeasurement::CreateRulerPoint</qualifiedname>
        <briefdescription>
<para>Создает точку для линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предназначен для добавления новой точки на линейке. Реализация выполняется в Blueprint. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="230" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a3af1ee0230f8c78e01833fb5413124dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::CreateRulerPointAtLocation</definition>
        <argsstring>(const FVector &amp;Location, const TOptional&lt; float &gt; &amp;Tolerance=NullOpt)</argsstring>
        <name>CreateRulerPointAtLocation</name>
        <qualifiedname>ARulerMeasurement::CreateRulerPointAtLocation</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>Location</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TOptional</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref> &gt; &amp;</type>
          <declname>Tolerance</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">NullOpt</ref></defval>
        </param>
        <briefdescription>
<para>Создает новую точку линейки в указанном местоположении. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Location</parametername>
</parameternamelist>
<parameterdescription>
<para>Местоположение, в котором создается новая точка линейки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Точность определения близости точек для замыкания полигона. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="237" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="228" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a8bb6573811ab90897b2c9de38533a2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::RulerEnd</definition>
        <argsstring>()</argsstring>
        <name>RulerEnd</name>
        <qualifiedname>ARulerMeasurement::RulerEnd</qualifiedname>
        <briefdescription>
<para>Завершает процесс работы с линейкой. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается для обозначения окончания измерений с помощью линейки. Может быть реализован в Blueprint для выполнения дополнительных действий. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="245" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="279" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a4071cb06f0671648f3b4be2ef98ccd4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SaveCurrentRuler</definition>
        <argsstring>()</argsstring>
        <name>SaveCurrentRuler</name>
        <qualifiedname>ARulerMeasurement::SaveCurrentRuler</qualifiedname>
        <briefdescription>
<para>Сохраняет состояние текущей линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предназначен для сохранения текущей информации о линейке. Реализация должна быть предоставлена на стороне Blueprints. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="254" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1aed5be2f82dd310c0393ae16bbffda2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::UpdateRulerPlacementLocationSpline</definition>
        <argsstring>()</argsstring>
        <name>UpdateRulerPlacementLocationSpline</name>
        <qualifiedname>ARulerMeasurement::UpdateRulerPlacementLocationSpline</qualifiedname>
        <briefdescription>
<para>Обновляет расположение линейки на основе сплайна. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается для обновления позиции линейки, связанной со сплайном, предоставляя возможность реализации в Blueprints. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="263" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="294" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a058781e5db55700cecb3695c3b03ab57" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::UpdateRulerPlacementLocationMarker</definition>
        <argsstring>(bool bVisible, double DistanceTolerance=10) noexcept</argsstring>
        <name>UpdateRulerPlacementLocationMarker</name>
        <qualifiedname>ARulerMeasurement::UpdateRulerPlacementLocationMarker</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bVisible</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
          <declname>DistanceTolerance</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Обновляет видимость и позицию маркера места размещения линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Корректирует видимость маркера и обновляет его позицию и ориентацию на основе проекции с экрана в мир с учетом заданных допусков.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bVisible</parametername>
</parameternamelist>
<parameterdescription>
<para>Определяет, должен ли маркер быть видимым (true) или скрытым (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DistanceTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Максимально допустимое отклонение расстояния для обновления местоположения маркера. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="274" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="320" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a67edc4aa607a65c1ff325cdbc67ada50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &gt;</type>
        <definition>TArray&lt; FVector2D &gt; ARulerMeasurement::GeneratePointsBetweenVectors2D</definition>
        <argsstring>(const TArray&lt; FVector2D &gt; &amp;Points, float Step)</argsstring>
        <name>GeneratePointsBetweenVectors2D</name>
        <qualifiedname>ARulerMeasurement::GeneratePointsBetweenVectors2D</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &gt; &amp;</type>
          <declname>Points</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Step</declname>
        </param>
        <briefdescription>
<para>Генерирует точки между заданными векторами в двумерном пространстве. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает массив точек между последовательными векторами из входного массива, основываясь на заданном шаге. Дополнительные точки создаются вдоль линии, соединяющей каждый вектор, с учетом длины шага.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Points</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив векторов (FVector2D), для которых требуется генерировать промежуточные точки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Step</parametername>
</parameternamelist>
<parameterdescription>
<para>Расстояние между сгенерированными точками. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив (TArray&lt;FVector2D&gt;) сгенерированных точек, включая конечные точки исходного массива. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="287" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="382" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a9025d266a9a0559489514a1afae7314b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref> &amp;</type>
        <definition>const FRulerInfo &amp; ARulerMeasurement::GetCurrentInfo</definition>
        <argsstring>() const UE_LIFETIMEBOUND</argsstring>
        <name>GetCurrentInfo</name>
        <qualifiedname>ARulerMeasurement::GetCurrentInfo</qualifiedname>
        <briefdescription>
<para>Возвращает информацию о создаваемой линейке. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Информация о создаваемой линейке. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="293" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1ac7c288fe8eb3a43508255c2fca1c8419" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::HighlightRuler</definition>
        <argsstring>(ARulerController *RulerController) const</argsstring>
        <name>HighlightRuler</name>
        <qualifiedname>ARulerMeasurement::HighlightRuler</qualifiedname>
        <param>
          <type><ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref> *</type>
          <declname>RulerController</declname>
        </param>
        <briefdescription>
<para>Выделяет линейку другим цветом. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RulerController</parametername>
</parameternamelist>
<parameterdescription>
<para>Контроллер, владеющий подсвечиваемой линейкой. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="299" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="406" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a4bc531ab8cceb8df2b3773ab18581859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::CanCreatePolygon</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Vertices, float DistanceTolerance)</argsstring>
        <name>CanCreatePolygon</name>
        <qualifiedname>ARulerMeasurement::CanCreatePolygon</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Vertices</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>DistanceTolerance</declname>
        </param>
        <briefdescription>
<para>Проверяет возможность создания многоугольника. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод определяет, можно ли создать многоугольник на основе заданных вершин и предела допустимого отклонения расстояния.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив вершин, определяющих предполагаемый многоугольник. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DistanceTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Допустимое отклонение расстояния между первой и последней вершинами для замыкания многоугольника. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, если можно создать многоугольник; false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="325" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1ad9af17924d28bec0f363f8160233ddf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::CalculatePolygonArea</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Vertices, float DistanceTolerance)</argsstring>
        <name>CalculatePolygonArea</name>
        <qualifiedname>ARulerMeasurement::CalculatePolygonArea</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Vertices</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>DistanceTolerance</declname>
        </param>
        <briefdescription>
<para>Вычисляет площадь многоугольника, заданного набором вершин. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод определяет площадь многоугольника с заданными вершинами, обеспечивая возможность создания многоугольника на основе указанного допуска расстояния. Результат вычисляется в квадратных метрах.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив структур FVector, представляющих вершины многоугольника. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DistanceTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Допуск расстояния, используемый для проверки возможности создания многоугольника. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Вычисленная площадь многоугольника в квадратных метрах. Возвращает 0.0f, если многоугольник создать невозможно. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="338" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="445" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a3ea5d33c0c79ace3907db19c4db271d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref> &gt;</type>
        <definition>TArray&lt; FRulerInfo &gt; ARulerMeasurement::GetRulersInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetRulersInfo</name>
        <qualifiedname>ARulerMeasurement::GetRulersInfo</qualifiedname>
        <briefdescription>
<para>Получает информацию о всех линейках. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает массив объектов <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref>, содержащий информацию о каждой линейке, связанной с текущими контроллерами линейки.</para>
<para><simplesect kind="return"><para>Массив объектов <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref>, содержащий данные о каждой линейке. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="349" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="484" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1acd573f06ddd0b645c33fdc71ae524abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::DestroyRuler</definition>
        <argsstring>(const FString &amp;Guid)</argsstring>
        <name>DestroyRuler</name>
        <qualifiedname>ARulerMeasurement::DestroyRuler</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Guid</declname>
        </param>
        <briefdescription>
<para>Уничтожает актора линейки с указанным GUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод уничтожает актора линейки с предоставленным GUID. Актор линейки идентифицируется по его уникальному GUID. Если актор линейки с указанным GUID не существует, действие не выполняется.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор (GUID) актора линейки для уничтожения. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="360" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="516" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a1475e232498d9a7ab19d6c6912a4e0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::DestroyAllRulers</definition>
        <argsstring>()</argsstring>
        <name>DestroyAllRulers</name>
        <qualifiedname>ARulerMeasurement::DestroyAllRulers</qualifiedname>
        <briefdescription>
<para>Уничтожает все существующие линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет все объекты линейки, управляемые контроллерами, вызывая их метод уничтожения. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="368" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="525" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a94324117648b9fd1a250ecd89653dc20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref> *</type>
        <definition>ARulerController * ARulerMeasurement::GetRulerControllerByGuid</definition>
        <argsstring>(const FString &amp;Guid) const</argsstring>
        <name>GetRulerControllerByGuid</name>
        <qualifiedname>ARulerMeasurement::GetRulerControllerByGuid</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>Guid</declname>
        </param>
        <briefdescription>
<para>Возвращает контроллер линейки, связанный с указанным GUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод ищет среди всех доступных контроллеров линейки и возвращает тот, который соответствует предоставленному GUID. Если подходящий контроллер не найден, возвращает nullptr.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор контроллера линейки, который необходимо получить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Указатель на <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref>, соответствующий предоставленному GUID, или nullptr, если совпадений не найдено. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="380" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="504" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a89fad99043f30579d29b826c9b4a0fa6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSet</ref>&lt; <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref> * &gt; &amp;</type>
        <definition>const TSet&lt; ARulerController * &gt; &amp; ARulerMeasurement::GetAllRulerControllers</definition>
        <argsstring>() const</argsstring>
        <name>GetAllRulerControllers</name>
        <qualifiedname>ARulerMeasurement::GetAllRulerControllers</qualifiedname>
        <briefdescription>
<para>Возвращает все экземпляры <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref>, присутствующие в текущем мире. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод просматривает текущий игровой мир и собирает ссылки на все активные объекты <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref>. Полезен для доступа или управления несколькими контроллерами линейки одновременно.</para>
<para><simplesect kind="return"><para>Массив указателей <ref refid="class_a_ruler_controller" kindref="compound">ARulerController</ref>, представляющий все контроллеры линейки, найденные в мире. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="391" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1aab1eaa47ec33e59373a2f3ef5e1bcbfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::VisualizeRulerByInfo</definition>
        <argsstring>(const FRulerInfo &amp;InRulerInfo)</argsstring>
        <name>VisualizeRulerByInfo</name>
        <qualifiedname>ARulerMeasurement::VisualizeRulerByInfo</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref> &amp;</type>
          <declname>InRulerInfo</declname>
        </param>
        <briefdescription>
<para>Визуализирует линейки на основе предоставленной информации. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод позволяет создавать визуальное представление линейки, используя данные из объекта <ref refid="struct_f_ruler_info" kindref="compound">FRulerInfo</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InRulerInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект, содержащий информацию для визуализации линейки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="412" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="554" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1aaacdd9257e0564bf29204eac6b0d8ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::ExitRuler</definition>
        <argsstring>()</argsstring>
        <name>ExitRuler</name>
        <qualifiedname>ARulerMeasurement::ExitRuler</qualifiedname>
        <briefdescription>
<para>Завершает работу с линейкой. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод завершает текущее использование линейки, сохраняет данные, удаляет существующие линейки и переключает режим на состояние без линейки. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="421" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="565" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1aad1c808f6805ec41a235fb97bf2f8cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SetRulerLengthUnitType</definition>
        <argsstring>(const FString &amp;RulerGuid, ERulerUnitType LengthUnitType)</argsstring>
        <name>SetRulerLengthUnitType</name>
        <qualifiedname>ARulerMeasurement::SetRulerLengthUnitType</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>RulerGuid</declname>
        </param>
        <param>
          <type><ref refid="_ruler_controller_8h_1a99c2d727ea9697282d6ebfe9fb0d909e" kindref="member">ERulerUnitType</ref></type>
          <declname>LengthUnitType</declname>
        </param>
        <briefdescription>
<para>Устанавливает тип единицы измерения длины для линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод изменяет тип единицы измерения длины для линейки, определяемой уникальным идентификатором.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RulerGuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор линейки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LengthUnitType</parametername>
</parameternamelist>
<parameterdescription>
<para>Новый тип единицы измерения длины. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="432" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="572" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a1272a067686ff6dcdcc7349fe33a2ae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SetRulerAreaUnitType</definition>
        <argsstring>(const FString &amp;RulerGuid, ERulerUnitType AreaUnitType) const</argsstring>
        <name>SetRulerAreaUnitType</name>
        <qualifiedname>ARulerMeasurement::SetRulerAreaUnitType</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>RulerGuid</declname>
        </param>
        <param>
          <type><ref refid="_ruler_controller_8h_1a99c2d727ea9697282d6ebfe9fb0d909e" kindref="member">ERulerUnitType</ref></type>
          <declname>AreaUnitType</declname>
        </param>
        <briefdescription>
<para>Устанавливает тип единиц измерения площади для линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод обновляет тип единиц измерения площади, используемых линейкой, идентифицированной по заданному GUID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RulerGuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор линейки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>AreaUnitType</parametername>
</parameternamelist>
<parameterdescription>
<para>Единица измерения площади. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="443" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="580" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1abfe9906d2e11adbe0dc0f0be384bdd65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::GetCameraLocation</definition>
        <argsstring>(FVector &amp;OutCameraLocation) const</argsstring>
        <name>GetCameraLocation</name>
        <qualifiedname>ARulerMeasurement::GetCameraLocation</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>OutCameraLocation</declname>
        </param>
        <briefdescription>
<para>Получает текущую позицию камеры. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод извлекает расположение камеры и записывает его в переданный в аргумент объект FVector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutCameraLocation</parametername>
</parameternamelist>
<parameterdescription>
<para>Ссылка на объект FVector, в который будет записано текущее расположение камеры. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Логическое значение, указывающее успешность операции. Возвращает true, если позиция камеры успешно извлечена; иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="477" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="613" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a9949f506ca0bc08aac1421e9d109bf80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; ARulerMeasurement::AdjustPointsRelativeToEllipsoid</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;PointsBetweenVectors3D, const TArray&lt; FVector &gt; &amp;OriginalPoints, bool bGaps) const</argsstring>
        <name>AdjustPointsRelativeToEllipsoid</name>
        <qualifiedname>ARulerMeasurement::AdjustPointsRelativeToEllipsoid</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>PointsBetweenVectors3D</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>OriginalPoints</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bGaps</declname>
        </param>
        <briefdescription>
<para>Корректирует точки для выравнивания относительно указанного эллипсоида. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод изменяет позиции заданных 3D точек, чтобы они соответствовали заданному эллипсоиду, с учетом определенных зазоров и смещений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PointsBetweenVectors3D</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив 3D точек, представляющих промежуточные точки между сегментами векторов. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OriginalPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив исходных 3D точек, определяющих сегменты для корректировки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bGaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Определяет, следует ли учитывать зазоры между скорректированными сегментами. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Новый массив 3D точек, скорректированных относительно эллипсоида. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="522" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="696" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a18b20a93114bbbbc071c59cf4949a9d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; ARulerMeasurement::GeneratePointsAndRelativeToEllipsoid</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Points, float Step, bool Gaps)</argsstring>
        <name>GeneratePointsAndRelativeToEllipsoid</name>
        <qualifiedname>ARulerMeasurement::GeneratePointsAndRelativeToEllipsoid</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Points</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Step</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>Gaps</declname>
        </param>
        <briefdescription>
<para>Генерирует точки и корректирует их относительно эллипсоида. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает промежуточные точки между заданными векторами, а затем корректирует их расположение относительно эллипсоида с учетом заданных параметров.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Points</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив векторов, определяющих исходные точки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Step</parametername>
</parameternamelist>
<parameterdescription>
<para>Шаг, определяющий интервал между сгенерированными точками. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Gaps</parametername>
</parameternamelist>
<parameterdescription>
<para>Флаг, указывающий, следует ли учитывать пропуски в обработке точек.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Возвращает массив скорректированных относительно эллипсоида точек. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="549" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="781" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1af47ded054c806b8741e0ab514e6f808f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::GetStepForSegments</definition>
        <argsstring>() const</argsstring>
        <name>GetStepForSegments</name>
        <qualifiedname>ARulerMeasurement::GetStepForSegments</qualifiedname>
        <briefdescription>
<para>Возвращает шаг для сегментов. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предоставляет текущее значение шага, используемого для сегментирования в объекте <ref refid="class_a_ruler_measurement" kindref="compound">ARulerMeasurement</ref>.</para>
<para><simplesect kind="return"><para>Значение шага для сегментов. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="586" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="867" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a628844516ce59787b0a141311f5f9b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_popup_widget" kindref="compound">URulerPopupWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt; URulerPopupWidget &gt; ARulerMeasurement::GetPopupWidgetClass</definition>
        <argsstring>()</argsstring>
        <name>GetPopupWidgetClass</name>
        <qualifiedname>ARulerMeasurement::GetPopupWidgetClass</qualifiedname>
        <briefdescription>
<para>Возвращает класс виджета всплывающего окна линейки. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Класс виджета всплывающего окна типа TSubclassOf&lt;URulerPopupWidget&gt;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="606" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="883" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a881efac492b6ea5a097991d96725f25c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_prompt_ruler_popup_widget" kindref="compound">UPromptRulerPopupWidget</ref> &gt;</type>
        <definition>TSubclassOf&lt; UPromptRulerPopupWidget &gt; ARulerMeasurement::GetPromptRulerPopupClass</definition>
        <argsstring>() const</argsstring>
        <name>GetPromptRulerPopupClass</name>
        <qualifiedname>ARulerMeasurement::GetPromptRulerPopupClass</qualifiedname>
        <briefdescription>
<para>Возвращает класс всплывающего окна для временной линейки. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Класс всплывающего окна временной линейки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="613" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="888" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a33f46b8f20e56eb5fe783473e8b0c3d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_ruler_point_button" kindref="compound">URulerPointButton</ref> &gt;</type>
        <definition>TSubclassOf&lt; URulerPointButton &gt; ARulerMeasurement::GetRulerPointButtonWidgetClass</definition>
        <argsstring>() const</argsstring>
        <name>GetRulerPointButtonWidgetClass</name>
        <qualifiedname>ARulerMeasurement::GetRulerPointButtonWidgetClass</qualifiedname>
        <briefdescription>
<para>Возвращает класс для виджета кнопки на точке линейки. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Класс для виджета кнопки на точке линейки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="620" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="893" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a32ad9d963fdffe0ee49ef59d5fa6193f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::AreVectorsCloseOnViewport</definition>
        <argsstring>(const FVector &amp;FirstVector, const FVector &amp;SecondVector, float DistanceTolerance) const</argsstring>
        <name>AreVectorsCloseOnViewport</name>
        <qualifiedname>ARulerMeasurement::AreVectorsCloseOnViewport</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>FirstVector</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>SecondVector</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>DistanceTolerance</declname>
        </param>
        <briefdescription>
<para>Проверяет близость двух векторов на экране с учётом заданного допуска по расстоянию. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта функция вычисляет экранные позиции двух 3D-векторов, проецирует их на 2D-область просмотра и определяет, находится ли расстояние между ними в пределах заданного допуска.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FirstVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Первый 3D-вектор для сравнения. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SecondVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Второй 3D-вектор для сравнения. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DistanceTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Максимально допустимое расстояние между векторами в экранном пространстве. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, если расстояние между векторами в экранном пространстве меньше допуска, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="633" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="898" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a5979441bf61fa6576e93fec0f70e3a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_u_ruler_point" kindref="compound">URulerPoint</ref> *</type>
        <definition>URulerPoint * ARulerMeasurement::CreateRulerPointWidget</definition>
        <argsstring>(const FVector &amp;Location)</argsstring>
        <name>CreateRulerPointWidget</name>
        <qualifiedname>ARulerMeasurement::CreateRulerPointWidget</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>Location</declname>
        </param>
        <briefdescription>
<para>Создает и инициализирует виджет точки линейки в указанном месте. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает новый виджет точки линейки, добавляет его в область просмотра, и устанавливает его родительскую позицию в соответствии с заданными координатами. Если создать виджет не удается, возвращается nullptr.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Location</parametername>
</parameternamelist>
<parameterdescription>
<para>Позиция в мире, где будет создан виджет точки линейки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Указатель на созданный виджет <ref refid="class_u_ruler_point" kindref="compound">URulerPoint</ref>, или nullptr, если создание виджета не удалось. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="645" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="914" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a2d1ba5a26e38b19834fa5525ad9c5115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::LineTraceFromPlayerScreen</definition>
        <argsstring>(const APlayerController *PC, FHitResult &amp;OutHitResult, const FVector2D &amp;ScreenLocation, ECollisionChannel CollisionChannel, double TraceDistance)</argsstring>
        <name>LineTraceFromPlayerScreen</name>
        <qualifiedname>ARulerMeasurement::LineTraceFromPlayerScreen</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> APlayerController *</type>
          <declname>PC</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FHitResult</ref> &amp;</type>
          <declname>OutHitResult</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &amp;</type>
          <declname>ScreenLocation</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref></type>
          <declname>CollisionChannel</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
          <declname>TraceDistance</declname>
        </param>
        <briefdescription>
<para>Создает и инициализирует виджет точки линейки в указанном месте. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает новый виджет точки линейки, добавляет его в область просмотра и устанавливает его родительскую позицию по заданным координатам. Если виджет не может быть создан, возвращается nullptr.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Location</parametername>
</parameternamelist>
<parameterdescription>
<para>Позиция в мире, где будет создан виджет точки линейки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Указатель на созданный виджет <ref refid="class_u_ruler_point" kindref="compound">URulerPoint</ref>, или nullptr, если создание виджета не удалось. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="658" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="935" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a8db5021f38c25c1bf7f2f7e676fe3ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ARulerMeasurement::SetController</definition>
        <argsstring>(APlayerController *Controller)</argsstring>
        <name>SetController</name>
        <qualifiedname>ARulerMeasurement::SetController</qualifiedname>
        <param>
          <type>APlayerController *</type>
          <declname>Controller</declname>
        </param>
        <briefdescription>
<para>Выставляет контроллер игрока для </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Controller</parametername>
</parameternamelist>
<parameterdescription>
<para>Текущий контроллер игрока. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="668" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="947" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a2af15a697843536011792921cfb92e95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double ARulerMeasurement::GetDistanceToleranceForAreaPolygon</definition>
        <argsstring>() const</argsstring>
        <name>GetDistanceToleranceForAreaPolygon</name>
        <qualifiedname>ARulerMeasurement::GetDistanceToleranceForAreaPolygon</qualifiedname>
        <briefdescription>
<para>Возвращает допуск расстояния для полигона области. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Допуск расстояния для полигона области. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="674" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_a_ruler_measurement_1a43af3b203c3db73c87092c7890837386" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; ARulerMeasurement::CreateRulerPolygon</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Input)</argsstring>
        <name>CreateRulerPolygon</name>
        <qualifiedname>ARulerMeasurement::CreateRulerPolygon</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Input</declname>
        </param>
        <briefdescription>
<para>Создает полигон по набору точек. Нужна для корректировки точности точек, если первая и последняя точки во входных данных не совпадают. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Input</parametername>
</parameternamelist>
<parameterdescription>
<para>Набор точек для создания полигона. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Набор точек, составляющих полигон. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="149" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="57" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a4b694af9517003a6ce781e93961e8c6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::RoundFloat</definition>
        <argsstring>(float Value)</argsstring>
        <name>RoundFloat</name>
        <qualifiedname>ARulerMeasurement::RoundFloat</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Округляет число с плавающей точкой до первого знака. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>Входное значение. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Округленное значение. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="157" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1abbde8b1d425f7a8a6e53015c8ac40066" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; ARulerMeasurement::GeneratePointsBetweenVectors3D</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;InputPoints, float Step)</argsstring>
        <name>GeneratePointsBetweenVectors3D</name>
        <qualifiedname>ARulerMeasurement::GeneratePointsBetweenVectors3D</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>InputPoints</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Step</declname>
        </param>
        <briefdescription>
<para>Генерирует дополнительные точки между векторами в 3D-пространстве. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод создает равномерно распределенные точки между соседними векторами, основываясь на заданном шаге. Если входной массив содержит менее двух элементов или шаг меньше либо равен нулю, метод возвращает входной массив без изменений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InputPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив исходных векторов, между которыми необходимо дополнить точки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Step</parametername>
</parameternamelist>
<parameterdescription>
<para>Шаг для генерации точек. Должен быть положительным. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Новый массив векторов, содержащий исходные точки и сгенерированные между ними. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="313" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="419" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a1395061b37c69038535620eed15414f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>FVector ARulerMeasurement::CalculateCenterPoint</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Points)</argsstring>
        <name>CalculateCenterPoint</name>
        <qualifiedname>ARulerMeasurement::CalculateCenterPoint</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Points</declname>
        </param>
        <briefdescription>
<para>Рассчитывает центральную точку полигона на основе его вершин. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает массив вершин, представляющих полигон, и вычисляет центральную точку полигона. Если массив пуст, метод возвращает FVector::ZeroVector.</para>
<para><simplesect kind="return"><para>Расчитанная центральная точка полигона. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="402" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="537" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a22b03bb690c4bd391dfd47261f305c45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ruler_controller_8h_1a99c2d727ea9697282d6ebfe9fb0d909e" kindref="member">ERulerUnitType</ref></type>
        <definition>ERulerUnitType ARulerMeasurement::FindRulerLengthUnitType</definition>
        <argsstring>(const FString &amp;LengthUnitType)</argsstring>
        <name>FindRulerLengthUnitType</name>
        <qualifiedname>ARulerMeasurement::FindRulerLengthUnitType</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>LengthUnitType</declname>
        </param>
        <briefdescription>
<para>Определяет тип единицы измерения длины линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает соответствующий тип единицы измерения длины на основе входной строки. Если указанный тип не найден, используется значение по умолчанию - Meter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LengthUnitType</parametername>
</parameternamelist>
<parameterdescription>
<para>Строковое представление типа единицы измерения длины (например, &quot;meter&quot;, &quot;kilometer&quot;). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Тип единицы измерения длины, соответствующий входной строке. Если входная строка не соответствует ни одному типу, возвращается Meter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="455" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="588" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1ae992822647c694c1e8258db9a253f5dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ruler_controller_8h_1a99c2d727ea9697282d6ebfe9fb0d909e" kindref="member">ERulerUnitType</ref></type>
        <definition>ERulerUnitType ARulerMeasurement::FindRulerAreaUnitType</definition>
        <argsstring>(const FString &amp;AreaUnitType)</argsstring>
        <name>FindRulerAreaUnitType</name>
        <qualifiedname>ARulerMeasurement::FindRulerAreaUnitType</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>AreaUnitType</declname>
        </param>
        <briefdescription>
<para>Определяет тип единицы измерения площади линейки. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает соответствующий тип измерения площади линейки на основе предоставленной строки. Если строка не соответствует известным типам, возвращается значение по умолчанию (SquareMeter).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>AreaUnitType</parametername>
</parameternamelist>
<parameterdescription>
<para>Название типа единицы измерения площади в виде строки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Значение типа ERulerUnitType, соответствующее указанной строке. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="466" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="599" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a6c861e0212eee5ec1ac33c13b4a06f23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString ARulerMeasurement::FormatUnitsWithSpaces</definition>
        <argsstring>(float Number)</argsstring>
        <name>FormatUnitsWithSpaces</name>
        <qualifiedname>ARulerMeasurement::FormatUnitsWithSpaces</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Number</declname>
        </param>
        <briefdescription>
<para>Форматирует число с пробелами по заданным параметрам. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод конвертирует число в строку, применяя форматирование, которое включает в себя использование пробелов в качестве разделителей группы разрядов и замену разделителя десятичной части.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>Число, которое необходимо отформатировать. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Отформатированное представление числа в виде строки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="489" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="624" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a3751fc93da1fae98b6e3dac134ba395d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ARulerMeasurement::ProjectWorldToScreenBidirectional</definition>
        <argsstring>(const APlayerController *PlayerController, const FVector &amp;WorldPosition, FVector2D &amp;ScreenPosition, bool &amp;bTargetBehindCamera, bool bPlayerViewportRelative)</argsstring>
        <name>ProjectWorldToScreenBidirectional</name>
        <qualifiedname>ARulerMeasurement::ProjectWorldToScreenBidirectional</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> APlayerController *</type>
          <declname>PlayerController</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>WorldPosition</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &amp;</type>
          <declname>ScreenPosition</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>bTargetBehindCamera</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bPlayerViewportRelative</declname>
        </param>
        <briefdescription>
<para>Проецирует мировую позицию на экранное пространство с учётом видимости за камерой. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод преобразует мировую позицию в экранные координаты и определяет, видим ли объект из-за камеры.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PlayerController</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на контроллер игрока, используемый для получения информации о виду. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WorldPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Трёхмерная позиция в мировом пространстве, которую нужно преобразовать. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ScreenPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>Двухмерный вектор для записи результирующих экранных координат. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bTargetBehindCamera</parametername>
</parameternamelist>
<parameterdescription>
<para>Булево значение, определяющее, находится ли цель за камерой. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bPlayerViewportRelative</parametername>
</parameternamelist>
<parameterdescription>
<para>Определяет, должны ли координаты быть относительно вьюпорта игрока. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Возвращает true, если преобразование выполнено успешно, false в случае ошибки. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="504" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="638" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a41a01235d96bf9254bf1236feb2bea91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>FVector ARulerMeasurement::ProjectPointOntoEllipsoid</definition>
        <argsstring>(const FVector &amp;Point, const FGeographicalEllipsoid &amp;Ellipsoid)</argsstring>
        <name>ProjectPointOntoEllipsoid</name>
        <qualifiedname>ARulerMeasurement::ProjectPointOntoEllipsoid</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>Point</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_geographical_ellipsoid" kindref="compound">FGeographicalEllipsoid</ref> &amp;</type>
          <declname>Ellipsoid</declname>
        </param>
        <briefdescription>
<para>Проецирует точку на поверхность эллипсоида. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вычисляет ближайшую точку на поверхности географического эллипсоида, соответствующую заданной точке.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка в пространстве, которую необходимо спроецировать на эллипсоид. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ellipsoid</parametername>
</parameternamelist>
<parameterdescription>
<para>Географический эллипсоид, на который выполняется проекция. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Точка на поверхности эллипсоида, ближайшая к указанной точке. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="534" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="772" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a0835831e435fc5b177d301d77edb2d51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &gt;</type>
        <definition>TArray&lt; FVector2D &gt; ARulerMeasurement::GenerateFillLines</definition>
        <argsstring>(const TArray&lt; FVector2D &gt; &amp;PolygonPoints, float Step)</argsstring>
        <name>GenerateFillLines</name>
        <qualifiedname>ARulerMeasurement::GenerateFillLines</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &gt; &amp;</type>
          <declname>PolygonPoints</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Step</declname>
        </param>
        <briefdescription>
<para>Генерирует линии заполнения внутри заданного полигона. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод создает массив точек, представляющих горизонтальные линии заполнения внутри границ переданного полигона. Линии располагаются с определенным шагом по оси Y.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PolygonPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив точек, представляющих вершины полигона. Полигон должен быть замкнутым. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Step</parametername>
</parameternamelist>
<parameterdescription>
<para>Шаг между горизонтальными линиями заполнения.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Возвращает массив точек, представляющих линии заполнения в пределах полигона. Если полигон содержит меньше трех точек, возвращается пустой массив. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="565" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="786" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a5c071d819cb54e491eb8bda3fbc49b40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float ARulerMeasurement::CalculateTotalDistance</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;Points)</argsstring>
        <name>CalculateTotalDistance</name>
        <qualifiedname>ARulerMeasurement::CalculateTotalDistance</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>Points</declname>
        </param>
        <briefdescription>
<para>Вычисляет общую дистанцию между точками. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод суммирует расстояния между последовательными точками в заданном массиве.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Points</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив точек (FVector), которые используются для расчета расстояния. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Общая дистанция между точками, представленная в виде числа с плавающей запятой. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="576" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="845" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="class_a_ruler_measurement_1a2d8658383dd97e26ee7a3e79eb57f59c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref></type>
        <definition>FVector2D ARulerMeasurement::OffsetVectorByStep</definition>
        <argsstring>(const FVector2D &amp;InputVector, float Step)</argsstring>
        <name>OffsetVectorByStep</name>
        <qualifiedname>ARulerMeasurement::OffsetVectorByStep</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &amp;</type>
          <declname>InputVector</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>Step</declname>
        </param>
        <briefdescription>
<para>Смещает вектор на заданный шаг в направлении его нормализованной величины. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вычисляет направление входного вектора, нормализует его и смещает на заданный шаг. Если входной вектор близок к нулевому, он возвращается без изменений.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InputVector</parametername>
</parameternamelist>
<parameterdescription>
<para>Входной вектор, который будет смещен. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Step</parametername>
</parameternamelist>
<parameterdescription>
<para>Величина шага, на которую необходимо сместить вектор. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Новый вектор, смещенный на заданный шаг. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="599" column="26" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Private/RulerMeasurement.cpp" bodystart="872" bodyend="881"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="1">
        <label>ARulerMeasurement</label>
        <link refid="class_a_ruler_measurement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="1">
        <label>ARulerMeasurement</label>
        <link refid="class_a_ruler_measurement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>RulerInfo</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>FRulerInfo</label>
        <link refid="struct_f_ruler_info"/>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" line="33" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/MetaMeasurement/Source/MetaMeasurement/Public/RulerMeasurement.h" bodystart="34" bodyend="692"/>
    <listofallmembers>
      <member refid="class_a_ruler_measurement_1a9949f506ca0bc08aac1421e9d109bf80" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>AdjustPointsRelativeToEllipsoid</name></member>
      <member refid="class_a_ruler_measurement_1a32ad9d963fdffe0ee49ef59d5fa6193f" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>AreVectorsCloseOnViewport</name></member>
      <member refid="class_a_ruler_measurement_1aad5eef7428424672bbe1ca3dd481281e" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ARulerMeasurement</name></member>
      <member refid="class_a_ruler_measurement_1acfa6b801544361a3faab21b9d0c25540" prot="public" virt="virtual"><scope>ARulerMeasurement</scope><name>BeginDestroy</name></member>
      <member refid="class_a_ruler_measurement_1aa077d2a4d189170258168e246fb0239b" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>bShowArea</name></member>
      <member refid="class_a_ruler_measurement_1a1395061b37c69038535620eed15414f6" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CalculateCenterPoint</name></member>
      <member refid="class_a_ruler_measurement_1ad9af17924d28bec0f363f8160233ddf4" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CalculatePolygonArea</name></member>
      <member refid="class_a_ruler_measurement_1a5c071d819cb54e491eb8bda3fbc49b40" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CalculateTotalDistance</name></member>
      <member refid="class_a_ruler_measurement_1a4bc531ab8cceb8df2b3773ab18581859" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CanCreatePolygon</name></member>
      <member refid="class_a_ruler_measurement_1a63698391b6680c3f64f6e58b9a9be578" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CartographicDragEnabled</name></member>
      <member refid="class_a_ruler_measurement_1a28705d94a24f59446cd8d044c07d8c96" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ClearTempRuler</name></member>
      <member refid="class_a_ruler_measurement_1a0e074ac464f44eee49b2c359a9f3bf30" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRuler</name></member>
      <member refid="class_a_ruler_measurement_1abfb6b4cec6685308cd46041739d5af33" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRulerController</name></member>
      <member refid="class_a_ruler_measurement_1ab3a161f6c35c8da10a13407c9f33aeb1" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRulerPoint</name></member>
      <member refid="class_a_ruler_measurement_1a3af1ee0230f8c78e01833fb5413124dc" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRulerPointAtLocation</name></member>
      <member refid="class_a_ruler_measurement_1a5979441bf61fa6576e93fec0f70e3a0a" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRulerPointWidget</name></member>
      <member refid="class_a_ruler_measurement_1a43af3b203c3db73c87092c7890837386" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CreateRulerPolygon</name></member>
      <member refid="class_a_ruler_measurement_1ad91195fa359adc148f6a88095e73cba2" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>CurrentController</name></member>
      <member refid="class_a_ruler_measurement_1a1475e232498d9a7ab19d6c6912a4e0ae" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>DestroyAllRulers</name></member>
      <member refid="class_a_ruler_measurement_1acd573f06ddd0b645c33fdc71ae524abb" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>DestroyRuler</name></member>
      <member refid="class_a_ruler_measurement_1a2dfcb1bb5ac57ccc7576c7926a6f83cc" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>DistanceToleranceForAreaPolygon</name></member>
      <member refid="class_a_ruler_measurement_1aaacdd9257e0564bf29204eac6b0d8ddf" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ExitRuler</name></member>
      <member refid="class_a_ruler_measurement_1ae992822647c694c1e8258db9a253f5dc" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>FindRulerAreaUnitType</name></member>
      <member refid="class_a_ruler_measurement_1a22b03bb690c4bd391dfd47261f305c45" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>FindRulerLengthUnitType</name></member>
      <member refid="class_a_ruler_measurement_1a6c861e0212eee5ec1ac33c13b4a06f23" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>FormatUnitsWithSpaces</name></member>
      <member refid="class_a_ruler_measurement_1a0835831e435fc5b177d301d77edb2d51" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GenerateFillLines</name></member>
      <member refid="class_a_ruler_measurement_1a18b20a93114bbbbc071c59cf4949a9d1" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GeneratePointsAndRelativeToEllipsoid</name></member>
      <member refid="class_a_ruler_measurement_1a67edc4aa607a65c1ff325cdbc67ada50" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GeneratePointsBetweenVectors2D</name></member>
      <member refid="class_a_ruler_measurement_1abbde8b1d425f7a8a6e53015c8ac40066" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GeneratePointsBetweenVectors3D</name></member>
      <member refid="class_a_ruler_measurement_1a89fad99043f30579d29b826c9b4a0fa6" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetAllRulerControllers</name></member>
      <member refid="class_a_ruler_measurement_1abfe9906d2e11adbe0dc0f0be384bdd65" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetCameraLocation</name></member>
      <member refid="class_a_ruler_measurement_1a9025d266a9a0559489514a1afae7314b" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetCurrentInfo</name></member>
      <member refid="class_a_ruler_measurement_1a2af15a697843536011792921cfb92e95" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetDistanceToleranceForAreaPolygon</name></member>
      <member refid="class_a_ruler_measurement_1a8130148765d8f0aed71f0c9f426b91c9" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetPlayerController</name></member>
      <member refid="class_a_ruler_measurement_1a628844516ce59787b0a141311f5f9b91" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetPopupWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a881efac492b6ea5a097991d96725f25c" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetPromptRulerPopupClass</name></member>
      <member refid="class_a_ruler_measurement_1a94324117648b9fd1a250ecd89653dc20" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetRulerControllerByGuid</name></member>
      <member refid="class_a_ruler_measurement_1a9b9bd85d7d0409744e1c6badea0f8388" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetRulerMode</name></member>
      <member refid="class_a_ruler_measurement_1a41bc07f20a840cfdfc78bc3222f08f42" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetRulerPlacementLocationMarker</name></member>
      <member refid="class_a_ruler_measurement_1a33f46b8f20e56eb5fe783473e8b0c3d7" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetRulerPointButtonWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a3ea5d33c0c79ace3907db19c4db271d2" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetRulersInfo</name></member>
      <member refid="class_a_ruler_measurement_1af47ded054c806b8741e0ab514e6f808f" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>GetStepForSegments</name></member>
      <member refid="class_a_ruler_measurement_1ac7c288fe8eb3a43508255c2fca1c8419" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>HighlightRuler</name></member>
      <member refid="class_a_ruler_measurement_1a0c7b27cbc46d4c8c3dc3332ed7635f19" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>IsControllerAvailable</name></member>
      <member refid="class_a_ruler_measurement_1a2d1ba5a26e38b19834fa5525ad9c5115" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>LineTraceFromPlayerScreen</name></member>
      <member refid="class_a_ruler_measurement_1a862a2916b0e21101c53d7df4931a1a11" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>MinActorPlacementAngleDeviation</name></member>
      <member refid="class_a_ruler_measurement_1a2d8658383dd97e26ee7a3e79eb57f59c" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>OffsetVectorByStep</name></member>
      <member refid="class_a_ruler_measurement_1a75b023280c0a1c52ce54d32ae76159d5" prot="public" virt="virtual"><scope>ARulerMeasurement</scope><name>OnConstruction</name></member>
      <member refid="class_a_ruler_measurement_1aeb381c41fe5c9831222f2adf97a1584c" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>OnRulerModeChanged</name></member>
      <member refid="class_a_ruler_measurement_1a34de015cc74f72b409f96e71e07ff27b" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>PointViewportTolerance</name></member>
      <member refid="class_a_ruler_measurement_1a2bc24e65edc7d7730d77d926116c7627" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>PopupWidget</name></member>
      <member refid="class_a_ruler_measurement_1a08d647406b435e88f329a2d1625f1b38" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>PopupWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1aac41369986de20047871705353151cee" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>PreviousPoint</name></member>
      <member refid="class_a_ruler_measurement_1a41a01235d96bf9254bf1236feb2bea91" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ProjectPointOntoEllipsoid</name></member>
      <member refid="class_a_ruler_measurement_1a3751fc93da1fae98b6e3dac134ba395d" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ProjectWorldToScreenBidirectional</name></member>
      <member refid="class_a_ruler_measurement_1a278e47562b9931d44cbbeebc77b75029" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>PromptRulerPopupClass</name></member>
      <member refid="class_a_ruler_measurement_1ac61864045087a54e0155cca57d30dbc4" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RemoveInvalidControllers</name></member>
      <member refid="class_a_ruler_measurement_1a4b694af9517003a6ce781e93961e8c6d" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RoundFloat</name></member>
      <member refid="class_a_ruler_measurement_1a9e9ae0da4a47651d0fd79d57315c8b21" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerClass</name></member>
      <member refid="class_a_ruler_measurement_1a73005ca68989f1ee72c9b0df2d70981b" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerControllerClass</name></member>
      <member refid="class_a_ruler_measurement_1adc0e29c824845d70e7a778ccdb805821" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerControllers</name></member>
      <member refid="class_a_ruler_measurement_1a8bb6573811ab90897b2c9de38533a2b0" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerEnd</name></member>
      <member refid="class_a_ruler_measurement_1a6f4961965d9dea882aec1789b92f803d" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerHighlightColor</name></member>
      <member refid="class_a_ruler_measurement_1a14eb0457ec1b25807b4942d6376ccbe2" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerInfo</name></member>
      <member refid="class_a_ruler_measurement_1a6ed2ff1802f9ea8dd31a97b46bfd9ac3" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerLengthUpdated</name></member>
      <member refid="class_a_ruler_measurement_1adb051c5112f29553656bddd91b4143fc" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerLinesWidget</name></member>
      <member refid="class_a_ruler_measurement_1a64b939f65d5d197bf065030bb1fc65e2" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerLinesWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a6544fe804544a13b24655f050a103b67" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerMode</name></member>
      <member refid="class_a_ruler_measurement_1a7fdf224d993d61ea6ab256e9e177001b" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPlacementLocationMarker</name></member>
      <member refid="class_a_ruler_measurement_1a98c7b820f65a9a13240f2e6f2fee32e8" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPlacementLocationMarkerClass</name></member>
      <member refid="class_a_ruler_measurement_1a4c46387fdec2a44f5b5b50d550211cbe" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPointButtonWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a134ff1ce8d1a3d6a86ab8906c712023e" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPoints</name></member>
      <member refid="class_a_ruler_measurement_1a51e6190b7893719fc873f8a87b16f070" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPointWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a2a6f6f3a0a4994cf67c50e03130161cf" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerPointWidgets</name></member>
      <member refid="class_a_ruler_measurement_1a9f708abd402a620d562ecbd040aeca1e" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerSaved</name></member>
      <member refid="class_a_ruler_measurement_1aa978dab2667d7ae642a294ae5b076063" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>RulerStandardColor</name></member>
      <member refid="class_a_ruler_measurement_1a4071cb06f0671648f3b4be2ef98ccd4d" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SaveCurrentRuler</name></member>
      <member refid="class_a_ruler_measurement_1a8db5021f38c25c1bf7f2f7e676fe3ee7" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SetController</name></member>
      <member refid="class_a_ruler_measurement_1a1272a067686ff6dcdcc7349fe33a2ae4" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SetRulerAreaUnitType</name></member>
      <member refid="class_a_ruler_measurement_1a451415450e357600d85959082c5254a5" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SetRulerInfo</name></member>
      <member refid="class_a_ruler_measurement_1aad1c808f6805ec41a235fb97bf2f8cc5" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SetRulerLengthUnitType</name></member>
      <member refid="class_a_ruler_measurement_1af2d6e1a0eaf52ad227fed3f85253c7fa" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SetRulerMode</name></member>
      <member refid="class_a_ruler_measurement_1a283de2c8df235ad2fe9f7df5c1d467a7" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SplineDistance</name></member>
      <member refid="class_a_ruler_measurement_1a84074ad2ae765e0de99a653224b2053c" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SplineWidget</name></member>
      <member refid="class_a_ruler_measurement_1a046f38ec4249ab09e9c83234a24002dc" prot="protected" virt="non-virtual"><scope>ARulerMeasurement</scope><name>SplineWidgetClass</name></member>
      <member refid="class_a_ruler_measurement_1a3bf5885e1af73500b599cf9f29e991c5" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>StepForSegments</name></member>
      <member refid="class_a_ruler_measurement_1a38696a34f683aa8df2e5c2915538d285" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>StepForSpline</name></member>
      <member refid="class_a_ruler_measurement_1a45e9bc6dfcb1f24ee00e66797cfbc0c0" prot="public" virt="virtual"><scope>ARulerMeasurement</scope><name>Tick</name></member>
      <member refid="class_a_ruler_measurement_1af166a736c9b3629526b34c60be2cf001" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>TotalDistance</name></member>
      <member refid="class_a_ruler_measurement_1a7e516927b48d229d2f849948c9103bdc" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>UpdateRuler</name></member>
      <member refid="class_a_ruler_measurement_1a058781e5db55700cecb3695c3b03ab57" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>UpdateRulerPlacementLocationMarker</name></member>
      <member refid="class_a_ruler_measurement_1aed5be2f82dd310c0393ae16bbffda2c9" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>UpdateRulerPlacementLocationSpline</name></member>
      <member refid="class_a_ruler_measurement_1aab1eaa47ec33e59373a2f3ef5e1bcbfa" prot="public" virt="non-virtual"><scope>ARulerMeasurement</scope><name>VisualizeRulerByInfo</name></member>
      <member refid="class_a_ruler_measurement_1a0b575c751b5ee963065f73628f7e393a" prot="private" virt="non-virtual"><scope>ARulerMeasurement</scope><name>ZOrderRulerPoint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
