<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_building_variant" kind="class" language="C++" prot="public">
    <compoundname>ABuildingVariant</compoundname>
    <basecompoundref refid="class_a_building_core_base" prot="public" virt="non-virtual">ABuildingCoreBase</basecompoundref>
    <includes refid="_building_variant_8h" local="no">BuildingVariant.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_building_variant_1a35e609474a75f4cdac0a0a4bbf6ebe5f" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref></type>
        <definition>FGuid ABuildingVariant::ActiveBuildingID</definition>
        <argsstring></argsstring>
        <name>ActiveBuildingID</name>
        <qualifiedname>ABuildingVariant::ActiveBuildingID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="152" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_building_variant_1a08eb5b1df476ce6ddae6c7322c10bfac" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref></type>
        <definition>FGuid ABuildingVariant::Guid</definition>
        <argsstring></argsstring>
        <name>Guid</name>
        <qualifiedname>ABuildingVariant::Guid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="155" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="155" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_a_building_variant_1ad8a42408cccca47950b4bfa8364145e3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_u_variant_console_commands" kindref="compound">UVariantConsoleCommands</ref> *</type>
        <definition>UVariantConsoleCommands* ABuildingVariant::ConsoleCommands</definition>
        <argsstring></argsstring>
        <name>ConsoleCommands</name>
        <qualifiedname>ABuildingVariant::ConsoleCommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="326" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_building_variant_1a3fa8479c14bf05a5e043772fc9562e04" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref> &gt;</type>
        <definition>TObjectPtr&lt;UVariantsTableController&gt; ABuildingVariant::TableController</definition>
        <argsstring></argsstring>
        <name>TableController</name>
        <qualifiedname>ABuildingVariant::TableController</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="329" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_building_variant_1abce2e1c4354347c72f30154e363ac01e" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TObjectPtr</ref>&lt; <ref refid="class_u_building_info_collection" kindref="compound">UBuildingInfoCollection</ref> &gt;</type>
        <definition>TObjectPtr&lt;UBuildingInfoCollection&gt; ABuildingVariant::InfoCollection</definition>
        <argsstring></argsstring>
        <name>InfoCollection</name>
        <qualifiedname>ABuildingVariant::InfoCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="334" column="20" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="334" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_building_variant_1ae6808adaf49392ff2726325cb7fe57fc" prot="private" static="no" mutable="no">
        <type><ref refid="struct_f_ordered_information" kindref="compound">FOrderedInformation</ref></type>
        <definition>FOrderedInformation ABuildingVariant::OrderedInformation</definition>
        <argsstring></argsstring>
        <name>OrderedInformation</name>
        <qualifiedname>ABuildingVariant::OrderedInformation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="450" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="450" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_building_variant_1a914c1a62170ad833aa3ceaa411dba2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ABuildingVariant::ABuildingVariant</definition>
        <argsstring>()</argsstring>
        <name>ABuildingVariant</name>
        <qualifiedname>ABuildingVariant::ABuildingVariant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="28" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="17" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a7b02305363c8b8bd1830ebb985d15fd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::IsBuildingFirstPlace</definition>
        <argsstring>(const ABuildingCoreBase *Building) const</argsstring>
        <name>IsBuildingFirstPlace</name>
        <qualifiedname>ABuildingVariant::IsBuildingFirstPlace</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Определяет, находится ли указанное здание в первом месте в массиве OrderedInformation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Building</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющий здание для проверки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здание находится на первом месте, иначе - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="141" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="738" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ad1a3761a9d6ccef8d9394eee9a9b50b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::RemovePolygonsForNonActive</definition>
        <argsstring>() const</argsstring>
        <name>RemovePolygonsForNonActive</name>
        <qualifiedname>ABuildingVariant::RemovePolygonsForNonActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="157" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1af7bcc3f2266e1224a63f1a04fc6fe689" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt;</type>
        <definition>TArray&lt; ABuildingCoreBase * &gt; ABuildingVariant::GetNonActiveBuildings</definition>
        <argsstring>() const</argsstring>
        <name>GetNonActiveBuildings</name>
        <qualifiedname>ABuildingVariant::GetNonActiveBuildings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="159" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="231" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a1ff50b7a482ec64c700373534c5cdc65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::CombineBuildings</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>CombineBuildings</name>
        <qualifiedname>ABuildingVariant::CombineBuildings</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
<para>Объединяет указанные здания в вариант здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает массив указателей <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющих здания, которые должны быть объединены в вариант здания. Если массив пуст, метод возвращает false. В противном случае метод вызывает метод <ref refid="class_a_building_variant_1a774cd97d252581006c6edbeef43bb947" kindref="member">ReInitBuildings()</ref> и устанавливает активный вариант в свойство Info первого здания. Затем метод возвращает результат вызова <ref refid="class_a_building_variant_1a774cd97d252581006c6edbeef43bb947" kindref="member">ReInitBuildings()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Buildings</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив указателей <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющих здания для объединения.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно объединены, false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="177" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="251" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a31ecc039dae1e78c7d050ba5f5358153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::SwitchCurrentBuilding</definition>
        <argsstring>(const FGuid &amp;BuildingID)</argsstring>
        <name>SwitchCurrentBuilding</name>
        <qualifiedname>ABuildingVariant::SwitchCurrentBuilding</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &amp;</type>
          <declname>BuildingID</declname>
        </param>
        <briefdescription>
<para>Переключает текущий вариант здания на тот, у которого указан BuildingID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingID</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор варианта здания для переключения.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, если вариант здания с указанным BuildingID найден и успешно переключен, false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="188" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="408" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ac0b9ede2d027fea837b42af770b94400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ToggleCurrentBuilding</definition>
        <argsstring>(bool bShow, bool bUseExToggleActive=false, bool bUseNotify=false)</argsstring>
        <name>ToggleCurrentBuilding</name>
        <qualifiedname>ABuildingVariant::ToggleCurrentBuilding</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bShow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bUseExToggleActive</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bUseNotify</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="191" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="424" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a966dbca0274be96d25b825358021a84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::UncombineBuildings</definition>
        <argsstring>()</argsstring>
        <name>UncombineBuildings</name>
        <qualifiedname>ABuildingVariant::UncombineBuildings</qualifiedname>
        <briefdescription>
<para>Разделяет здания в варианте. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод разделяет все здания в варианте. Сначала он деинициализирует здания в коллекции, используя функцию <ref refid="class_a_building_variant_1abc8e11086d9f08bbe24a51eb1dd0fc93" kindref="member">DeInitBuildingsInCollection()</ref>. Если деинициализация не удалась, выводится сообщение об ошибке, и возвращается false. В противном случае метод уничтожает вариант, вызвав функцию <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Destroy()</ref>, и возвращает true.</para>
<para><simplesect kind="return"><para>True, если здания успешно разделены, false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="203" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="277" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a3c28b79a3ae3db5b92b068517caf27c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::AddBuildingsIntoVariantByIds</definition>
        <argsstring>(const TArray&lt; FGuid &gt; &amp;BuildingsIds)</argsstring>
        <name>AddBuildingsIntoVariantByIds</name>
        <qualifiedname>ABuildingVariant::AddBuildingsIntoVariantByIds</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>BuildingsIds</declname>
        </param>
        <briefdescription>
<para>Добавляет здания в вариант по их уникальным ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод добавляет здания с указанными ID в текущий вариант здания. Здания будут включены в вариант со своими стандартными конфигурациями. Метод возвращает true, если здания были успешно добавлены, и false в противном случае.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingsIds</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив уникальных ID зданий, которые должны быть добавлены в вариант.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно добавлены в вариант, false в противном случае. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="217" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1af6a2abcb58a09a552cc43ba6d7d1c7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::AddBuildingsIntoVariant</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>AddBuildingsIntoVariant</name>
        <qualifiedname>ABuildingVariant::AddBuildingsIntoVariant</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
<para>Добавляет данный массив объектов зданий в вариант здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает массив объектов зданий и добавляет их в текущий вариант здания. Добавленные здания станут частью варианта здания и могут быть объединены или разделены с другими зданиями. Метод возвращает true, если здания были успешно добавлены, иначе он возвращает false.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Buildings</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив объектов зданий, которые будут добавлены в вариант здания.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно добавлены, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="232" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="303" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a6d22092cd46fcaf738c7f9efa6806950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::AddBuildingVariant</definition>
        <argsstring>(ABuildingCoreBase *Building)</argsstring>
        <name>AddBuildingVariant</name>
        <qualifiedname>ABuildingVariant::AddBuildingVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
<para>Добавляет вариант здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Добавляет вариант здания в коллекцию вариантов зданий. Вариант здания - это коллекция зданий с разными конфигурациями.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Building</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на объект <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющий здание, которое должно быть добавлено.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если вариант здания был успешно добавлен, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="244" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1aa1546f7e873ac22d6fdaaa91c03ae6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::RemoveBuildingVariant</definition>
        <argsstring>(ABuildingCoreBase *Building)</argsstring>
        <name>RemoveBuildingVariant</name>
        <qualifiedname>ABuildingVariant::RemoveBuildingVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
<para>Удаляет вариант здания из коллекции зданий в текущем варианте. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод удаляет определенный вариант здания из коллекции зданий в текущем варианте.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Building</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на вариант здания, который нужно удалить.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если вариант здания был успешно удален, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="258" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ac90096a985ae20e8c7a1e57434f6cff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 ABuildingVariant::GetCurrentVariantIndex</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentVariantIndex</name>
        <qualifiedname>ABuildingVariant::GetCurrentVariantIndex</qualifiedname>
        <briefdescription>
<para>Получает индекс текущего варианта здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод возвращает индекс текущего варианта здания. Индекс представляет собой позицию варианта в списке вариантов зданий.</para>
<para><simplesect kind="return"><para>Индекс текущего варианта здания. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="269" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a214cc8ca525001afaeb76cd54ecf2708" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::IsFirstBuilding</definition>
        <argsstring>() const</argsstring>
        <name>IsFirstBuilding</name>
        <qualifiedname>ABuildingVariant::IsFirstBuilding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="272" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a1fb461ea0e33d1114a8d19bf21876ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::RemoveBuildingsFromVariantByIds</definition>
        <argsstring>(const TArray&lt; FGuid &gt; &amp;BuildingsIds)</argsstring>
        <name>RemoveBuildingsFromVariantByIds</name>
        <qualifiedname>ABuildingVariant::RemoveBuildingsFromVariantByIds</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>BuildingsIds</declname>
        </param>
        <briefdescription>
<para>Удаляет здания из варианта здания по их идентификаторам. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingsIds</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив идентификаторов зданий, которые нужно удалить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно удалены, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="281" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1abcb9b0f09cdebd0be3a8a0ca7a7c9721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::RemoveBuildingsFromVariant</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>RemoveBuildingsFromVariant</name>
        <qualifiedname>ABuildingVariant::RemoveBuildingsFromVariant</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
<para>Удаляет здания из варианта здания </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Buildings</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив указателей <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющих здания, которые нужно удалить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно удалены, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="290" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="335" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ab86c8d0b6c0061e25be63bd9172d2cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::NextVariant</definition>
        <argsstring>()</argsstring>
        <name>NextVariant</name>
        <qualifiedname>ABuildingVariant::NextVariant</qualifiedname>
        <briefdescription>
<para>Переключается на следующий вариант в упорядоченной коллекции информации. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод используется для переключения на следующий вариант в упорядоченной коллекции информации. Он обновляет активный вариант здания и устанавливает его на следующий вариант. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="299" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="347" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1aae5275a34e0cae9e597af74d19e25605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::PrevVariant</definition>
        <argsstring>()</argsstring>
        <name>PrevVariant</name>
        <qualifiedname>ABuildingVariant::PrevVariant</qualifiedname>
        <briefdescription>
<para>Переключается на предыдущий вариант здания. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта функция переключает на предыдущий вариант здания в упорядоченной коллекции информации. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="307" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="357" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a945af99e5b0c35c8fd412638607ad507" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSet</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt;</type>
        <definition>TSet&lt; FGuid &gt; ABuildingVariant::GetBuildingsGuids</definition>
        <argsstring>() const</argsstring>
        <name>GetBuildingsGuids</name>
        <qualifiedname>ABuildingVariant::GetBuildingsGuids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Извлекает Guid зданий, связанных с этим вариантом здания.</para>
<para><simplesect kind="return"><para>Набор FGuid, представляющий Guid зданий. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="314" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a4422763703ea90781a1b7bfe7d44616a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt;</type>
        <definition>TArray&lt; ABuildingCoreBase * &gt; ABuildingVariant::GetAllBuildings</definition>
        <argsstring>() const</argsstring>
        <name>GetAllBuildings</name>
        <qualifiedname>ABuildingVariant::GetAllBuildings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves all buildings associated with the building variant.</para>
<para><simplesect kind="return"><para>An array of pointers to <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> representing all buildings associated with the building variant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="321" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="47" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_a_building_variant_1a344c34419b9f54ee190373f2b14f5b29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::StaticCombineBuildings</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>StaticCombineBuildings</name>
        <qualifiedname>ABuildingVariant::StaticCombineBuildings</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Объединяет здания, предоставленные в массиве.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Buildings</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив указателей на <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>, представляющий здания, которые должны быть объединены. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно объединены, в противном случае - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="36" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="188" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a2edc3a8a3f9cbca70d8fe9ab92b041d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::StaticCombineBuildingsByIds</definition>
        <argsstring>(const TArray&lt; FString &gt; &amp;Ids)</argsstring>
        <name>StaticCombineBuildingsByIds</name>
        <qualifiedname>ABuildingVariant::StaticCombineBuildingsByIds</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt; &amp;</type>
          <declname>Ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="38" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ae75132c8bf3404b1ee322b250a7d2c4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::StaticCombineBuildingsByIds</definition>
        <argsstring>(const TArray&lt; FGuid &gt; &amp;Ids)</argsstring>
        <name>StaticCombineBuildingsByIds</name>
        <qualifiedname>ABuildingVariant::StaticCombineBuildingsByIds</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>Ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Объединяет здания по их Guids.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Guids</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив Guids, представляющих здания, которые следует объединить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, если здания были успешно объединены, иначе - false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="45" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="156" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a83c0467dae34188f6caeae34cb5a3186" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::StaticAddBuildingsIntoVariant</definition>
        <argsstring>(ABuildingVariant *BuildingVariant, const TArray&lt; FGuid &gt; &amp;BuildingsIds)</argsstring>
        <name>StaticAddBuildingsIntoVariant</name>
        <qualifiedname>ABuildingVariant::StaticAddBuildingsIntoVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>BuildingVariant</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>BuildingsIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="54" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a2b1905b9675e85ebe9f16a4f6e7e8711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::StaticRemoveBuildingsFromVariant</definition>
        <argsstring>(ABuildingVariant *BuildingVariant, const TArray&lt; FGuid &gt; &amp;BuildingsIds)</argsstring>
        <name>StaticRemoveBuildingsFromVariant</name>
        <qualifiedname>ABuildingVariant::StaticRemoveBuildingsFromVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>BuildingVariant</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>BuildingsIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="63" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ae774c7cec98b253a67789838f54844f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::StaticNextVariant</definition>
        <argsstring>(ABuildingVariant *BuildingVariant)</argsstring>
        <name>StaticNextVariant</name>
        <qualifiedname>ABuildingVariant::StaticNextVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>BuildingVariant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Генерирует следующий вариант вариации здания.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingVariant</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на вариацию здания, для которой должен быть сгенерирован следующий вариант. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="70" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ac672393072f2c4b0d83a37530b5295f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::StaticPrevVariant</definition>
        <argsstring>(ABuildingVariant *BuildingVariant)</argsstring>
        <name>StaticPrevVariant</name>
        <qualifiedname>ABuildingVariant::StaticPrevVariant</qualifiedname>
        <param>
          <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
          <declname>BuildingVariant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Переходит к предыдущему варианту здания.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingVariant</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на <ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref>, для которого нужно получить предыдущий вариант. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="77" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a8446f42bbf5a652c5fe7b56cb4d4f5d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
        <definition>ABuildingVariant * ABuildingVariant::SpawnThisClass</definition>
        <argsstring>(const FTransform &amp;Transform)</argsstring>
        <name>SpawnThisClass</name>
        <qualifiedname>ABuildingVariant::SpawnThisClass</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTransform</ref> &amp;</type>
          <declname>Transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="85" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="209" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a1fc1f18886fec57432dcce0af7ea7417" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::AddToInfoMapVariants</definition>
        <argsstring>(const UBuildingInfoWrapper *Info, ThisClass *BuildingVariant)</argsstring>
        <name>AddToInfoMapVariants</name>
        <qualifiedname>ABuildingVariant::AddToInfoMapVariants</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>Info</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ThisClass</ref> *</type>
          <declname>BuildingVariant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="93" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="615" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1aa1a7232f35e1384c9b92c7caec3eca3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::RemoveFromInfoMapVariants</definition>
        <argsstring>(const UBuildingInfoWrapper *Info)</argsstring>
        <name>RemoveFromInfoMapVariants</name>
        <qualifiedname>ABuildingVariant::RemoveFromInfoMapVariants</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>Info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="100" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="627" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a524e2f464e2bc23de0b7ad774f80ad9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_a_building_variant" kindref="compound">ABuildingVariant</ref> *</type>
        <definition>ABuildingVariant * ABuildingVariant::FindBuildingVariantById</definition>
        <argsstring>(const FGuid &amp;Id)</argsstring>
        <name>FindBuildingVariantById</name>
        <qualifiedname>ABuildingVariant::FindBuildingVariantById</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &amp;</type>
          <declname>Id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="108" column="33" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="367" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a1609e765fc5341f37b68ad0e5a607b74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::IsBuildingContainedInAnyVariant</definition>
        <argsstring>(const ABuildingCoreBase *Building)</argsstring>
        <name>IsBuildingContainedInAnyVariant</name>
        <qualifiedname>ABuildingVariant::IsBuildingContainedInAnyVariant</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="116" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ab0dff0952db234cc65fca76c12450170" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::SwitchToOtherBuilding</definition>
        <argsstring>(const FGuid &amp;BuildingId, EVariantSwitchDirection Direction)</argsstring>
        <name>SwitchToOtherBuilding</name>
        <qualifiedname>ABuildingVariant::SwitchToOtherBuilding</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &amp;</type>
          <declname>BuildingId</declname>
        </param>
        <param>
          <type><ref refid="_building_variant_8h_1a1a52e3e9037f9105811bdd1a65e71ca8" kindref="member">EVariantSwitchDirection</ref></type>
          <declname>Direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Переключение на следующий или предыдущий вариант здания <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BuildingId</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор здания, которое входит в BuildingVariant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Direction</parametername>
</parameternamelist>
<parameterdescription>
<para>направление переключения (следующее или предыдущее здание) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="123" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="386" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a849e9d4a87740cc4ec46b7bf50dcd943" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::IsBuildingNotVariantOrFirstVariant</definition>
        <argsstring>(const ABuildingCoreBase *Building)</argsstring>
        <name>IsBuildingNotVariantOrFirstVariant</name>
        <qualifiedname>ABuildingVariant::IsBuildingNotVariantOrFirstVariant</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Метод Проверяет является ли указанное здание основным <linebreak/>
 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Building</parametername>
</parameternamelist>
<parameterdescription>
<para>Здание </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Возвращает true, если здание не включено в вариант или является основным - если оно включено в вариант </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="148" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="749" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a79625a1bf32af69c5bd7efb3c40fcf3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::IsNeedRemovePolygonsForNonActive</definition>
        <argsstring>()</argsstring>
        <name>IsNeedRemovePolygonsForNonActive</name>
        <qualifiedname>ABuildingVariant::IsNeedRemovePolygonsForNonActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="161" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="246" bodyend="249"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_a_building_variant_1add8f0abe430b862eaffaa5bff3297a59" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_u_building_info_collection" kindref="compound">UBuildingInfoCollection</ref> &gt;</type>
        <definition>TSubclassOf&lt; UBuildingInfoCollection &gt; ABuildingVariant::GetBuildingInfoCollectionClass</definition>
        <argsstring>()</argsstring>
        <name>GetBuildingInfoCollectionClass</name>
        <qualifiedname>ABuildingVariant::GetBuildingInfoCollectionClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="131" column="28" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="720" bodyend="723"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_a_building_variant_1af990542682c1f3573e61f087c585785d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::PostInitProperties</definition>
        <argsstring>() override</argsstring>
        <name>PostInitProperties</name>
        <qualifiedname>ABuildingVariant::PostInitProperties</qualifiedname>
        <reimplements refid="class_a_building_core_base_1ad7df9a27d961cc6bcd920a47651af814">PostInitProperties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Выполняет после инициализации свойства для экземпляра здания.</para>
<para>Этот метод вызывается после инициализации свойств экземпляра здания. Он проверяет, является ли текущий экземпляр экземпляром класса по умолчанию объекта (CDO), и если так, просто возвращает управление. Затем создает новый объект InfoCollection типа <ref refid="class_u_building_info_collection" kindref="compound">UBuildingInfoCollection</ref>, если InfoCollection еще не был инициализирован. Если приложение работает в режиме редактора (Editor), создается TableController класса <ref refid="class_u_variants_table_controller" kindref="compound">UVariantsTableController</ref>. Если TableController не инициализировался корректно, генерируется сообщение об ошибке. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="345" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="57" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a933153e84822af2a5a98c146f76afca7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::PostLoad</definition>
        <argsstring>() override</argsstring>
        <name>PostLoad</name>
        <qualifiedname>ABuildingVariant::PostLoad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs any additional processing necessary after the object has been loaded from disk. Retrieves all building information wrappers from InfoCollection and sets the active info. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="352" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="81" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a180af567fdefdef3c0a81fd379154f98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>ABuildingVariant::BeginPlay</qualifiedname>
        <reimplements refid="class_a_building_core_base_1add1686f1ebd68181e339505765ad3985">BeginPlay</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when the game starts or when spawned. Retrieves all building information from InfoCollection and sets the active variants. Logs errors if any invalid information is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="359" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="107" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a7a0db8a3e9ae8b550f0c07f1c58c4356" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::BeginDestroy</definition>
        <argsstring>() override</argsstring>
        <name>BeginDestroy</name>
        <qualifiedname>ABuildingVariant::BeginDestroy</qualifiedname>
        <reimplements refid="class_a_building_core_base_1a62db347057436f0cd618547d2ae80d95">BeginDestroy</reimplements>
        <briefdescription>
<para>Метод для начала процесса уничтожения экземпляра <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается при уничтожении объекта и используется для очистки любых ресурсов или выполнения необходимых действий перед освобождением объекта.</para>
<para>Если в сцене существует BuildingManager, информация, связанная с этим экземпляром здания, удаляется из коллекции менеджера перед уничтожением объекта. Это делается для обеспечения правильной очистки данных, связанных со зданием. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="361" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="713" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1abc8e11086d9f08bbe24a51eb1dd0fc93" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::DeInitBuildingsInCollection</definition>
        <argsstring>()</argsstring>
        <name>DeInitBuildingsInCollection</name>
        <qualifiedname>ABuildingVariant::DeInitBuildingsInCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="369" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="459" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a19deafd7e0c505aad01d0e79c660fc37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::DeInitBuildings</definition>
        <argsstring>(const TArray&lt; UBuildingInfoWrapper * &gt; &amp;Infos)</argsstring>
        <name>DeInitBuildings</name>
        <qualifiedname>ABuildingVariant::DeInitBuildings</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt; &amp;</type>
          <declname>Infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="376" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="561" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a3eaa3da92c82cfd1de0cc0f1977d1106" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::DeInitBuilding</definition>
        <argsstring>(UBuildingInfoWrapper *CurInfo)</argsstring>
        <name>DeInitBuilding</name>
        <qualifiedname>ABuildingVariant::DeInitBuilding</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>CurInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="384" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="582" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1aff2bad2a9beb973d82d1307921fe1833" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::DeInitBuilding</definition>
        <argsstring>(ABuildingCoreBase *Building)</argsstring>
        <name>DeInitBuilding</name>
        <qualifiedname>ABuildingVariant::DeInitBuilding</qualifiedname>
        <param>
          <type><ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="385" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a774cd97d252581006c6edbeef43bb947" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ReInitBuildings</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>ReInitBuildings</name>
        <qualifiedname>ABuildingVariant::ReInitBuildings</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="393" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="653" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a6fceca8ef4d0427c51b18c6489279bb9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ReInitBuildings</definition>
        <argsstring>(const TArray&lt; UBuildingInfoWrapper * &gt; &amp;Infos)</argsstring>
        <name>ReInitBuildings</name>
        <qualifiedname>ABuildingVariant::ReInitBuildings</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt; &amp;</type>
          <declname>Infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="394" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="676" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a586d714155dd5a974344e8f6757fcadd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ReInitBuilding</definition>
        <argsstring>(UBuildingInfoWrapper *CurInfo, bool bActive=false)</argsstring>
        <name>ReInitBuilding</name>
        <qualifiedname>ABuildingVariant::ReInitBuilding</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>CurInfo</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bActive</declname>
          <defval><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="403" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="697" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a4a4aa08dca541c8e869cbef667e62ddd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ReInitBuilding</definition>
        <argsstring>(ABuildingCoreBase *Building)</argsstring>
        <name>ReInitBuilding</name>
        <qualifiedname>ABuildingVariant::ReInitBuilding</qualifiedname>
        <param>
          <type><ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="404" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="732" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ae8a532819e5f146ba2facb7007b8c76a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::ReInitBuildingsInCollection</definition>
        <argsstring>()</argsstring>
        <name>ReInitBuildingsInCollection</name>
        <qualifiedname>ABuildingVariant::ReInitBuildingsInCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="411" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a664a4b04366b28a42117659af107f4ae" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::GuaranteeSpawnedBuilding</definition>
        <argsstring>(UBuildingInfoWrapper *const CurInfo) const</argsstring>
        <name>GuaranteeSpawnedBuilding</name>
        <qualifiedname>ABuildingVariant::GuaranteeSpawnedBuilding</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref></type>
          <declname>CurInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Процедура гарантирует наличие заспавненного здания с использованием предоставленной информации.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CurInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Константный указатель на <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref>, представляющий информацию о здании, которое должно быть заспавнено. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="418" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="450" bodyend="457"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_a_building_variant_1a39c4fe2404d683fadf0078928353dcc9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt;</type>
        <definition>TArray&lt; UBuildingInfoWrapper * &gt; ABuildingVariant::BuildingsToInfos</definition>
        <argsstring>(const TArray&lt; ABuildingCoreBase * &gt; &amp;Buildings)</argsstring>
        <name>BuildingsToInfos</name>
        <qualifiedname>ABuildingVariant::BuildingsToInfos</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> * &gt; &amp;</type>
          <declname>Buildings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="427" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="636" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a59607c94e1a8a6c45e592edb599363e3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt;</type>
        <definition>TArray&lt; UBuildingInfoWrapper * &gt; ABuildingVariant::IdsToInfos</definition>
        <argsstring>(const TArray&lt; FGuid &gt; &amp;Ids)</argsstring>
        <name>IdsToInfos</name>
        <qualifiedname>ABuildingVariant::IdsToInfos</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FGuid</ref> &gt; &amp;</type>
          <declname>Ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="434" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="648" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a2b17aa8454f4ffa99365e5b4772483d7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString ABuildingVariant::GetGuids</definition>
        <argsstring>(const TArray&lt; UBuildingInfoWrapper * &gt; &amp;Infos)</argsstring>
        <name>GetGuids</name>
        <qualifiedname>ABuildingVariant::GetGuids</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt; &amp;</type>
          <declname>Infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="441" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="471" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1aaa12b53717d10a511faeb691905ca6a5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ABuildingVariant::CheckCorrectGuids</definition>
        <argsstring>(const TArray&lt; UBuildingInfoWrapper * &gt; &amp;Infos)</argsstring>
        <name>CheckCorrectGuids</name>
        <qualifiedname>ABuildingVariant::CheckCorrectGuids</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> * &gt; &amp;</type>
          <declname>Infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="448" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="529" bodyend="551"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_building_variant_1a5cd8eec37fd426c7f52039861e496760" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::AddVariant</definition>
        <argsstring>(UBuildingInfoWrapper *CurInfo)</argsstring>
        <name>AddVariant</name>
        <qualifiedname>ABuildingVariant::AddVariant</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>CurInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="457" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="491" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1a07533a78444b1877126a83a1cbd0cb28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::RemoveVariant</definition>
        <argsstring>(UBuildingInfoWrapper *CurInfo)</argsstring>
        <name>RemoveVariant</name>
        <qualifiedname>ABuildingVariant::RemoveVariant</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>CurInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="463" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="498" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ada7ef744d627f23ab3b68ab89e48b334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::SetActiveVariant</definition>
        <argsstring>(UBuildingInfoWrapper *CurInfo)</argsstring>
        <name>SetActiveVariant</name>
        <qualifiedname>ABuildingVariant::SetActiveVariant</qualifiedname>
        <param>
          <type><ref refid="class_u_building_info_wrapper" kindref="compound">UBuildingInfoWrapper</ref> *</type>
          <declname>CurInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="469" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="511" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_a_building_variant_1ad286c16a0cd2311b26459ba2eeebd3e6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void ABuildingVariant::AttachBuilding</definition>
        <argsstring>(ABuildingCoreBase *Building) const</argsstring>
        <name>AttachBuilding</name>
        <qualifiedname>ABuildingVariant::AttachBuilding</qualifiedname>
        <param>
          <type><ref refid="class_a_building_core_base" kindref="compound">ABuildingCoreBase</ref> *</type>
          <declname>Building</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="475" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Buildings/BuildingVariant/BuildingVariant.cpp" bodystart="553" bodyend="559"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>AActor</label>
      </node>
      <node id="2">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ABuildingVariant</label>
        <link refid="class_a_building_variant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>AActor</label>
      </node>
      <node id="2">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>PositionsManager</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ABuildingVariant</label>
        <link refid="class_a_building_variant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ConsoleCommands</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>OrderedInformation</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>FOrderedInformation</label>
        <link refid="struct_f_ordered_information"/>
        <childnode refid="9" relation="usage">
          <edgelabel>InfoList</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>TDoubleLinkedList&lt; ElementType &gt;</label>
        <link refid="class_t_double_linked_list"/>
      </node>
      <node id="9">
        <label>TDoubleLinkedListWithActiveNode&lt; UBuildingInfoWrapper * &gt;</label>
        <link refid="class_t_double_linked_list_with_active_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>UActorComponent</label>
      </node>
      <node id="7">
        <label>UObject</label>
      </node>
      <node id="4">
        <label>UPositionsManager</label>
        <link refid="class_u_positions_manager"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>UVariantConsoleCommands</label>
        <link refid="class_u_variant_console_commands"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" line="22" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Buildings/BuildingVariant/BuildingVariant.h" bodystart="23" bodyend="476"/>
    <listofallmembers>
      <member refid="class_a_building_core_base_1a69581d8796dbf1cccfb049b38b57f52a" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>ABuildingCoreBase</name></member>
      <member refid="class_a_building_variant_1a914c1a62170ad833aa3ceaa411dba2ef" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>ABuildingVariant</name></member>
      <member refid="class_a_building_variant_1a35e609474a75f4cdac0a0a4bbf6ebe5f" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>ActiveBuildingID</name></member>
      <member refid="class_a_building_variant_1af6a2abcb58a09a552cc43ba6d7d1c7f0" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddBuildingsIntoVariant</name></member>
      <member refid="class_a_building_variant_1a3c28b79a3ae3db5b92b068517caf27c1" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddBuildingsIntoVariantByIds</name></member>
      <member refid="class_a_building_variant_1a6d22092cd46fcaf738c7f9efa6806950" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddBuildingVariant</name></member>
      <member refid="class_a_building_core_base_1adc0ab11020b8c55d52afc12cc326be9b" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddExistingCartographicPolygon</name></member>
      <member refid="class_a_building_variant_1a1fc1f18886fec57432dcce0af7ea7417" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddToInfoMapVariants</name></member>
      <member refid="class_a_building_variant_1a5cd8eec37fd426c7f52039861e496760" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>AddVariant</name></member>
      <member refid="class_a_building_core_base_1a5cd6f15aa81269e192a4bd62cbf60ed3" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>AttachActor</name></member>
      <member refid="class_a_building_variant_1ad286c16a0cd2311b26459ba2eeebd3e6" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>AttachBuilding</name></member>
      <member refid="class_a_building_core_base_1a902c9e8b22317211b1d0808229656792" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>BaseDynamicMaterial</name></member>
      <member refid="class_a_building_variant_1a7a0db8a3e9ae8b550f0c07f1c58c4356" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>BeginDestroy</name></member>
      <member refid="class_a_building_variant_1a180af567fdefdef3c0a81fd379154f98" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>BeginPlay</name></member>
      <member refid="class_a_building_core_base_1a3f3af75573e8db0dd7c8e6a2fc8ec0de" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>bJsonUpdated</name></member>
      <member refid="class_a_building_core_base_1ac83fc8e04f0d7bb5a6ef5cb3db4ded36" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>bMediaFasadeBuilding</name></member>
      <member refid="class_a_building_core_base_1a84a591bc0a149f444be1f8cb87110958" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>bNoCheckGuid</name></member>
      <member refid="class_a_building_core_base_1a6c628be7b3ea54131caa55d6b75301fc" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>Bounds</name></member>
      <member refid="class_a_building_core_base_1a0c9357a8bf5dfde7ea2c3782cb9bbdea" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>bShowBuildingInfo</name></member>
      <member refid="class_a_building_variant_1a39c4fe2404d683fadf0078928353dcc9" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>BuildingsToInfos</name></member>
      <member refid="class_a_building_core_base_1a0438c67018693b34a4dd47286c1a8b81" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>bUseOldApiBuildingOption</name></member>
      <member refid="class_a_building_core_base_1a2f99d2ef85cfd7d2e2225fad94892368" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ChangeColorNeedUpdateJSON</name></member>
      <member refid="class_a_building_variant_1aaa12b53717d10a511faeb691905ca6a5" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>CheckCorrectGuids</name></member>
      <member refid="class_a_building_core_base_1a285628ccc5d12b4f48176adc40831bd2" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>CheckId</name></member>
      <member refid="class_a_building_core_base_1ab82ef54f9050cd04f493d1c442c8b9c4" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>CheckPolygonsProcessor</name></member>
      <member refid="class_a_building_variant_1a1ff50b7a482ec64c700373534c5cdc65" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>CombineBuildings</name></member>
      <member refid="class_a_building_core_base_1ab97ba704067ab70af51a4114ef4ff771" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ComparingInformationInJSON</name></member>
      <member refid="class_a_building_variant_1ad8a42408cccca47950b4bfa8364145e3" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>ConsoleCommands</name></member>
      <member refid="class_a_building_core_base_1aadf06530111089e08cdb147d78ec4694" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>ContainerStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1afb8457a1e25344a48deb4530e095128f" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>CutPolygons</name></member>
      <member refid="class_a_building_core_base_1a281893dae406bbd8f8e238decc0be61e" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>DECLARE_DELEGATE</name></member>
      <member refid="class_a_building_core_base_1a2e7e037a7eaa74e6b4b73e8e3faf66d2" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>DECLARE_MULTICAST_DELEGATE_OneParam</name></member>
      <member refid="class_a_building_core_base_1a1275ad9665cb946f4bb3a0e06a3c3053" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>DECLARE_MULTICAST_DELEGATE_ThreeParams</name></member>
      <member refid="class_a_building_variant_1a3eaa3da92c82cfd1de0cc0f1977d1106" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>DeInitBuilding</name></member>
      <member refid="class_a_building_variant_1aff2bad2a9beb973d82d1307921fe1833" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>DeInitBuilding</name></member>
      <member refid="class_a_building_variant_1a19deafd7e0c505aad01d0e79c660fc37" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>DeInitBuildings</name></member>
      <member refid="class_a_building_variant_1abc8e11086d9f08bbe24a51eb1dd0fc93" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>DeInitBuildingsInCollection</name></member>
      <member refid="class_a_building_core_base_1aa64ddd4742de4d7b4a0036030a4a4303" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>Destroyed</name></member>
      <member refid="class_a_building_core_base_1a8dd4a62b5b79cc018a2d312ee5369ca2" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>DoesAnyTextureHaveAlphaChannel</name></member>
      <member refid="class_a_building_variant_1a524e2f464e2bc23de0b7ad774f80ad9f" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>FindBuildingVariantById</name></member>
      <member refid="class_a_building_core_base_1a9f822a8ddd547db712f59c1d2515c528" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>GenerateNewJSONFromUnrealMetadata</name></member>
      <member refid="class_a_building_core_base_1a7a7b0860b65aa01fc25aef624bd3ecc7" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetAbsolutePath</name></member>
      <member refid="class_a_building_variant_1a4422763703ea90781a1b7bfe7d44616a" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetAllBuildings</name></member>
      <member refid="class_a_building_variant_1add8f0abe430b862eaffaa5bff3297a59" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetBuildingInfoCollectionClass</name></member>
      <member refid="class_a_building_core_base_1a61ee683f16dbf67f7b607883540e34df" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetBuildingInfoContainerClass</name></member>
      <member refid="class_a_building_core_base_1a5a978b631b4e280be0c234be2a6be1ce" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetBuildingManagerClass</name></member>
      <member refid="class_a_building_variant_1a945af99e5b0c35c8fd412638607ad507" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetBuildingsGuids</name></member>
      <member refid="class_a_building_variant_1ac90096a985ae20e8c7a1e57434f6cff6" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetCurrentVariantIndex</name></member>
      <member refid="class_a_building_variant_1a2b17aa8454f4ffa99365e5b4772483d7" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetGuids</name></member>
      <member refid="class_a_building_core_base_1a705e9ed7bfcefbe0f66ecb27205d96f3" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetInfoStorageManager</name></member>
      <member refid="class_a_building_variant_1af7bcc3f2266e1224a63f1a04fc6fe689" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetNonActiveBuildings</name></member>
      <member refid="class_a_building_core_base_1a86b5ca4785feb4d2b50a5dfe690b3400" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>GetPolygonsProcessClass</name></member>
      <member refid="class_a_building_core_base_1a667b15a73a32a951dc96be207ad8535a" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetPositionsManagerClass</name></member>
      <member refid="class_a_building_core_base_1a56783619dfdf3f17c3a7f621dc706194" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetTeleportArrowTransform</name></member>
      <member refid="class_a_building_core_base_1aa31ad0d33b096bbb7a9802f19e243373" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetToggleNotifier</name></member>
      <member refid="class_a_building_core_base_1aed8a853fc441eaf4b1038938a92a05a1" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>GetUpdatedStatusColor</name></member>
      <member refid="class_a_building_variant_1a664a4b04366b28a42117659af107f4ae" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>GuaranteeSpawnedBuilding</name></member>
      <member refid="class_a_building_variant_1a08eb5b1df476ce6ddae6c7322c10bfac" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>Guid</name></member>
      <member refid="class_a_building_variant_1a59607c94e1a8a6c45e592edb599363e3" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>IdsToInfos</name></member>
      <member refid="class_a_building_core_base_1aed1be52f8a7104c17db9d1c5ef0c79de" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>Info</name></member>
      <member refid="class_a_building_variant_1abce2e1c4354347c72f30154e363ac01e" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>InfoCollection</name></member>
      <member refid="class_a_building_core_base_1a4d3b7e3e1259fd6ddb0479a8c5fbe1f9" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>InitializeInfo</name></member>
      <member refid="class_a_building_core_base_1ae81d3b8ba63e7aea5c0ad8af51e0dce5" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>InitializeStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1a41b090cf998c933c7245df439f98fc27" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>InitPolygonsProcessor</name></member>
      <member refid="class_a_building_core_base_1a7a3823deefffa0abf48cc7757383e43d" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>InitPositionSettings</name></member>
      <member refid="class_a_building_variant_1a1609e765fc5341f37b68ad0e5a607b74" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>IsBuildingContainedInAnyVariant</name></member>
      <member refid="class_a_building_variant_1a7b02305363c8b8bd1830ebb985d15fd0" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>IsBuildingFirstPlace</name></member>
      <member refid="class_a_building_variant_1a849e9d4a87740cc4ec46b7bf50dcd943" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>IsBuildingNotVariantOrFirstVariant</name></member>
      <member refid="class_a_building_variant_1a214cc8ca525001afaeb76cd54ecf2708" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>IsFirstBuilding</name></member>
      <member refid="class_a_building_variant_1a79625a1bf32af69c5bd7efb3c40fcf3f" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>IsNeedRemovePolygonsForNonActive</name></member>
      <member refid="class_a_building_core_base_1a323f474d0bb2d94aba906da5ea2614b8" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>JsonContent</name></member>
      <member refid="class_a_building_core_base_1afe5d9dc12af8a717ac22d351db321ba5" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>JsonUpdatedStatusColorMap</name></member>
      <member refid="class_a_building_core_base_1afc618d409375936228b65e1670f071fd" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>NeedUpdateJSON</name></member>
      <member refid="class_a_building_variant_1ab86c8d0b6c0061e25be63bd9172d2cd2" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>NextVariant</name></member>
      <member refid="class_a_building_core_base_1aa2a4b7972645d5c214aa5802f76ff53a" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>OnConstruction</name></member>
      <member refid="class_a_building_core_base_1a207fe960d10c02b72ac8f4066fac374e" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>OnDestroyedVisualAction</name></member>
      <member refid="class_a_building_core_base_1a75204d8ab70741124cbd9ba55ccaa6fc" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>OnInfoSet</name></member>
      <member refid="class_a_building_variant_1ae6808adaf49392ff2726325cb7fe57fc" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>OrderedInformation</name></member>
      <member refid="class_a_building_core_base_1a9ba41ae213d28363407d6b2df2bd26b7" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>PolygonsProcessor</name></member>
      <member refid="class_a_building_core_base_1ac8c07cf16f1ee79ca3bd0ed635a04d2a" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>PositionsManager</name></member>
      <member refid="class_a_building_variant_1af990542682c1f3573e61f087c585785d" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>PostInitProperties</name></member>
      <member refid="class_a_building_variant_1a933153e84822af2a5a98c146f76afca7" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>PostLoad</name></member>
      <member refid="class_a_building_variant_1aae5275a34e0cae9e597af74d19e25605" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>PrevVariant</name></member>
      <member refid="class_a_building_core_base_1ac9dc567c7c432eaddb28000fb2133efd" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>PropagateStaticMobilityToStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1ab3231c150f2bf13d33d171a4e7d0ad35" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>ReadBuildingJSON</name></member>
      <member refid="class_a_building_core_base_1a4bddee987cacc713d1c0746cbdbc2dda" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RefBuildingDataCollector</name></member>
      <member refid="class_a_building_core_base_1a6850415a0bc892df8cc98551077abe11" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>RegisterInInfoStorageManager</name></member>
      <member refid="class_a_building_variant_1a586d714155dd5a974344e8f6757fcadd" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ReInitBuilding</name></member>
      <member refid="class_a_building_variant_1a4a4aa08dca541c8e869cbef667e62ddd" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ReInitBuilding</name></member>
      <member refid="class_a_building_variant_1a774cd97d252581006c6edbeef43bb947" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ReInitBuildings</name></member>
      <member refid="class_a_building_variant_1a6fceca8ef4d0427c51b18c6489279bb9" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ReInitBuildings</name></member>
      <member refid="class_a_building_variant_1ae8a532819e5f146ba2facb7007b8c76a" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>ReInitBuildingsInCollection</name></member>
      <member refid="class_a_building_variant_1abcb9b0f09cdebd0be3a8a0ca7a7c9721" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveBuildingsFromVariant</name></member>
      <member refid="class_a_building_variant_1a1fb461ea0e33d1114a8d19bf21876ec9" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveBuildingsFromVariantByIds</name></member>
      <member refid="class_a_building_variant_1aa1546f7e873ac22d6fdaaa91c03ae6bb" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveBuildingVariant</name></member>
      <member refid="class_a_building_core_base_1a92bfaea50bfa3d34ba792d94e511b9af" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveCartographicPolygons</name></member>
      <member refid="class_a_building_variant_1aa1a7232f35e1384c9b92c7caec3eca3d" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveFromInfoMapVariants</name></member>
      <member refid="class_a_building_variant_1ad1a3761a9d6ccef8d9394eee9a9b50b6" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemovePolygonsForNonActive</name></member>
      <member refid="class_a_building_variant_1a07533a78444b1877126a83a1cbd0cb28" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>RemoveVariant</name></member>
      <member refid="class_a_building_core_base_1af7ddd00a4b58250bb0e6452150055ae6" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>RestorePolygons</name></member>
      <member refid="class_a_building_core_base_1ad92938ffd2868715ca6fde4942f8c88b" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SceneComponent</name></member>
      <member refid="class_a_building_variant_1ada7ef744d627f23ab3b68ab89e48b334" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetActiveVariant</name></member>
      <member refid="class_a_building_core_base_1a800a65984b6cf42b9629529f9c6283de" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>SetBuildingDataInfo</name></member>
      <member refid="class_a_building_core_base_1a74a30edbebfc5d56b477572ca2477b46" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetCollisionResponseChannelForStaticMeshComponents</name></member>
      <member refid="class_a_building_core_base_1a82d5c1cda540165111e94d2cf13c8f75" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>SetDefaultPositionFromUnrealMetadata</name></member>
      <member refid="class_a_building_core_base_1af33e6f0989efd68a2da65bee027f29e8" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetDynamicMaterialForMesh</name></member>
      <member refid="class_a_building_core_base_1a403237fbfd20fe1781c07bb5582320ad" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetDynamicMaterials</name></member>
      <member refid="class_a_building_core_base_1abfdd4d1f97ab517443c242ec0b0bce71" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetMiniIcon</name></member>
      <member refid="class_a_building_core_base_1ac2bb65d69ee2824ceebc6c623b3ab215" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetNewUnrealMetaData</name></member>
      <member refid="class_a_building_core_base_1a5e1d7fc1e69dc3ffe4b200efa0fbf85e" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_base_1af631c960a2fb9ac997b2d18b22aa2bcb" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_base_1ac488e21b5e95781484df20996d0c088d" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetStaticMeshComponentsAndMaterials</name></member>
      <member refid="class_a_building_core_base_1a2d4977c5e5016901b71932cf16742b0b" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetTeleportPoint</name></member>
      <member refid="class_a_building_core_base_1a71168effd7691670a20085226eb420ae" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>SetThisIntoUI</name></member>
      <member refid="class_a_building_core_base_1a22eb4e65eb2974e9c4f95361c0af097f" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SetToggleNotifier</name></member>
      <member refid="class_a_building_core_base_1a5295897d55756d4d403d9b737fe71f42" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>SpawnCartographicPolygon</name></member>
      <member refid="class_a_building_variant_1a8446f42bbf5a652c5fe7b56cb4d4f5d9" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SpawnThisClass</name></member>
      <member refid="class_a_building_variant_1a83c0467dae34188f6caeae34cb5a3186" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticAddBuildingsIntoVariant</name></member>
      <member refid="class_a_building_variant_1a344c34419b9f54ee190373f2b14f5b29" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticCombineBuildings</name></member>
      <member refid="class_a_building_variant_1a2edc3a8a3f9cbca70d8fe9ab92b041d6" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticCombineBuildingsByIds</name></member>
      <member refid="class_a_building_variant_1ae75132c8bf3404b1ee322b250a7d2c4d" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticCombineBuildingsByIds</name></member>
      <member refid="class_a_building_variant_1ae774c7cec98b253a67789838f54844f0" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticNextVariant</name></member>
      <member refid="class_a_building_variant_1ac672393072f2c4b0d83a37530b5295f8" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticPrevVariant</name></member>
      <member refid="class_a_building_variant_1a2b1905b9675e85ebe9f16a4f6e7e8711" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>StaticRemoveBuildingsFromVariant</name></member>
      <member refid="class_a_building_core_base_1a5e2a733b120b7a7d22340db3433da007" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>SwitchActivePolygonsHandler</name></member>
      <member refid="class_a_building_variant_1a31ecc039dae1e78c7d050ba5f5358153" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SwitchCurrentBuilding</name></member>
      <member refid="class_a_building_variant_1ab0dff0952db234cc65fca76c12450170" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>SwitchToOtherBuilding</name></member>
      <member refid="class_a_building_variant_1a3fa8479c14bf05a5e043772fc9562e04" prot="protected" virt="non-virtual"><scope>ABuildingVariant</scope><name>TableController</name></member>
      <member refid="class_a_building_core_base_1a3dfafbcfa571ab74f948d5b72974248f" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>TeleportTransform</name></member>
      <member refid="class_a_building_core_base_1a61cfdd2f6cb2f2e3b90a681b6ec426b4" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>TimerRegistration</name></member>
      <member refid="class_a_building_core_base_1aa96c17596c723e9761a4462744f4d32b" prot="public" virt="virtual"><scope>ABuildingVariant</scope><name>ToggleActive</name></member>
      <member refid="class_a_building_variant_1ac0b9ede2d027fea837b42af770b94400" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>ToggleCurrentBuilding</name></member>
      <member refid="class_a_building_core_base_1a5fc01679285985d6ba7495d304e7bc73" prot="private" virt="non-virtual"><scope>ABuildingVariant</scope><name>ToggleNotifier</name></member>
      <member refid="class_a_building_variant_1a966dbca0274be96d25b825358021a84c" prot="public" virt="non-virtual"><scope>ABuildingVariant</scope><name>UncombineBuildings</name></member>
      <member refid="class_a_building_core_base_1ac225fb80e01553d1ac8e9faac0c7f4b4" prot="protected" virt="virtual"><scope>ABuildingVariant</scope><name>WriteUnrealMetadataToJSON</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
