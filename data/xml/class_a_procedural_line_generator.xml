<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_procedural_line_generator" kind="class" language="C++" prot="public">
    <compoundname>AProceduralLineGenerator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AActor</basecompoundref>
    <includes refid="_procedural_line_generator_8h" local="no">ProceduralLineGenerator.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a916090bf2a3351475ed29cd92bb832ce" prot="public" static="no" mutable="no">
        <type><ref refid="class_a_icons_manager" kindref="compound">AIconsManager</ref> *</type>
        <definition>AIconsManager* AProceduralLineGenerator::IconsManager</definition>
        <argsstring></argsstring>
        <name>IconsManager</name>
        <qualifiedname>AProceduralLineGenerator::IconsManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="24" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1ae1ea227b8f8743163fca05557ffbb58d" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ACesiumGeoreference</ref> *</type>
        <definition>ACesiumGeoreference* AProceduralLineGenerator::CesiumGeoreference</definition>
        <argsstring></argsstring>
        <name>CesiumGeoreference</name>
        <qualifiedname>AProceduralLineGenerator::CesiumGeoreference</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="25" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1afb45a8b7dfc075397f9088e3d9039f8c" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &gt;</type>
        <definition>TArray&lt;FString&gt; AProceduralLineGenerator::AllowedTransportProperty</definition>
        <argsstring></argsstring>
        <name>AllowedTransportProperty</name>
        <qualifiedname>AProceduralLineGenerator::AllowedTransportProperty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="35" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a06acba0e59d1ad24a4969bcfbcfe836c" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">UMaterialInterface</ref> *</type>
        <definition>UMaterialInterface* AProceduralLineGenerator::RoadMaterial</definition>
        <argsstring></argsstring>
        <name>RoadMaterial</name>
        <qualifiedname>AProceduralLineGenerator::RoadMaterial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="38" column="28" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a1d5ddf79b785a85c8911497c1b58c9e7" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_procedura_lline" kindref="compound">AProceduraLline</ref> * &gt;</type>
        <definition>TArray&lt;AProceduraLline*&gt; AProceduralLineGenerator::CreatedLines</definition>
        <argsstring></argsstring>
        <name>CreatedLines</name>
        <qualifiedname>AProceduralLineGenerator::CreatedLines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="41" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a82af76d13d006255cf201ef3f3e00e42" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 AProceduralLineGenerator::minZOffset</definition>
        <argsstring></argsstring>
        <name>minZOffset</name>
        <qualifiedname>AProceduralLineGenerator::minZOffset</qualifiedname>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="28" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a0ed97f98a95775e5fe12163f39dd4fff" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AProceduralLineGenerator::WidthMultiply</definition>
        <argsstring></argsstring>
        <name>WidthMultiply</name>
        <qualifiedname>AProceduralLineGenerator::WidthMultiply</qualifiedname>
        <initializer>= 100.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="31" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_procedural_line_generator_1a012948f1b9d18de5537a7387a379f12c" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_json_object_feature" kindref="compound">FJsonObjectFeature</ref> &gt;</type>
        <definition>TArray&lt;FJsonObjectFeature&gt; AProceduralLineGenerator::ProceduralLinesDataArray</definition>
        <argsstring></argsstring>
        <name>ProceduralLinesDataArray</name>
        <qualifiedname>AProceduralLineGenerator::ProceduralLinesDataArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="88" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_procedural_line_generator_1ad6e5788d093a4f2619284e7d108ac45c" prot="private" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref>, <ref refid="struct_f_json_feature_collection" kindref="compound">FJsonFeatureCollection</ref> &gt;</type>
        <definition>TMap&lt;FString, FJsonFeatureCollection&gt; AProceduralLineGenerator::TransportLineMap</definition>
        <argsstring></argsstring>
        <name>TransportLineMap</name>
        <qualifiedname>AProceduralLineGenerator::TransportLineMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="90" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="90" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_procedural_line_generator_1a384ecef1e5cad11da1166865bf4712f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AProceduralLineGenerator::AProceduralLineGenerator</definition>
        <argsstring>()</argsstring>
        <name>AProceduralLineGenerator</name>
        <qualifiedname>AProceduralLineGenerator::AProceduralLineGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="22" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_a_procedural_line_generator_1af5e4ea5090c8a4c02d49abbc9c01cd82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AProceduralLineGenerator::ParseTransportLines</definition>
        <argsstring>(const FString &amp;JsonStr)</argsstring>
        <name>ParseTransportLines</name>
        <qualifiedname>AProceduralLineGenerator::ParseTransportLines</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>JsonStr</declname>
        </param>
        <briefdescription>
<para>Разбор данных о транспортных линиях из данной строки JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JsonStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Строка JSON, содержащая данные о транспортных линиях.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Этот метод анализирует данные о транспортных линиях из данной строки JSON. Он извлекает релевантную информацию, такую как значения свойств, ID, подкатегории, ширины линий и цветы заливки, и сохраняет их в массиве ProceduralLinesDataArray. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="50" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="44" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_a_procedural_line_generator_1a3be67d1a9d901144fae4e546a32023fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AProceduralLineGenerator::FilterMap</definition>
        <argsstring>()</argsstring>
        <name>FilterMap</name>
        <qualifiedname>AProceduralLineGenerator::FilterMap</qualifiedname>
        <briefdescription>
<para>Фильтрует и отображает ProceduralLinesData на TransportLineMap на основе разрешенных свойств транспорта. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод итерирует через массив AllowedTrasnportProperty и фильтрует ProceduralLinesData на основе поля Property. Каждый отфильтрованный данные затем добавляется в TransportLineMap со свойством Property в качестве ключа.</para>
<para><simplesect kind="note"><para>Этот метод вызывается внутри метода ParseTransportLines. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="60" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="58" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_a_procedural_line_generator_1abba36815149b5765967f829d221f5113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AProceduralLineGenerator::PrepareSpawnFromMap</definition>
        <argsstring>()</argsstring>
        <name>PrepareSpawnFromMap</name>
        <qualifiedname>AProceduralLineGenerator::PrepareSpawnFromMap</qualifiedname>
        <briefdescription>
<para>Подготовка к созданию объектов на основе данных из карты. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод отвечает за подготовку к созданию объектов на основе данных из карты. Он итерирует через TransportLineMap и выполняет необходимые расчеты и проверки перед созданием каждого объекта. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="68" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="76" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_a_procedural_line_generator_1ac9db9cd624f9292674478e57429895e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AProceduralLineGenerator::CheckMultiLine</definition>
        <argsstring>(const FJsonFeatureCollection &amp;Features, int32 VerticalOffset)</argsstring>
        <name>CheckMultiLine</name>
        <qualifiedname>AProceduralLineGenerator::CheckMultiLine</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_feature_collection" kindref="compound">FJsonFeatureCollection</ref> &amp;</type>
          <declname>Features</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>VerticalOffset</declname>
        </param>
        <briefdescription>
<para>Проверить, содержит ли данный <computeroutput>Value</computeroutput> несколько линий и создать актеров соответственно. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Features</parametername>
</parameternamelist>
<parameterdescription>
<para>Объект <computeroutput><ref refid="struct_f_json_feature_collection" kindref="compound">FJsonFeatureCollection</ref></computeroutput>, который нужно проверить на наличие нескольких линий. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VerticalOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Смещение, которое должно быть передано функции <computeroutput>Spawn</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="76" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="88" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_a_procedural_line_generator_1a669c7fa73830ff594733b5ace880ade4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AProceduralLineGenerator::Spawn</definition>
        <argsstring>(const FProceduralLinesProperty &amp;LineData, const FJsonMultiPoint &amp;OriginalCoordinates, int32 VerticalOffset)</argsstring>
        <name>Spawn</name>
        <qualifiedname>AProceduralLineGenerator::Spawn</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_procedural_lines_property" kindref="compound">FProceduralLinesProperty</ref> &amp;</type>
          <declname>LineData</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="struct_f_json_multi_point" kindref="compound">FJsonMultiPoint</ref> &amp;</type>
          <declname>OriginalCoordinates</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
          <declname>VerticalOffset</declname>
        </param>
        <briefdescription>
<para>Создает процедурную линию на основе данных линии, смещения и индекса. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LineData</parametername>
</parameternamelist>
<parameterdescription>
<para>Данные о линии, содержащие информацию о линии. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OriginalCoordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты линии для создания. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VerticalOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Смещение, которое должно быть применено к координате Z каждой точки в линии. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="85" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/ProceduralLineGenerator.cpp" bodystart="103" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="1">
        <label>AProceduralLineGenerator</label>
        <link refid="class_a_procedural_line_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="14">
        <label>ABuildingCore</label>
        <link refid="class_a_building_core"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>SetupCesiumCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>ExistingCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>PositionsManager</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>ABuildingCoreBaseEx</label>
        <link refid="class_a_building_core_base_ex"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>ACesiumCartographicPolygon</label>
      </node>
      <node id="13">
        <label>ADemoViewMetaBuilding</label>
        <link refid="class_a_demo_view_meta_building"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>AIconsGenerator</label>
        <link refid="class_a_icons_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>AIconsManager</label>
        <link refid="class_a_icons_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>RequestCamera</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ChangeGamePlayMode</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>IconsGenerator</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>ProceduralLineGenerator</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>AJrpsPlayerController</label>
        <link refid="class_a_jrps_player_controller"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>AMetaCesiumCartographicPolygon</label>
        <link refid="class_a_meta_cesium_cartographic_polygon"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>AMetaPlayerController</label>
        <link refid="class_a_meta_player_controller"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ControlMode</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>DemoViewMode</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>APlayerController</label>
      </node>
      <node id="1">
        <label>AProceduralLineGenerator</label>
        <link refid="class_a_procedural_line_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>FChangeGamePlayMode</label>
        <link refid="struct_f_change_game_play_mode"/>
      </node>
      <node id="10">
        <label>FControlMode</label>
        <link refid="struct_f_control_mode"/>
      </node>
      <node id="4">
        <label>FRequestCameras</label>
        <link refid="struct_f_request_cameras"/>
      </node>
      <node id="19">
        <label>FSetupCesiumCartographicPolygon</label>
        <link refid="struct_f_setup_cesium_cartographic_polygon"/>
      </node>
      <node id="18">
        <label>UActorComponent</label>
      </node>
      <node id="11">
        <label>UDemoViewWidget</label>
        <link refid="class_u_demo_view_widget"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>MetaDemoViewModeBuilding</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>UPositionsManager</label>
        <link refid="class_u_positions_manager"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>UUserWidget</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" line="16" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/ProceduralLineGenerator.h" bodystart="17" bodyend="91"/>
    <listofallmembers>
      <member refid="class_a_procedural_line_generator_1afb45a8b7dfc075397f9088e3d9039f8c" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>AllowedTransportProperty</name></member>
      <member refid="class_a_procedural_line_generator_1a384ecef1e5cad11da1166865bf4712f6" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>AProceduralLineGenerator</name></member>
      <member refid="class_a_procedural_line_generator_1ae1ea227b8f8743163fca05557ffbb58d" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>CesiumGeoreference</name></member>
      <member refid="class_a_procedural_line_generator_1ac9db9cd624f9292674478e57429895e3" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>CheckMultiLine</name></member>
      <member refid="class_a_procedural_line_generator_1a1d5ddf79b785a85c8911497c1b58c9e7" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>CreatedLines</name></member>
      <member refid="class_a_procedural_line_generator_1a3be67d1a9d901144fae4e546a32023fd" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>FilterMap</name></member>
      <member refid="class_a_procedural_line_generator_1a916090bf2a3351475ed29cd92bb832ce" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>IconsManager</name></member>
      <member refid="class_a_procedural_line_generator_1a82af76d13d006255cf201ef3f3e00e42" prot="protected" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>minZOffset</name></member>
      <member refid="class_a_procedural_line_generator_1af5e4ea5090c8a4c02d49abbc9c01cd82" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>ParseTransportLines</name></member>
      <member refid="class_a_procedural_line_generator_1abba36815149b5765967f829d221f5113" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>PrepareSpawnFromMap</name></member>
      <member refid="class_a_procedural_line_generator_1a012948f1b9d18de5537a7387a379f12c" prot="private" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>ProceduralLinesDataArray</name></member>
      <member refid="class_a_procedural_line_generator_1a06acba0e59d1ad24a4969bcfbcfe836c" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>RoadMaterial</name></member>
      <member refid="class_a_procedural_line_generator_1a669c7fa73830ff594733b5ace880ade4" prot="public" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>Spawn</name></member>
      <member refid="class_a_procedural_line_generator_1ad6e5788d093a4f2619284e7d108ac45c" prot="private" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>TransportLineMap</name></member>
      <member refid="class_a_procedural_line_generator_1a0ed97f98a95775e5fe12163f39dd4fff" prot="protected" virt="non-virtual"><scope>AProceduralLineGenerator</scope><name>WidthMultiply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
