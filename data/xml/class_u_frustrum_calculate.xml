<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_u_frustrum_calculate" kind="class" language="C++" prot="public">
    <compoundname>UFrustrumCalculate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UBlueprintFunctionLibrary</basecompoundref>
    <includes refid="_frustrum_calculate_8h" local="no">FrustrumCalculate.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_u_frustrum_calculate_1ad173572e0e6dbab49bc5430f91e25085" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">constexpr</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref></type>
        <definition>constexpr ECollisionChannel UFrustrumCalculate::SurfaceCollisionChannel</definition>
        <argsstring></argsstring>
        <name>SurfaceCollisionChannel</name>
        <qualifiedname>UFrustrumCalculate::SurfaceCollisionChannel</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECC_GameTraceChannel3</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="16" column="44" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_u_frustrum_calculate_1a60cae6381176de5098d0316864cb924f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; UFrustrumCalculate::CalculateFrustumCorners</definition>
        <argsstring>(const APlayerController *PlayerController, double MaxDistance)</argsstring>
        <name>CalculateFrustumCorners</name>
        <qualifiedname>UFrustrumCalculate::CalculateFrustumCorners</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> APlayerController *</type>
          <declname>PlayerController</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
          <declname>MaxDistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="18" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="13" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a315cbba4099ae27e5701acfee277def2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt;</type>
        <definition>TArray&lt; FVector &gt; UFrustrumCalculate::CalculateIntersectionPoints</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;FrustumCorners, const APlayerController *PlayerController)</argsstring>
        <name>CalculateIntersectionPoints</name>
        <qualifiedname>UFrustrumCalculate::CalculateIntersectionPoints</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>FrustumCorners</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> APlayerController *</type>
          <declname>PlayerController</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="20" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="40" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a44d4dbb6f6ef1b93f4c6863e446cc1ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_geographical_location" kindref="compound">FGeographicalLocation</ref> &gt;</type>
        <definition>TArray&lt; FGeographicalLocation &gt; UFrustrumCalculate::CalculateLonLatPoints</definition>
        <argsstring>(const TArray&lt; FVector &gt; &amp;IntersectionPoints, const UObject *WorldContext)</argsstring>
        <name>CalculateLonLatPoints</name>
        <qualifiedname>UFrustrumCalculate::CalculateLonLatPoints</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &gt; &amp;</type>
          <declname>IntersectionPoints</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="23" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a80810a0f8a983bfbbb04d7a34b258986" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double UFrustrumCalculate::CalculateBaseRoadWidth</definition>
        <argsstring>(const FString &amp;RoadType)</argsstring>
        <name>CalculateBaseRoadWidth</name>
        <qualifiedname>UFrustrumCalculate::CalculateBaseRoadWidth</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>RoadType</declname>
        </param>
        <briefdescription>
<para>Считает базовую ширину дороги для данного типа. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="30" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a111dc725e3837d07a55fd2d653f09f17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double UFrustrumCalculate::CalculateDesiredRelativeRoadWidth</definition>
        <argsstring>(const UObject *WorldContext)</argsstring>
        <name>CalculateDesiredRelativeRoadWidth</name>
        <qualifiedname>UFrustrumCalculate::CalculateDesiredRelativeRoadWidth</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <briefdescription>
<para>Считает желаемую относительную ширину дороги. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="36" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="118" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a317b634d13f34ce0b1f8e0618aceea20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double UFrustrumCalculate::CalculateRelativeRoadWidth</definition>
        <argsstring>(const UObject *WorldContext)</argsstring>
        <name>CalculateRelativeRoadWidth</name>
        <qualifiedname>UFrustrumCalculate::CalculateRelativeRoadWidth</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <briefdescription>
<para>Считает действительную относительную ширину дороги (с учетом кривой <ref refid="class_u_layers_creator_settings_1a09ee0d59f4429d6bb499c59b64d8d5e9" kindref="member">ULayersCreatorSettings::RoadRelativeWidthCurve</ref>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="42" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1ae38c840098dae721f0e3aa4c7e29685e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double UFrustrumCalculate::CalculateRoadWidth</definition>
        <argsstring>(const FString &amp;RoadType, const UObject *WorldContext)</argsstring>
        <name>CalculateRoadWidth</name>
        <qualifiedname>UFrustrumCalculate::CalculateRoadWidth</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>RoadType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <briefdescription>
<para>Считает действительную ширину дороги данного типа. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="48" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a69545e1ba77850b40a2382eab2005d21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
        <definition>double UFrustrumCalculate::CalculateRoadLabelSize</definition>
        <argsstring>(const FString &amp;RoadType, const UObject *WorldContext)</argsstring>
        <name>CalculateRoadLabelSize</name>
        <qualifiedname>UFrustrumCalculate::CalculateRoadLabelSize</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>RoadType</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <briefdescription>
<para>Считает действительный размер подписей дорог для данного типа. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="55" column="23" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a5749a95bb91f7f451c570eb4ec502239" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">K</ref></type>
          </param>
          <param>
            <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">typename</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">V</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">V</ref></type>
        <definition>V UFrustrumCalculate::FindLocalPlayerSurfaceHeightCorrespondent</definition>
        <argsstring>(const UObject *WorldContext, const TMap&lt; K, V &gt; &amp;HeightLookupTable, const ECollisionChannel &amp;CollisionChannel=SurfaceCollisionChannel)</argsstring>
        <name>FindLocalPlayerSurfaceHeightCorrespondent</name>
        <qualifiedname>UFrustrumCalculate::FindLocalPlayerSurfaceHeightCorrespondent</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TMap</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">K</ref>, <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">V</ref> &gt; &amp;</type>
          <declname>HeightLookupTable</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref> &amp;</type>
          <declname>CollisionChannel</declname>
          <defval><ref refid="class_u_frustrum_calculate_1ad173572e0e6dbab49bc5430f91e25085" kindref="member">SurfaceCollisionChannel</ref></defval>
        </param>
        <briefdescription>
<para>Ищет соответствующее текущей высоте локального игрока значение. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="63" column="18" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" bodystart="85" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a290567f91061ef01271a85a2547d976b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 UFrustrumCalculate::FindLocalPlayerRoadZoomLevel</definition>
        <argsstring>(const UObject *WorldContext, const ECollisionChannel &amp;CollisionChannel=SurfaceCollisionChannel)</argsstring>
        <name>FindLocalPlayerRoadZoomLevel</name>
        <qualifiedname>UFrustrumCalculate::FindLocalPlayerRoadZoomLevel</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref> &amp;</type>
          <declname>CollisionChannel</declname>
          <defval><ref refid="class_u_frustrum_calculate_1ad173572e0e6dbab49bc5430f91e25085" kindref="member">SurfaceCollisionChannel</ref></defval>
        </param>
        <briefdescription>
<para>Ищет соответствующий текущей высоте локального игрока уровень масштаба дорог. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="71" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a69cdc0e6d921b8f3c1d93031f12ee3c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">int32</ref></type>
        <definition>int32 UFrustrumCalculate::FindLocalPlayerTextZoomLevel</definition>
        <argsstring>(const UObject *WorldContext, const ECollisionChannel &amp;CollisionChannel=SurfaceCollisionChannel)</argsstring>
        <name>FindLocalPlayerTextZoomLevel</name>
        <qualifiedname>UFrustrumCalculate::FindLocalPlayerTextZoomLevel</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> UObject *</type>
          <declname>WorldContext</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ECollisionChannel</ref> &amp;</type>
          <declname>CollisionChannel</declname>
          <defval><ref refid="class_u_frustrum_calculate_1ad173572e0e6dbab49bc5430f91e25085" kindref="member">SurfaceCollisionChannel</ref></defval>
        </param>
        <briefdescription>
<para>Ищет соответствующий текущей высоте локального игрока уровень масштаба текста. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="78" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_u_frustrum_calculate_1a2ac30cb2730cf8f09c20c16016301b53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref></type>
        <definition>FVector UFrustrumCalculate::ChoosePointBasedOnDistance</definition>
        <argsstring>(const FVector &amp;Start, const FVector &amp;End, double MaxDistance)</argsstring>
        <name>ChoosePointBasedOnDistance</name>
        <qualifiedname>UFrustrumCalculate::ChoosePointBasedOnDistance</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>Start</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector</ref> &amp;</type>
          <declname>End</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">double</ref></type>
          <declname>MaxDistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="81" column="24" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Private/FrustrumCalculate.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UFrustrumCalculate</label>
        <link refid="class_u_frustrum_calculate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>UBlueprintFunctionLibrary</label>
      </node>
      <node id="1">
        <label>UFrustrumCalculate</label>
        <link refid="class_u_frustrum_calculate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" line="11" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Plugins/META/Code/LayersCreator/Source/MathLibrary/Public/FrustrumCalculate.h" bodystart="12" bodyend="82"/>
    <listofallmembers>
      <member refid="class_u_frustrum_calculate_1a80810a0f8a983bfbbb04d7a34b258986" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateBaseRoadWidth</name></member>
      <member refid="class_u_frustrum_calculate_1a111dc725e3837d07a55fd2d653f09f17" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateDesiredRelativeRoadWidth</name></member>
      <member refid="class_u_frustrum_calculate_1a60cae6381176de5098d0316864cb924f" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateFrustumCorners</name></member>
      <member refid="class_u_frustrum_calculate_1a315cbba4099ae27e5701acfee277def2" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateIntersectionPoints</name></member>
      <member refid="class_u_frustrum_calculate_1a44d4dbb6f6ef1b93f4c6863e446cc1ba" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateLonLatPoints</name></member>
      <member refid="class_u_frustrum_calculate_1a317b634d13f34ce0b1f8e0618aceea20" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateRelativeRoadWidth</name></member>
      <member refid="class_u_frustrum_calculate_1a69545e1ba77850b40a2382eab2005d21" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateRoadLabelSize</name></member>
      <member refid="class_u_frustrum_calculate_1ae38c840098dae721f0e3aa4c7e29685e" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>CalculateRoadWidth</name></member>
      <member refid="class_u_frustrum_calculate_1a2ac30cb2730cf8f09c20c16016301b53" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>ChoosePointBasedOnDistance</name></member>
      <member refid="class_u_frustrum_calculate_1a290567f91061ef01271a85a2547d976b" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>FindLocalPlayerRoadZoomLevel</name></member>
      <member refid="class_u_frustrum_calculate_1a5749a95bb91f7f451c570eb4ec502239" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>FindLocalPlayerSurfaceHeightCorrespondent</name></member>
      <member refid="class_u_frustrum_calculate_1a69cdc0e6d921b8f3c1d93031f12ee3c4" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>FindLocalPlayerTextZoomLevel</name></member>
      <member refid="class_u_frustrum_calculate_1ad173572e0e6dbab49bc5430f91e25085" prot="public" virt="non-virtual"><scope>UFrustrumCalculate</scope><name>SurfaceCollisionChannel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
