<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="ru">
  <compounddef id="class_a_icons_manager" kind="class" language="C++" prot="public">
    <compoundname>AIconsManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AActor</basecompoundref>
    <includes refid="_icons_manager_8h" local="no">IconsManager.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_icons_manager_1a46e3e2a1c7efa089f219f62c9ac49461" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_request_cameras" kindref="compound">FRequestCameras</ref></type>
        <definition>FRequestCameras AIconsManager::RequestCamera</definition>
        <argsstring></argsstring>
        <name>RequestCamera</name>
        <qualifiedname>AIconsManager::RequestCamera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="49" column="25" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ab1572909a707e043c9d3fbeac78475b1" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FVector2D</ref> &gt;</type>
        <definition>TArray&lt;FVector2D&gt; AIconsManager::SquarePoints</definition>
        <argsstring></argsstring>
        <name>SquarePoints</name>
        <qualifiedname>AIconsManager::SquarePoints</qualifiedname>
        <briefdescription>
<para>Переменная SquarePoints хранит массив 2D-векторов, представляющих точки квадрата. </para>
        </briefdescription>
        <detaileddescription>
<para>Она объявляется как UPROPERTY, что подразумевает, что ее можно получать и изменять в Blueprint-скриптах.</para>
<para>Пример использования: TArray&lt;FVector2D&gt; SquarePoints; SquarePoints.Add(FVector2D(0, 0)); SquarePoints.Add(FVector2D(1, 0)); SquarePoints.Add(FVector2D(1, 1)); SquarePoints.Add(FVector2D(0, 1)); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="63" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a90fafcd4bb8f466f842eedb385e59feb" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_change_game_play_mode" kindref="compound">FChangeGamePlayMode</ref></type>
        <definition>FChangeGamePlayMode AIconsManager::ChangeGamePlayMode</definition>
        <argsstring></argsstring>
        <name>ChangeGamePlayMode</name>
        <qualifiedname>AIconsManager::ChangeGamePlayMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="72" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a12f2c0fd877201fab56fff2fa18d3620" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString AIconsManager::PointsJsonSource</definition>
        <argsstring></argsstring>
        <name>PointsJsonSource</name>
        <qualifiedname>AIconsManager::PointsJsonSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="100" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1aa29722c800d5bcc6832f4d6a6ecc1bec" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString AIconsManager::TransportPointsJsonSource</definition>
        <argsstring></argsstring>
        <name>TransportPointsJsonSource</name>
        <qualifiedname>AIconsManager::TransportPointsJsonSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="103" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a8cd7667fcda92450187f7d3edc34e13c" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref></type>
        <definition>FString AIconsManager::TransportLineJsonSource</definition>
        <argsstring></argsstring>
        <name>TransportLineJsonSource</name>
        <qualifiedname>AIconsManager::TransportLineJsonSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="106" column="17" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ae7948270fb830edcf8f7ec78d8de6136" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> * &gt;</type>
        <definition>TArray&lt;ADecayPin*&gt; AIconsManager::Pins</definition>
        <argsstring></argsstring>
        <name>Pins</name>
        <qualifiedname>AIconsManager::Pins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="109" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a16c9a5c4abeafe7c9075c7e904991b41" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_a_icons_generator" kindref="compound">AIconsGenerator</ref> &gt;</type>
        <definition>TSubclassOf&lt;AIconsGenerator&gt; AIconsManager::IconsGeneratorClass</definition>
        <argsstring></argsstring>
        <name>IconsGeneratorClass</name>
        <qualifiedname>AIconsManager::IconsGeneratorClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="112" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ad9997120cf63781f2eeded135b38f11b" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TSubclassOf</ref>&lt; <ref refid="class_a_procedural_line_generator" kindref="compound">AProceduralLineGenerator</ref> &gt;</type>
        <definition>TSubclassOf&lt;AProceduralLineGenerator&gt; AIconsManager::ProceduralLineGeneratorClass</definition>
        <argsstring></argsstring>
        <name>ProceduralLineGeneratorClass</name>
        <qualifiedname>AIconsManager::ProceduralLineGeneratorClass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="115" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ae5542bd475dd227b3b3a1cd6201e4921" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>float AIconsManager::CollapseHeightThreshold</definition>
        <argsstring></argsstring>
        <name>CollapseHeightThreshold</name>
        <qualifiedname>AIconsManager::CollapseHeightThreshold</qualifiedname>
        <initializer>= 4000.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="118" column="15" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a845c81de6599d2801e0dc39ebd0382f6" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTimerHandle</ref></type>
        <definition>FTimerHandle AIconsManager::NearestActorTimer</definition>
        <argsstring></argsstring>
        <name>NearestActorTimer</name>
        <qualifiedname>AIconsManager::NearestActorTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="121" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1aca86eeb0a0fd5781db95409ab6dc7060" prot="public" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_actor_map" kindref="compound">FActorMap</ref> &gt;</type>
        <definition>TArray&lt;FActorMap&gt; AIconsManager::AllMaps</definition>
        <argsstring></argsstring>
        <name>AllMaps</name>
        <qualifiedname>AIconsManager::AllMaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="124" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_a_icons_manager_1ad300b9458d687a65bb5b940bd476fb87" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTimerHandle</ref></type>
        <definition>FTimerHandle AIconsManager::Timer</definition>
        <argsstring></argsstring>
        <name>Timer</name>
        <qualifiedname>AIconsManager::Timer</qualifiedname>
        <briefdescription>
<para>Переменная для хранения обработчика таймера. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная используется для управления таймерами в Blueprint. Ее можно редактировать в любом месте и читать/писать в Blueprint.</para>
<para>Использование: <programlisting filename=".cpp"><codeline><highlight class="normal">UPROPERTY(<ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">EditAnywhere</ref>,<sp/><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">BlueprintReadWrite</ref>)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FTimerHandle</ref><sp/><ref refid="class_a_icons_manager_1ad300b9458d687a65bb5b940bd476fb87" kindref="member">Timer</ref>;</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="222" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a9646cecbce7743a02aaf41c56d346b30" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AIconsManager::bNeedCallIcon</definition>
        <argsstring></argsstring>
        <name>bNeedCallIcon</name>
        <qualifiedname>AIconsManager::bNeedCallIcon</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">false</ref></initializer>
        <briefdescription>
<para>Переменная, указывающая, требуется ли иконка вызова. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта переменная - логический флаг, указывающий, нужна ли иконка вызова. По умолчанию устанавливается в false.</para>
<para><simplesect kind="see"><para>UPROPERTY() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="260" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ab04d0f3f3fb1ae9f6dc55ee12fcfe2ec" prot="protected" static="no" mutable="no">
        <type><ref refid="class_a_icons_generator" kindref="compound">AIconsGenerator</ref> *</type>
        <definition>AIconsGenerator* AIconsManager::IconsGenerator</definition>
        <argsstring></argsstring>
        <name>IconsGenerator</name>
        <qualifiedname>AIconsManager::IconsGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="263" column="25" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a8c0b0be0227c66d97a761aee1a05741f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_a_procedural_line_generator" kindref="compound">AProceduralLineGenerator</ref> *</type>
        <definition>AProceduralLineGenerator* AIconsManager::ProceduralLineGenerator</definition>
        <argsstring></argsstring>
        <name>ProceduralLineGenerator</name>
        <qualifiedname>AIconsManager::ProceduralLineGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="266" column="34" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1a3fac115f9f5eab0e859edb19b601010c" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
        <definition>const float AIconsManager::RadiusAround</definition>
        <argsstring></argsstring>
        <name>RadiusAround</name>
        <qualifiedname>AIconsManager::RadiusAround</qualifiedname>
        <initializer>= 50000.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="268" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1aacf8d0b486b2c5fed281ae7a20ceaa71" prot="protected" static="no" mutable="no">
        <type><ref refid="class_a_meta_player_controller" kindref="compound">AMetaPlayerController</ref> *</type>
        <definition>AMetaPlayerController* AIconsManager::MetaPlayerController</definition>
        <argsstring></argsstring>
        <name>MetaPlayerController</name>
        <qualifiedname>AIconsManager::MetaPlayerController</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="271" column="31" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_icons_manager_1ae4c598f9556246d2efa324cbc5312801" prot="protected" static="no" mutable="no">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ACesiumGeoreference</ref> *</type>
        <definition>ACesiumGeoreference* AIconsManager::CesiumGeoreference</definition>
        <argsstring></argsstring>
        <name>CesiumGeoreference</name>
        <qualifiedname>AIconsManager::CesiumGeoreference</qualifiedname>
        <initializer>= <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="274" column="29" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="274" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_icons_manager_1ab0ab044d0419675f659df36986e161da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AIconsManager::AIconsManager</definition>
        <argsstring>()</argsstring>
        <name>AIconsManager</name>
        <qualifiedname>AIconsManager::AIconsManager</qualifiedname>
        <briefdescription>
<para>Конструктор для класса <ref refid="class_a_icons_manager" kindref="compound">AIconsManager</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот конструктор инициализирует свойство PrimaryActorTick.bCanEverTick в значение true.</para>
<para><simplesect kind="return"><para>Ничего. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="44" column="9" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1ab0de0b733020937f6c7072cb39b3683a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::Launch</definition>
        <argsstring>()</argsstring>
        <name>Launch</name>
        <qualifiedname>AIconsManager::Launch</qualifiedname>
        <briefdescription>
<para>Запускает менеджер значков Icons Manager. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод добавляет динамический делегат к событию OnChangeGameModeCameraFade контроллера MetaPlayerController, который будет вызывать метод HideAllPins менеджера Icons Manager. Он также устанавливает таймер, который будет вызывать метод TrackingForCamera менеджера Icons Manager каждые 0.8 секунд. Напоследок, он регистрирует предупреждающее сообщение в LogTemp.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="85" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1a433c05edaa13cfa8274dbbcdfcac29bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::DestroyIcons</definition>
        <argsstring>()</argsstring>
        <name>DestroyIcons</name>
        <qualifiedname>AIconsManager::DestroyIcons</qualifiedname>
        <briefdescription>
<para>Уничтожает все значки, управляемые менеджером IconsManager. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод проходит через список Pins и линий, созданных ProceduralLineGenerator, и уничтожает каждую из них. Он также уничтожает ProceduralLineGenerator, IconsGenerator и, наконец, сам IconsManager.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="97" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="84" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1ab693391366dd59dbc1c5d19c1c3b8035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::BuildActorMaps</definition>
        <argsstring>()</argsstring>
        <name>BuildActorMaps</name>
        <qualifiedname>AIconsManager::BuildActorMaps</qualifiedname>
        <briefdescription>
<para>Этот метод создает карты актеров. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод заполняет переменную <computeroutput>AllMaps</computeroutput> актерами и их местоположениями в радиусе вокруг каждого актера. Он также запускает <computeroutput>NearestActorTimer</computeroutput>, если <computeroutput>AllMaps</computeroutput> не пуст.</para>
<para><simplesect kind="return"><para>Void. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="135" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1a879fee4703fe17568b6aec680ad51487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::MarkNearestActorForCollapse</definition>
        <argsstring>()</argsstring>
        <name>MarkNearestActorForCollapse</name>
        <qualifiedname>AIconsManager::MarkNearestActorForCollapse</qualifiedname>
        <briefdescription>
<para>Отмечает ближайшего актера для схлопывания на основе местоположения камеры. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод определяет ближайшего актера к местоположению камеры и отмечает его для схлопывания. Местоположение камеры преобразуется в долготу, широту и высоту с использованием CesiumGeoreference. Если высота выше порогового значения CollapseHeightThreshold, необходимо схлопывание. Затем метод проходит по всем картам и находит ближайшего актера для каждой карты. После того как ближайший актер найден для каждой карты, он отмечается для схлопывания. Отметка актеров производится асинхронно в отдельном пуле потоков. Наконец, если схлопывание не требуется, выводится предупреждающий журнал.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="151" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="205" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1a67d00f758577134de85eeea45a2a9822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="struct_f_actor_map" kindref="compound">FActorMap</ref> &gt;</type>
        <definition>TArray&lt; FActorMap &gt; AIconsManager::GetActorsAndLocationsInRadiusAroundEachActor</definition>
        <argsstring>(TArray&lt; ADecayPin * &gt; AllPins)</argsstring>
        <name>GetActorsAndLocationsInRadiusAroundEachActor</name>
        <qualifiedname>AIconsManager::GetActorsAndLocationsInRadiusAroundEachActor</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">TArray</ref>&lt; <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> * &gt;</type>
          <declname>AllPins</declname>
        </param>
        <briefdescription>
<para>Получить список актеров и их местоположений в заданном радиусе вокруг каждого актера. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод принимает массив указателей <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> и возвращает массив объектов <ref refid="struct_f_actor_map" kindref="compound">FActorMap</ref>. Каждый объект <ref refid="struct_f_actor_map" kindref="compound">FActorMap</ref> содержит заданный <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref> и его местоположение, вместе с другими A DecayPins и их соответствующими местоположениями, которые находятся в указанном радиусе от заданного <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>AllPins</parametername>
</parameternamelist>
<parameterdescription>
<para>Массив указателей <ref refid="class_a_decay_pin" kindref="compound">ADecayPin</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Массив объектов <ref refid="struct_f_actor_map" kindref="compound">FActorMap</ref>, которые содержат ADecayPins и их местоположения. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="163" column="16" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="166" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_a_icons_manager_1acdfebab7a5eeca7d387e3e627d752f5e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>AIconsManager::BeginPlay</qualifiedname>
        <briefdescription>
<para>Инициализирует объект IconsManager при начале игрового процесса. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод автоматически вызывается игровым движком при начале игрового процесса. Он настраивает привязку событий для прослушивания изменений затемнения камеры и ведет слежение за камерой.</para>
<para><simplesect kind="note"><para>Метод Super::BeginPlay() вызывается, чтобы гарантировать выполнение базовой реализации <ref refid="class_a_icons_manager_1acdfebab7a5eeca7d387e3e627d752f5e" kindref="member">BeginPlay()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="174" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="23" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1a1d69316c7ca488b4752be77f9ac04ed8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::EndPlay</definition>
        <argsstring>(const EEndPlayReason::Type EndPlayReason) override</argsstring>
        <name>EndPlay</name>
        <qualifiedname>AIconsManager::EndPlay</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> EEndPlayReason::Type</type>
          <declname>EndPlayReason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="176" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1af522a42d1d32deae98be5733f346ec2f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::ReceiveData</definition>
        <argsstring>()</argsstring>
        <name>ReceiveData</name>
        <qualifiedname>AIconsManager::ReceiveData</qualifiedname>
        <briefdescription>
<para>Получает данные от IconsGenerator и выполняет необходимые действия. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод отвечает за получение данных от IconsGenerator и выполнение необходимых действий, таких как обновление Pins, построение карт актеров и запись предупреждающего сообщения в лог.</para>
<para><simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="187" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1a07a422f6ea60a2d1dcb875f289bfa9a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::TrackingForCamera</definition>
        <argsstring>()</argsstring>
        <name>TrackingForCamera</name>
        <qualifiedname>AIconsManager::TrackingForCamera</qualifiedname>
        <briefdescription>
<para>Отслеживание для камеры. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод отвечает за выполнение операций слежения за камерой. Если установлен флаг NeedCallIcon, он сразу же возвратит управление, не выполняя логику слежения. В противном случае он отправит запрос на инициацию процесса слежения за камерой.</para>
<para><simplesect kind="note"><para>Запрос на слежение за камерой передается с использованием события RequestCamera. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="199" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="112" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1abc1f6a2768ee50de0170d69ff21b5dd7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::Tick</definition>
        <argsstring>(float DeltaSeconds) override</argsstring>
        <name>Tick</name>
        <qualifiedname>AIconsManager::Tick</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">float</ref></type>
          <declname>DeltaSeconds</declname>
        </param>
        <briefdescription>
<para>Выполняет функциональность тика для менеджера иконок. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод вызывается каждый кадр для обновления состояния менеджера иконок.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeltaSeconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Время с момента последнего тика в секундах.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ничего. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="209" column="22" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_a_icons_manager_1ab0228d29e267e84742f41e2cb4fcd522" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::HideAllPins</definition>
        <argsstring>(EDirectControlMode AvatarState, bool IsCameraFade, bool NeedHide)</argsstring>
        <name>HideAllPins</name>
        <qualifiedname>AIconsManager::HideAllPins</qualifiedname>
        <param>
          <type><ref refid="_control_mode_8h_1ad3d036df4f90ea3e20acea98ff0ccd75" kindref="member">EDirectControlMode</ref></type>
          <declname>AvatarState</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>IsCameraFade</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>NeedHide</declname>
        </param>
        <briefdescription>
<para>Скрывает все маркеры на основании состояния аватара и других условий. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод используется для скрытия всех маркеров на основании состояния аватара и других условий. Если параметр <computeroutput>NeedHide</computeroutput> является true, он устанавливает переменную <computeroutput>NeedCallIcon</computeroutput> и передает изменение в режим игры. Если параметр <computeroutput>NeedHide</computeroutput> является false, он проверяет параметр <computeroutput>AvatarState</computeroutput> и устанавливает переменную <computeroutput>NeedCallIcon</computeroutput> соответствующим образом. Затем он передает изменение в режим игры на основе обновленного значения <computeroutput>NeedCallIcon</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>AvatarState</parametername>
</parameternamelist>
<parameterdescription>
<para>Состояние аватара для определения видимости маркеров. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsCameraFade</parametername>
</parameternamelist>
<parameterdescription>
<para>Не используется в логике этого метода. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NeedHide</parametername>
</parameternamelist>
<parameterdescription>
<para>Если true, скрывает все маркеры и передает изменение в режим игры. Если false, обновляет <computeroutput>NeedCallIcon</computeroutput> и передает изменение в режим игры на основе состояния аватара. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="237" column="14" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="130" bodyend="157"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_a_icons_manager_1ae18d0228afc033e6909ee12adabf6473" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">void</ref></type>
        <definition>void AIconsManager::LoadJsonMetroStationsDataFromDisk</definition>
        <argsstring>(FString &amp;OutJsonString, const FString &amp;FileName)</argsstring>
        <name>LoadJsonMetroStationsDataFromDisk</name>
        <qualifiedname>AIconsManager::LoadJsonMetroStationsDataFromDisk</qualifiedname>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>OutJsonString</declname>
        </param>
        <param>
          <type><ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">const</ref> <ref refid="_mass_l_o_d_types_8h_1a640a07441330729796f6bdaba973e7a8a6a061313d22e51e0f25b7cd4dc065233" kindref="member">FString</ref> &amp;</type>
          <declname>FileName</declname>
        </param>
        <briefdescription>
<para>Функция для загрузки JSON-данных из локального хранилища. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>OutJsonString</parametername>
</parameternamelist>
<parameterdescription>
<para>Выходная строка неподготовленными JSON-данными </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя файла, который мы хотим загрузить из хранилища.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="248" column="21" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Private/Core/Hybrid/IconsManager.cpp" bodystart="159" bodyend="164"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="1">
        <label>AIconsManager</label>
        <link refid="class_a_icons_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AActor</label>
      </node>
      <node id="13">
        <label>ABuildingCore</label>
        <link refid="class_a_building_core"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>SetupCesiumCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>ExistingCartographicPolygon</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>ABuildingCoreBase</label>
        <link refid="class_a_building_core_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>PositionsManager</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>ABuildingCoreBaseEx</label>
        <link refid="class_a_building_core_base_ex"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>ACesiumCartographicPolygon</label>
      </node>
      <node id="12">
        <label>ADemoViewMetaBuilding</label>
        <link refid="class_a_demo_view_meta_building"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>AIconsGenerator</label>
        <link refid="class_a_icons_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>AIconsManager</label>
        <link refid="class_a_icons_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>RequestCamera</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ChangeGamePlayMode</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>IconsGenerator</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>ProceduralLineGenerator</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>MetaPlayerController</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>AJrpsPlayerController</label>
        <link refid="class_a_jrps_player_controller"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>AMetaCesiumCartographicPolygon</label>
        <link refid="class_a_meta_cesium_cartographic_polygon"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>AMetaPlayerController</label>
        <link refid="class_a_meta_player_controller"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ControlMode</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>DemoViewMode</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>APlayerController</label>
      </node>
      <node id="21">
        <label>AProceduralLineGenerator</label>
        <link refid="class_a_procedural_line_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>IconsManager</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>FChangeGamePlayMode</label>
        <link refid="struct_f_change_game_play_mode"/>
      </node>
      <node id="9">
        <label>FControlMode</label>
        <link refid="struct_f_control_mode"/>
      </node>
      <node id="3">
        <label>FRequestCameras</label>
        <link refid="struct_f_request_cameras"/>
      </node>
      <node id="18">
        <label>FSetupCesiumCartographicPolygon</label>
        <link refid="struct_f_setup_cesium_cartographic_polygon"/>
      </node>
      <node id="17">
        <label>UActorComponent</label>
      </node>
      <node id="10">
        <label>UDemoViewWidget</label>
        <link refid="class_u_demo_view_widget"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>MetaDemoViewModeBuilding</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>UPositionsManager</label>
        <link refid="class_u_positions_manager"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>UUserWidget</label>
      </node>
    </collaborationgraph>
    <location file="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" line="32" column="1" bodyfile="/home/agnessa/Desktop/work/meta_core/Source/MetaMoscow/Public/Core/Hybrid/IconsManager.h" bodystart="33" bodyend="275"/>
    <listofallmembers>
      <member refid="class_a_icons_manager_1ab0ab044d0419675f659df36986e161da" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>AIconsManager</name></member>
      <member refid="class_a_icons_manager_1aca86eeb0a0fd5781db95409ab6dc7060" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>AllMaps</name></member>
      <member refid="class_a_icons_manager_1acdfebab7a5eeca7d387e3e627d752f5e" prot="protected" virt="virtual"><scope>AIconsManager</scope><name>BeginPlay</name></member>
      <member refid="class_a_icons_manager_1a9646cecbce7743a02aaf41c56d346b30" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>bNeedCallIcon</name></member>
      <member refid="class_a_icons_manager_1ab693391366dd59dbc1c5d19c1c3b8035" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>BuildActorMaps</name></member>
      <member refid="class_a_icons_manager_1ae4c598f9556246d2efa324cbc5312801" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>CesiumGeoreference</name></member>
      <member refid="class_a_icons_manager_1a90fafcd4bb8f466f842eedb385e59feb" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>ChangeGamePlayMode</name></member>
      <member refid="class_a_icons_manager_1ae5542bd475dd227b3b3a1cd6201e4921" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>CollapseHeightThreshold</name></member>
      <member refid="class_a_icons_manager_1a433c05edaa13cfa8274dbbcdfcac29bd" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>DestroyIcons</name></member>
      <member refid="class_a_icons_manager_1a1d69316c7ca488b4752be77f9ac04ed8" prot="protected" virt="virtual"><scope>AIconsManager</scope><name>EndPlay</name></member>
      <member refid="class_a_icons_manager_1a67d00f758577134de85eeea45a2a9822" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>GetActorsAndLocationsInRadiusAroundEachActor</name></member>
      <member refid="class_a_icons_manager_1ab0228d29e267e84742f41e2cb4fcd522" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>HideAllPins</name></member>
      <member refid="class_a_icons_manager_1ab04d0f3f3fb1ae9f6dc55ee12fcfe2ec" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>IconsGenerator</name></member>
      <member refid="class_a_icons_manager_1a16c9a5c4abeafe7c9075c7e904991b41" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>IconsGeneratorClass</name></member>
      <member refid="class_a_icons_manager_1ab0de0b733020937f6c7072cb39b3683a" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>Launch</name></member>
      <member refid="class_a_icons_manager_1ae18d0228afc033e6909ee12adabf6473" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>LoadJsonMetroStationsDataFromDisk</name></member>
      <member refid="class_a_icons_manager_1a879fee4703fe17568b6aec680ad51487" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>MarkNearestActorForCollapse</name></member>
      <member refid="class_a_icons_manager_1aacf8d0b486b2c5fed281ae7a20ceaa71" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>MetaPlayerController</name></member>
      <member refid="class_a_icons_manager_1a845c81de6599d2801e0dc39ebd0382f6" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>NearestActorTimer</name></member>
      <member refid="class_a_icons_manager_1ae7948270fb830edcf8f7ec78d8de6136" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>Pins</name></member>
      <member refid="class_a_icons_manager_1a12f2c0fd877201fab56fff2fa18d3620" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>PointsJsonSource</name></member>
      <member refid="class_a_icons_manager_1a8c0b0be0227c66d97a761aee1a05741f" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>ProceduralLineGenerator</name></member>
      <member refid="class_a_icons_manager_1ad9997120cf63781f2eeded135b38f11b" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>ProceduralLineGeneratorClass</name></member>
      <member refid="class_a_icons_manager_1a3fac115f9f5eab0e859edb19b601010c" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>RadiusAround</name></member>
      <member refid="class_a_icons_manager_1af522a42d1d32deae98be5733f346ec2f" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>ReceiveData</name></member>
      <member refid="class_a_icons_manager_1a46e3e2a1c7efa089f219f62c9ac49461" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>RequestCamera</name></member>
      <member refid="class_a_icons_manager_1ab1572909a707e043c9d3fbeac78475b1" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>SquarePoints</name></member>
      <member refid="class_a_icons_manager_1abc1f6a2768ee50de0170d69ff21b5dd7" prot="protected" virt="virtual"><scope>AIconsManager</scope><name>Tick</name></member>
      <member refid="class_a_icons_manager_1ad300b9458d687a65bb5b940bd476fb87" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>Timer</name></member>
      <member refid="class_a_icons_manager_1a07a422f6ea60a2d1dcb875f289bfa9a8" prot="protected" virt="non-virtual"><scope>AIconsManager</scope><name>TrackingForCamera</name></member>
      <member refid="class_a_icons_manager_1a8cd7667fcda92450187f7d3edc34e13c" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>TransportLineJsonSource</name></member>
      <member refid="class_a_icons_manager_1aa29722c800d5bcc6832f4d6a6ecc1bec" prot="public" virt="non-virtual"><scope>AIconsManager</scope><name>TransportPointsJsonSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
